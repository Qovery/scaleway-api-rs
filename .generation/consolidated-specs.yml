openapi: 3.0.3
info:
  title: Elastic Metal API
  description: "Scaleway Elastic Metal servers are dedicated physical servers that\
    \ you can order on-demand, like Instances.\nYou can install an OS or other images\
    \ on your Elastic Metal server and connect to it via SSH to use it as you require.\n\
    You can power off the server when you are not using or delete it from your account\
    \ once you have finished using it.\nElastic Metal servers are ideal for large\
    \ workloads, big data, and applications that require increased security and dedicated\
    \ resources.\n\n(switchcolumn)\n<Message type=\"tip\">\n  Check out our dedicated\
    \ APIs to manage [Private Networks](https://www.scaleway.com/en/developers/api/elastic-metal/private-network-api/)\
    \ and [Flexible IPs](https://www.scaleway.com/en/developers/api/elastic-metal-flexible-ip)\
    \ for Elastic Metal servers.\n</Message>\n(switchcolumn)\n\n## Concepts\n\nRefer\
    \ to our [dedicated concepts](https://www.scaleway.com/en/docs/compute/elastic-metal/concepts/)\
    \ page to find definitions of the different terms referring to Elastic Metal servers.\n\
    \n## Quickstart\n\n(switchcolumn)\n(switchcolumn)\n\n1. **Configure your environment\
    \ variables.**\n    ```bash\n    export PROJECT_ID=\"<project-id>\"\n    export\
    \ ACCESS_KEY=\"<access-key>\"\n    export SECRET_KEY=\"<secret-key>\"\n    export\
    \ ZONE=\"<availability-zone>\"\n    ```\n    <Message type=\"note\">\n      This\
    \ is an optional step that seeks to simplify your usage of the Bare Metal API.\n\
    \    </Message>\n\n2. **Edit the POST request payload** that we will use in the\
    \ next step to create an Elastic Metal server. Modify the values in the example\
    \ according to your needs, using the information in the table to help.\n    ```json\n\
    \    {\n    \"offer_id\": \"string\",\n    \"project_id\": \"string\",\n    \"\
    name\": \"string\",\n    \"description\": \"string\",\n    \"tags\": [\n     \
    \   \"tag1\", \"tag2\"\n    ],\n    \"install\": {\n        \"os_id\": \"string\"\
    ,\n        \"hostname\": \"string\",\n        \"ssh_key_ids\": [\n        \"string\"\
    \n        ],\n        \"user\": \"string\",\n        \"password\": \"string\"\
    ,\n        \"service_user\": \"string\",\n        \"service_password\": \"string\"\
    \n    },\n    \"option_ids\": [\n        \"string\"\n    ]\n    }\n    ```\n\n\
    \    | Parameter        | Description                                        \
    \                |\n    | :--------------- | :-----------------------------------------------------------------\
    \ |\n    | `offer_id`           | **REQUIRED** UUID of the Elastic Metal offer\
    \                                         |\n    | `project_id`     | **REQUIRED**\
    \ UUID of the project you want to create your Elastic Metal in.  |\n    | `name`\
    \           | **REQUIRED** Name of the Elastic Metal server (≠hostname)      \
    \                                    |\n    | `description`     | **REQUIRED**\
    \ A description of your server (max 255 characters)                          \
    \   |\n    | `tags`  | **OPTIONAL** An array of tags associated with your server\
    \   |\n    | `os_id`  | The ID of the operating system image to install on the\
    \ server   |\n    | `hostname`  | Hostname of the server   |\n    | `ssh_key_ids`\
    \  | SSH key IDs authorized on the server   |\n    | `user`  | **NULLABLE** A\
    \ regular user to be configured on the server   |\n    | `password`  | **NULLABLE**\
    \ The password for the user account   |\n    | `service_user`  | **NULLABLE**\
    \ A service user for third party services (user to login in services such as BigBlueButton)\
    \  |\n    | `service password`  | **NULLABLE** Password for the service user \
    \  |\n    | `option_ids`  | IDs of options to enable on server  |\n\n    <Message\
    \ type=\"tip\">\n      To find your Project ID you can either use the [IAM API](https://www.scaleway.com/en/developers/api/account#path-projects-list-all-projects-of-an-organization)\
    \ or the [Scaleway console](https://console.scaleway.com/project/settings):\n\
    \    </Message>\n\n3. **Run the following command** to create an Elastic Metal\
    \ server. Make sure you include the payload you edited in the previous step.\n\
    \    ```bash\n    curl -X POST \\\n      -H \"Content-Type: application/json\"\
    \ \\\n      -H \"X-Auth-Token: $SECRET_KEY\" https://api.scaleway.com//baremetal/v1/zones/$ZONE/servers\
    \ \\\n      -d '{\n        \"offer_id\": \"bd757ca3-a71b-4158-9ef5-39436b6db2a4\"\
    ,\n        \"project_id\": \"cc6d123a-bc09-4e24-b5d9-3310f2104e13\",\n       \
    \ \"name\": \"MyElasticMetal\",\n        \"description\": \"My_Elastic_Metal_Server\"\
    ,\n        \"tags\": [\n            \"Ubuntu22\", \"Dedicated\"\n        ],\n\
    \        \"install\": {\n            \"os_id\": \"96e5f0f2-d216-4de2-8a15-68730d877885\"\
    ,\n            \"hostname\": \"elasticmetal.example.com\",\n            \"ssh_key_ids\"\
    : [\n            \"fa05e77f-66b7-43b9-bc21-4dfe3c5bb624\"\n            ],\n  \
    \          \"user\": \"ubuntu\",\n            \"password\": \"mySecretPa$$word\"\
    \n        \"option_ids\": [\n            \"string\"\n        ]\n      }\"\n  \
    \  ```\n4. **List your Elastic Metal servers.**\n    ```bash\n    curl -X GET\
    \ \\\n      -H \"Content-Type: application/json\" \\\n      -H \"X-Auth-Token:\
    \ $SECRET_KEY\" https://api.scaleway.com/baremetal/v1/zones/$ZONE/servers\n  \
    \  ```\n\n5. **Retrieve your Elastic Metal server IP** from the response.\n\n\
    6. **Connect to your Elastic Metal server** using SSH\n    ```bash\n    ssh root@my-elastic-metal-server-ip\n\
    \    ```\n\n(switchcolumn)\n<Message type=\"requirement\">\nTo perform the following\
    \ steps, you must first ensure that:\n  - you have an account and are logged into\
    \ the [Scaleway console](https://console.scaleway.com/organization)\n  - you have\
    \ created an [API key](https://www.scaleway.com/en/docs/identity-and-access-management/iam/how-to/create-api-keys/)\
    \ and that the API key has sufficient [IAM permissions](https://www.scaleway.com/en/docs/identity-and-access-management/iam/reference-content/permission-sets/)\
    \ to perform the actions described on this page.\n  - you have [installed `curl`](https://curl.se/download.html)\n\
    </Message>\n(switchcolumn)\n\n## Technical information\n\n### Features\n\n- Installation\
    \ (Server is installed by preseed [preseed: complete install from a virtual media],\
    \ you must define at least one ssh key to install your server)\n- Start/Stop/Reboot\n\
    - Rescue Reboot, a rescue image is an operating system image designed to help\
    \ you diagnose and fix OS experiencing failures. When your server boot on rescue,\
    \ you can mount your disks and start diagnosing/fixing your image.\n- Billed by\
    \ the minute (billing starts when the server is delivered and stops when the server\
    \ is deleted)\n- IPv6, all servers are available with a /128 IPv6 subnet\n- ReverseIP,\
    \ You can configure your reverse IP (IPv4 and IPv6), you must register the server\
    \ IP in your DNS records before calling the endpoint\n- Basic monitoring with\
    \ ping status\n- Flexible IP is available ([documentation](https://www.scaleway.com/en/developers/api/elastic-metal-flexible-ip))\n\
    \n### Availability Zones\n\nScaleway's infrastructure is spread across different\
    \ [regions and Availability Zones](https://www.scaleway.com/en/docs/console/my-account/reference-content/products-availability/).\n\
    \nElastic Metal servers are available in Paris, Amsterdam, and Warsaw regions,\
    \ with product availability in the following AZs:\n\n| Name      | API ID    \
    \                       |\n|-----------|----------------------------------|\n\
    | Paris     | `fr-par-1` `fr-par-2`            |\n| Amsterdam | `nl-ams-1` `nl-ams-2`\
    \            |\n| Warsaw    | `pl-waw-2` `pl-waw-3`            |\n\n## Technical\
    \ limitations\n\n- Failover IPs are not available in API `v1`, use the API `v1alpha1`\n\
    ## Going further\n\nFor more help using Scaleway Elastic Metal servers, check\
    \ out the following resources:\n- Our [main documentation](https://www.scaleway.com/en/docs/compute/elastic-metal/)\n\
    - The #elastic-metal channel on our [Slack Community](https://www.scaleway.com/en/docs/tutorials/scaleway-slack-community/)\n\
    - Our [support ticketing system](https://www.scaleway.com/en/docs/console/my-account/how-to/open-a-support-ticket)\n\
    ### Troubleshooting\n\n#### How is the installation of Elastic Metal servers done?\n\
    \n- The installation of Elastic Metal servers is done by preseed (± 10min) (preseed:\
    \ complete install from a virtual media)\n#### How can I retrieve my secret key\
    \ and Project ID?\n\nYou can find your [secret key](https://console.scaleway.com/iam/api-keys)\
    \ and your [Project ID](https://console.scaleway.com/project/credentials) in the\
    \ Scaleway console.\n\n#### How can I add my server to a Private Network?\n\n\
    See [our dedicated documentation](/en/developers/api/elastic-metal-flexible-ip)."
  version: v1
servers:
  - url: https://api.scaleway.com
tags:
  - name: Servers
    description: 'Elastic Metal allow you to order dedicated servers on-demand, like
      cloud Instances. A server refers to physical server used to provide the service.

      '
  - name: Server Actions
    description: 'Server actions allows you to start, stop or reboot your servers.

      '
  - name: BMC Access
    description: 'The BMC (Baseboard Management Controller) access allow you to access
      the series console of your Elastic Metal server.

      Access to this feature is available one hour after the installation of the server.

      You need first to create an Remote Access option. Find the ID and the price
      with a call to [`listOffers`](#path-offers-list-offers). Then you can [add the
      option](#path-servers-add-server-option).

      Once added, [create remote access](#path-bmc-access-start-bmc-access). Use [Get
      Remote Access](#path-bmc-access-get-bmc-access) to retrieve the login/password.
      Do not forget to disable the option after use.

      '
  - name: Offers
    description: Lists the IDs of the commercial offers available to deploy.
  - name: Options
    description: Lists the optional features available for this Elastic Metal server.
  - name: OS
    description: An Operating System (OS) is the underlying software installed on
      your server. This command lists the IDs of the OS available for this server.
  - name: Partitioning-schemas
    description: You have the possibility to customize server partitioning schema
      on some offers/os.
  - name: Backups
    description: 'A database backup is a dated export of a Database Instance stored
      on an offsite backend located in a different region than your database, by default.
      Once a backup is created, it can be used to restore the database. Each logical
      database in a Database Instance is backed up and can be restored separately.

      '
  - name: Engines
    description: 'A database engine is the software component that stores and retrieves
      your data from a database. Currently PostgreSQL 11, 12, 13 and 14 are available.
      MySQL is available in version 8.

      '
  - name: Database Instances
    description: 'A Database Instance is made up of one or multiple dedicated compute
      nodes running a single database engine. Two node settings are available: **High-Availability
      (HA)**, with a main node and one replica, and **standalone** with a main node.
      The HA standby node is linked to the main node, using synchronous replication.
      Synchronous replication offers the ability to confirm that all changes intended
      by a transaction have been transferred and applied to the synchronous replica
      node, providing durability to the data.


      **Note**: HA standby nodes are not accessible to users unless the main node
      becomes unavailable and the standby takes over. If you wish to run queries on
      a read-only node, you can use [Read Replicas](#path-read-replicas-create-a-read-replica)


      Read Replicas can be used for certain read-only workflows such as Business Intelligence,
      or for a read-only scaling of your application. Read Replicas use asynchronous
      replication to replicate data from the main node.

      '
  - name: Read Replicas
    description: 'A Read Replica is a live copy of a Database Instance that behaves
      like an Instance, but that only allows read-only connections.

      The replica mirrors the data of the primary Database node and any changes made
      are replicated to the replica asynchronously. Read Replicas allow you to scale
      your Database Instance for read-heavy database workloads. They can also be used
      for business intelligence workloads.


      A Read Replica can have at most one direct access and one Private Network endpoint.
      `Loadbalancer` endpoints are not available on Read Replicas even if this resource
      is displayed in the Read Replica response example.


      If you want to remove a Read Replica endpoint, you can use [delete a Database
      Instance endpoint](#path-endpoints-delete-a-database-instance-endpoint) API
      call.


      Instance Access Control Lists (ACL) also apply to Read Replica direct access
      endpoints.


      **Limitations:**

      There might be replication lags between the primary node and its Read Replica
      nodes. You can try to reduce this lag with some good practices:

      * All your tables should have a primary key

      * Don''t run large transactions that modify, delete or insert lots of rows.
      Try to split it into several small transactions.

      '
  - name: ACLs
    description: 'Network Access Control Lists allow you to control incoming network
      traffic by setting up ACL rules.

      '
  - name: Instance Settings
    description: 'Advanced Database Instance settings allow you to tune the behavior
      of your database engines to better fit your needs.


      Available settings depend on the database engine and its version. Note that
      some settings can only be defined upon database engine initialization. These
      are called init settings. You can find a full list of the settings available
      in the response body of the [list available database engines](#path-databases-list-databases-in-a-database-instance)
      endpoint.


      Each advanced setting entry has a default value that users can override. The
      deletion of a setting entry will restore the setting to default value. Some
      of the defaults values can be different from the engine''s defaults, as we optimize
      them to the Scaleway platform.

      '
  - name: Privileges
    description: 'Privileges are permissions that can be granted to database users.
      You can manage user permissions either via the console, the Scaleway APIs or
      SQL. Managed Database for PostgreSQL and MySQL provides a simplified and unified
      permission model through the API and the console to make things easier to manage
      and understand.


      Each user has associated permissions that give them access to zero or more logical
      databases. These include:


      * **None:** No access to the database

      * **Read:** Allow users to read tables and fields in a database

      * **Write:** Allow users to write content in databases.

      * **Admin:** Read and write access to the data, and extended privileges depending
      on the database engine.

      '
  - name: Users
    description: 'Users are profiles to which you can attribute database-level permissions.
      They allow you to define permissions specific to each type of database usage.
      For example, users with an `admin` role can create new databases and users.

      '
  - name: Databases
    description: 'Databases can be used to store and manage sets of structured information,
      or data. The interaction between the user and a database is done using a Database
      Engine, which provides a structured query language to add, modify or delete
      information from the database.

      '
  - name: NodeTypes
    description: 'Two node type ranges are available:


      * **General Purpose:** production-grade nodes designed for scalable database
      infrastructures.

      * **Development:** sandbox environments and reliable performance for development
      and testing purposes.

      '
  - name: Snapshots
    description: 'A snapshot is a consistent, instantaneous copy of the Block Storage
      volume of your Database Instance at a certain point in time. They are designed
      to recover your data in case of failure or accidental alterations of the data
      by a user. They allow you to quickly create a new Instance from a previous state
      of your database, regardless of the size of the volume. Their limitation is
      that, unlike backups, snapshots can only be stored in the same location as the
      original data.

      '
  - name: Endpoints
    description: 'A point of connection to a Database Instance. The endpoint is associated
      with an IPv4 address and a port. It contains the information about whether the
      endpoint is read-write or not. The endpoints always point to the main node of
      a Database Instance.


      All endpoints have TLS enabled. You can use TLS to make your data and your passwords
      unreadable in transit to anyone but you.


      For added security, you can set up ACL rules to restrict access to your endpoint
      to a set of trusted hosts or networks of your choice.


      Load Balancers are used to forward traffic to the right node based on the node
      state (active/hot standby). The Load Balancers'' configuration is set to cut
      off inactive connections if no TCP traffic is sent within a 6-hour timeframe.
      We recommend using connection pooling on the application side to renew database
      connections regularly.

      '
  - name: Namespaces
    description: 'A namespace is a collection of container images, each bearing the
      unique identifier of that namespace. A namespace can be either public or private,
      by default.


      Each namespace must have a globally unique name within its region. This means
      no namespaces in the same region can bear the same name.


      You can use namespace privacy policies to specify whether everyone has the right
      to pull an image from a namespace or not. When an image is in a public namespace,
      anyone is able to pull it. You can set your namespace to private if you want
      to restrict access.

      '
  - name: Images
    description: 'An image represents a container image. A container image is a file
      that includes all the requirements and instructions of a complete and executable
      version of an application. When running, it becomes one or multiple instances
      of that application.


      The visibility of an image can be public - when anyone can pull it, private
      - when only users within your organization can pull it, or inherited from the
      namespace visibility - which is the default. The visibility of your image can
      be changed using the [update image endpoit](#path-images-update-an-image).

      '
  - name: Tags
    description: 'Tags allow you to organize your container images. This gives you
      the possibility of sorting and filtering your images in any organizational pattern
      of your choice, which in turn helps you arrange, control and monitor your cloud
      resources. You can assign as many tags as you want to each image.

      '
  - name: Clusters
    description: 'A cluster is a fully managed Kubernetes cluster

      It is composed of different pools, each pool containing the same kind of nodes.

      '
  - name: Pools
    description: 'A pool is a set of identical nodes

      A pool has a name, a size (its desired number of nodes), node number limits
      (min, max), and a Scaleway Instance type. Changing those limits increases/decreases
      the size of a pool. As a result and depending on its load, the pool will grow
      or shrink within those limits when autoscaling is enabled.

      '
  - name: Nodes
    description: 'A node (short for worker node) is an abstraction for a Scaleway
      Instance

      A node is always part of a pool. Each of them has the Kubernetes software automatically
      installed and configured by Scaleway.

      '
  - name: Versions
    description: 'A version is a vanilla Kubernetes version like `x.y.z`

      It comprises a major version `x`, a minor version `y`, and a patch version `z`.
      At the minimum, Kapsule (Scaleway''s managed Kubernetes), will support the last
      patch version for the past three minor releases. Also, each version has a different
      set of CNIs, eventually container runtimes, feature gates, and admission plugins
      available. See our [Version Support Policy](https://www.scaleway.com/en/docs/containers/kubernetes/reference-content/version-support-policy/).

      '
  - name: Cluster types
    description: 'All cluster types available in a specified region

      A cluster type represents the different commercial types of clusters offered
      by Scaleway.

      '
  - name: Access Control List
    description: 'Network Access Control Lists (ACLs) allow you to manage inbound
      network traffic by setting up ACL rules

      '
  - name: Private Networks
    description: 'A Private Network allows you to interconnect your Scaleway resources
      in an

      isolated and private network. Network reachability is limited

      to resources that are on the same Private Network. Note that a resource can

      be part of multiple Private Networks.

      '
  - name: Flexible IP
    description: 'A flexible IP can be attached to any Elastic Metal server within
      the same zone.

      Multiple flexible IPs can be attached to a server.

      '
  - name: DNS Zones
    description: A DNS zone is a distinct part of the domain namespace and allows
      granular control of DNS components.
  - name: Records
    description: A DNS record holds information translating a domain or subdomain
      to an IP address, mail server or other domain/subdomain.
  - name: Imports / Exports
paths:
  /baremetal/v1/zones/{zone}/offers:
    get:
      tags:
        - Offers
      operationId: ListOffers
      summary: List offers
      description: List all available Elastic Metal server configurations.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: query
          name: page
          description: Page number.
          schema:
            type: integer
            description: Page number.
            format: int32
        - in: query
          name: page_size
          description: Number of offers per page.
          schema:
            type: integer
            description: Number of offers per page.
            format: uint32
        - in: query
          name: subscription_period
          description: Subscription period type to filter offers by.
          schema:
            type: string
            description: Subscription period type to filter offers by.
            enum:
              - unknown_subscription_period
              - hourly
              - monthly
            default: unknown_subscription_period
        - in: query
          name: name
          description: Offer name to filter offers by.
          schema:
            type: string
            description: Offer name to filter offers by.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.ListOffersResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/baremetal/v1/zones/{zone}/offers\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/baremetal/v1/zones/{zone}/offers\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /baremetal/v1/zones/{zone}/offers/{offer_id}:
    get:
      tags:
        - Offers
      operationId: GetOffer
      summary: Get offer
      description: Get details of an offer identified by its offer ID.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: offer_id
          description: ID of the researched Offer.
          required: true
          schema:
            type: string
            description: ID of the researched Offer.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.Offer'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/baremetal/v1/zones/{zone}/offers/{offer_id}\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/baremetal/v1/zones/{zone}/offers/{offer_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /baremetal/v1/zones/{zone}/options:
    get:
      tags:
        - Options
      operationId: ListOptions
      summary: List options
      description: List all options matching with filters.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: query
          name: page
          description: Page number.
          schema:
            type: integer
            description: Page number.
            format: int32
        - in: query
          name: page_size
          description: Number of options per page.
          schema:
            type: integer
            description: Number of options per page.
            format: uint32
        - in: query
          name: offer_id
          description: Offer ID to filter options for.
          schema:
            type: string
            description: Offer ID to filter options for.
        - in: query
          name: name
          description: Name to filter options for.
          schema:
            type: string
            description: Name to filter options for.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.ListOptionsResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/baremetal/v1/zones/{zone}/options\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/baremetal/v1/zones/{zone}/options\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /baremetal/v1/zones/{zone}/options/{option_id}:
    get:
      tags:
        - Options
      operationId: GetOption
      summary: Get option
      description: Return specific option for the ID.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: option_id
          description: ID of the option.
          required: true
          schema:
            type: string
            description: ID of the option.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.Option'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/baremetal/v1/zones/{zone}/options/{option_id}\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/baremetal/v1/zones/{zone}/options/{option_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /baremetal/v1/zones/{zone}/os:
    get:
      tags:
        - OS
      operationId: ListOS
      summary: List available OSes
      description: List all OSes that are available for installation on Elastic Metal
        servers.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: query
          name: page
          description: Page number.
          schema:
            type: integer
            description: Page number.
            format: int32
        - in: query
          name: page_size
          description: Number of OS per page.
          schema:
            type: integer
            description: Number of OS per page.
            format: uint32
        - in: query
          name: offer_id
          description: Offer IDs to filter OSes for.
          schema:
            type: string
            description: Offer IDs to filter OSes for.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.ListOSResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/baremetal/v1/zones/{zone}/os\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/baremetal/v1/zones/{zone}/os\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /baremetal/v1/zones/{zone}/os/{os_id}:
    get:
      tags:
        - OS
      operationId: GetOS
      summary: Get OS with an ID
      description: Return the specific OS for the ID.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: os_id
          description: ID of the OS.
          required: true
          schema:
            type: string
            description: ID of the OS.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.OS'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/baremetal/v1/zones/{zone}/os/{os_id}\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/baremetal/v1/zones/{zone}/os/{os_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /baremetal/v1/zones/{zone}/partitioning-schemas/default:
    get:
      tags:
        - Partitioning-schemas
      operationId: GetDefaultPartitioningSchema
      summary: Get default partitioning schema
      description: Get the default partitioning schema for the given offer ID and
        OS ID.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: query
          name: offer_id
          description: ID of the offer.
          required: true
          schema:
            type: string
            description: ID of the offer.
        - in: query
          name: os_id
          description: ID of the OS.
          required: true
          schema:
            type: string
            description: ID of the OS.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.Schema'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/baremetal/v1/zones/{zone}/partitioning-schemas/default?offer_id=string&os_id=string\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/baremetal/v1/zones/{zone}/partitioning-schemas/default\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  offer_id==string \\\n  os_id==string"
  /baremetal/v1/zones/{zone}/partitioning-schemas/validate:
    post:
      tags:
        - Partitioning-schemas
      operationId: ValidatePartitioningSchema
      summary: Validate client partitioning schema
      description: Validate the incoming partitioning schema from a user before installing
        the server. Return default ErrorCode if invalid.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
      responses:
        '204':
          description: ''
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                partitioning_schema:
                  type: object
                  description: Partitioning schema.
                  properties:
                    disks:
                      type: array
                      items:
                        $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.Disk'
                    raids:
                      type: array
                      items:
                        $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.RAID'
                    filesystems:
                      type: array
                      items:
                        $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.Filesystem'
                    zfs:
                      $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.ZFS'
                  x-properties-order:
                    - disks
                    - raids
                    - filesystems
                    - zfs
                offer_id:
                  type: string
                  description: Offer ID of the server.
                os_id:
                  type: string
                  description: OS ID.
              x-properties-order:
                - partitioning_schema
                - offer_id
                - os_id
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"offer_id\":\"string\"\
            ,\"os_id\":\"string\"}' \\\n  \"https://api.scaleway.com/baremetal/v1/zones/{zone}/partitioning-schemas/validate\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/baremetal/v1/zones/{zone}/partitioning-schemas/validate\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  offer_id=\"string\" \\\n  os_id=\"\
            string\""
  /baremetal/v1/zones/{zone}/servers:
    get:
      tags:
        - Servers
      operationId: ListServers
      summary: List Elastic Metal servers for an Organization
      description: List Elastic Metal servers for a specific Organization.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: query
          name: page
          description: Page number.
          schema:
            type: integer
            description: Page number.
            format: int32
        - in: query
          name: page_size
          description: Number of servers per page.
          schema:
            type: integer
            description: Number of servers per page.
            format: uint32
        - in: query
          name: order_by
          description: Order of the servers.
          schema:
            type: string
            description: Order of the servers.
            enum:
              - created_at_asc
              - created_at_desc
            default: created_at_asc
        - in: query
          name: tags
          description: Tags to filter for.
          schema:
            type: array
            description: Tags to filter for.
            items:
              type: string
        - in: query
          name: status
          description: Status to filter for.
          schema:
            type: array
            description: Status to filter for.
            items:
              type: string
        - in: query
          name: name
          description: Names to filter for.
          schema:
            type: string
            description: Names to filter for.
        - in: query
          name: organization_id
          description: Organization ID to filter for.
          schema:
            type: string
            description: Organization ID to filter for.
        - in: query
          name: project_id
          description: Project ID to filter for.
          schema:
            type: string
            description: Project ID to filter for.
        - in: query
          name: option_id
          description: Option ID to filter for.
          schema:
            type: string
            description: Option ID to filter for.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.ListServersResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/baremetal/v1/zones/{zone}/servers\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    post:
      tags:
        - Servers
      operationId: CreateServer
      summary: Create an Elastic Metal server
      description: Create a new Elastic Metal server. Once the server is created,
        proceed with the [installation of an OS](#post-3e949e).
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.Server'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                offer_id:
                  type: string
                  description: Offer ID of the new server.
                organization_id:
                  type: string
                  description: Organization ID with which the server will be created.
                  deprecated: true
                  nullable: true
                  x-one-of: ProjectIdentifier
                project_id:
                  type: string
                  description: Project ID with which the server will be created.
                  nullable: true
                  x-one-of: ProjectIdentifier
                name:
                  type: string
                  description: Name of the server (≠hostname).
                description:
                  type: string
                  description: Description associated with the server, max 255 characters.
                tags:
                  type: array
                  description: Tags to associate to the server.
                  items:
                    type: string
                install:
                  type: object
                  description: Object describing the configuration details of the
                    OS installation on the server.
                  properties:
                    os_id:
                      type: string
                      description: ID of the OS to installation on the server.
                    hostname:
                      type: string
                      description: Hostname of the server.
                    ssh_key_ids:
                      type: array
                      description: SSH key IDs authorized on the server.
                      items:
                        type: string
                    user:
                      type: string
                      description: User for the installation.
                      nullable: true
                    password:
                      type: string
                      description: Password for the installation.
                      nullable: true
                    service_user:
                      type: string
                      description: Regular user that runs the service to be installed
                        on the server.
                      nullable: true
                    service_password:
                      type: string
                      description: Password used for the service to install.
                      nullable: true
                    partitioning_schema:
                      type: object
                      description: Partitioning schema.
                      properties:
                        disks:
                          type: array
                          items:
                            $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.Disk'
                        raids:
                          type: array
                          items:
                            $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.RAID'
                        filesystems:
                          type: array
                          items:
                            $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.Filesystem'
                        zfs:
                          $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.ZFS'
                      x-properties-order:
                        - disks
                        - raids
                        - filesystems
                        - zfs
                  x-properties-order:
                    - os_id
                    - hostname
                    - ssh_key_ids
                    - user
                    - password
                    - service_user
                    - service_password
                    - partitioning_schema
                option_ids:
                  type: array
                  description: IDs of options to enable on server.
                  items:
                    type: string
              required:
                - offer_id
                - name
                - description
              x-properties-order:
                - offer_id
                - organization_id
                - project_id
                - name
                - description
                - tags
                - install
                - option_ids
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\n    \"description\"\
            : \"string\",\n    \"name\": \"string\",\n    \"offer_id\": \"string\"\
            \n  }' \\\n  \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  description=\"string\" \\\n\
            \  name=\"string\" \\\n  offer_id=\"string\""
  /baremetal/v1/zones/{zone}/servers/{server_id}:
    get:
      tags:
        - Servers
      operationId: GetServer
      summary: Get a specific Elastic Metal server
      description: Get full details of an existing Elastic Metal server associated
        with the ID.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: server_id
          description: ID of the server.
          required: true
          schema:
            type: string
            description: ID of the server.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.Server'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    patch:
      tags:
        - Servers
      operationId: UpdateServer
      summary: Update an Elastic Metal server
      description: Update the server associated with the ID. You can update parameters
        such as the server's name, tags and description. Any parameters left null
        in the request body are not updated.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: server_id
          description: ID of the server to update.
          required: true
          schema:
            type: string
            description: ID of the server to update.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.Server'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the server (≠hostname), not updated if null.
                  nullable: true
                description:
                  type: string
                  description: Description associated with the server, max 255 characters,
                    not updated if null.
                  nullable: true
                tags:
                  type: array
                  description: Tags associated with the server, not updated if null.
                  nullable: true
                  items:
                    type: string
              x-properties-order:
                - name
                - description
                - tags
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X PATCH \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n \
            \ -H \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}\""
        - lang: HTTPie
          source: "http PATCH \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    delete:
      tags:
        - Servers
      operationId: DeleteServer
      summary: Delete an Elastic Metal server
      description: Delete the server associated with the ID.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: server_id
          description: ID of the server to delete.
          required: true
          schema:
            type: string
            description: ID of the server to delete.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.Server'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /baremetal/v1/zones/{zone}/servers/{server_id}/bmc-access:
    get:
      tags:
        - BMC Access
      operationId: GetBMCAccess
      summary: Get BMC access
      description: Get the BMC (Baseboard Management Controller) access associated
        with the ID, including the URL and login information needed to connect.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: server_id
          description: ID of the server.
          required: true
          schema:
            type: string
            description: ID of the server.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.BMCAccess'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/bmc-access\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/bmc-access\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    post:
      tags:
        - BMC Access
      operationId: StartBMCAccess
      summary: Start BMC access
      description: 'Start BMC (Baseboard Management Controller) access associated
        with the ID.

        The BMC (Baseboard Management Controller) access is available one hour after
        the installation of the server.

        You need first to create an option Remote Access. You will find the ID and
        the price with a call to listOffers (https://developers.scaleway.com/en/products/baremetal/api/#get-78db92).
        Then add the option https://developers.scaleway.com/en/products/baremetal/api/#post-b14abd.

        After adding the BMC option, you need to Get Remote Access to get the login/password
        https://developers.scaleway.com/en/products/baremetal/api/#get-cefc0f. Do
        not forget to delete the Option after use.'
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: server_id
          description: ID of the server.
          required: true
          schema:
            type: string
            description: ID of the server.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.BMCAccess'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ip:
                  type: string
                  description: The IP authorized to connect to the server. (IPv4 address)
                  example: 1.2.3.4
              required:
                - ip
              x-properties-order:
                - ip
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"ip\":\"1.2.3.4\"}' \\\
            \n  \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/bmc-access\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/bmc-access\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  ip=\"1.2.3.4\""
    delete:
      tags:
        - BMC Access
      operationId: StopBMCAccess
      summary: Stop BMC access
      description: Stop BMC (Baseboard Management Controller) access associated with
        the ID.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: server_id
          description: ID of the server.
          required: true
          schema:
            type: string
            description: ID of the server.
      responses:
        '204':
          description: ''
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/bmc-access\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/bmc-access\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /baremetal/v1/zones/{zone}/servers/{server_id}/events:
    get:
      tags:
        - Servers
      operationId: ListServerEvents
      summary: List server events
      description: List event (i.e. start/stop/reboot) associated to the server ID.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: server_id
          description: ID of the server events searched.
          required: true
          schema:
            type: string
            description: ID of the server events searched.
        - in: query
          name: page
          description: Page number.
          schema:
            type: integer
            description: Page number.
            format: int32
        - in: query
          name: page_size
          description: Number of server events per page.
          schema:
            type: integer
            description: Number of server events per page.
            format: uint32
        - in: query
          name: order_by
          description: Order of the server events.
          schema:
            type: string
            description: Order of the server events.
            enum:
              - created_at_asc
              - created_at_desc
            default: created_at_asc
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.ListServerEventsResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/events\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/events\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /baremetal/v1/zones/{zone}/servers/{server_id}/install:
    post:
      tags:
        - Servers
      operationId: InstallServer
      summary: Install an Elastic Metal server
      description: Install an Operating System (OS) on the Elastic Metal server with
        a specific ID.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: server_id
          description: Server ID to install.
          required: true
          schema:
            type: string
            description: Server ID to install.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.Server'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                os_id:
                  type: string
                  description: ID of the OS to installation on the server.
                hostname:
                  type: string
                  description: Hostname of the server.
                ssh_key_ids:
                  type: array
                  description: SSH key IDs authorized on the server.
                  items:
                    type: string
                user:
                  type: string
                  description: User used for the installation.
                  nullable: true
                password:
                  type: string
                  description: Password used for the installation.
                  nullable: true
                service_user:
                  type: string
                  description: User used for the service to install.
                  nullable: true
                service_password:
                  type: string
                  description: Password used for the service to install.
                  nullable: true
                partitioning_schema:
                  type: object
                  description: Partitioning schema.
                  properties:
                    disks:
                      type: array
                      items:
                        $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.Disk'
                    raids:
                      type: array
                      items:
                        $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.RAID'
                    filesystems:
                      type: array
                      items:
                        $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.Filesystem'
                    zfs:
                      $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.ZFS'
                  x-properties-order:
                    - disks
                    - raids
                    - filesystems
                    - zfs
              required:
                - os_id
                - hostname
                - ssh_key_ids
              x-properties-order:
                - os_id
                - hostname
                - ssh_key_ids
                - user
                - password
                - service_user
                - service_password
                - partitioning_schema
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\n    \"hostname\": \"\
            string\",\n    \"os_id\": \"string\",\n    \"ssh_key_ids\": [\n      \
            \  \"string\"\n    ]\n  }' \\\n  \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/install\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/install\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  hostname=\"string\" \\\n  os_id=\"\
            string\" \\\n  ssh_key_ids:='[\n    \"string\"\n  ]'"
  /baremetal/v1/zones/{zone}/servers/{server_id}/ips/{ip_id}:
    patch:
      tags:
        - Servers
      operationId: UpdateIP
      summary: Update IP
      description: Configure the IP address associated with the server ID and IP ID.
        You can use this method to set a reverse DNS for an IP address.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: server_id
          description: ID of the server.
          required: true
          schema:
            type: string
            description: ID of the server.
        - in: path
          name: ip_id
          description: ID of the IP to update.
          required: true
          schema:
            type: string
            description: ID of the IP to update.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.IP'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reverse:
                  type: string
                  description: New reverse IP to update, not updated if null.
                  nullable: true
              x-properties-order:
                - reverse
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X PATCH \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n \
            \ -H \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/ips/{ip_id}\""
        - lang: HTTPie
          source: "http PATCH \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/ips/{ip_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /baremetal/v1/zones/{zone}/servers/{server_id}/metrics:
    get:
      tags:
        - Servers
      operationId: GetServerMetrics
      summary: Return server metrics
      description: Get the ping status of the server associated with the ID.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: server_id
          description: Server ID to get the metrics.
          required: true
          schema:
            type: string
            description: Server ID to get the metrics.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.GetServerMetricsResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/metrics\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/metrics\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /baremetal/v1/zones/{zone}/servers/{server_id}/migrate-offer-monthly:
    post:
      tags:
        - Servers
      operationId: MigrateServerToMonthlyOffer
      summary: Migrate server offer
      description: Migrate server with hourly offer to monthly offer.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: server_id
          description: ID of the server.
          required: true
          schema:
            type: string
            description: ID of the server.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.Server'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/migrate-offer-monthly\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/migrate-offer-monthly\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /baremetal/v1/zones/{zone}/servers/{server_id}/options/{option_id}:
    post:
      tags:
        - Servers
      operationId: AddOptionServer
      summary: Add server option
      description: Add an option, such as Private Networks, to a specific server.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: server_id
          description: ID of the server.
          required: true
          schema:
            type: string
            description: ID of the server.
        - in: path
          name: option_id
          description: ID of the option to add.
          required: true
          schema:
            type: string
            description: ID of the option to add.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.Server'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                expires_at:
                  type: string
                  description: Auto expire the option after this date. (RFC 3339 format)
                  format: date-time
                  example: '2022-03-22T12:34:56.123456Z'
                  nullable: true
              x-properties-order:
                - expires_at
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/options/{option_id}\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/options/{option_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    delete:
      tags:
        - Servers
      operationId: DeleteOptionServer
      summary: Delete server option
      description: Delete an option from a specific server.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: server_id
          description: ID of the server.
          required: true
          schema:
            type: string
            description: ID of the server.
        - in: path
          name: option_id
          description: ID of the option to delete.
          required: true
          schema:
            type: string
            description: ID of the option to delete.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.Server'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/options/{option_id}\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/options/{option_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /baremetal/v1/zones/{zone}/servers/{server_id}/reboot:
    post:
      tags:
        - Server Actions
      operationId: RebootServer
      summary: Reboot an Elastic Metal server
      description: Reboot the Elastic Metal server associated with the ID, use the
        `boot_type` `rescue` to reboot the server in rescue mode.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: server_id
          description: ID of the server to reboot.
          required: true
          schema:
            type: string
            description: ID of the server to reboot.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.Server'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                boot_type:
                  type: string
                  description: The type of boot.
                  enum:
                    - unknown_boot_type
                    - normal
                    - rescue
                  default: unknown_boot_type
              x-properties-order:
                - boot_type
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/reboot\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/reboot\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /baremetal/v1/zones/{zone}/servers/{server_id}/start:
    post:
      tags:
        - Server Actions
      operationId: StartServer
      summary: Start an Elastic Metal server
      description: Start the server associated with the ID.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: server_id
          description: ID of the server to start.
          required: true
          schema:
            type: string
            description: ID of the server to start.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.Server'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                boot_type:
                  type: string
                  description: The type of boot.
                  enum:
                    - unknown_boot_type
                    - normal
                    - rescue
                  default: unknown_boot_type
              x-properties-order:
                - boot_type
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/start\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/start\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /baremetal/v1/zones/{zone}/servers/{server_id}/stop:
    post:
      tags:
        - Server Actions
      operationId: StopServer
      summary: Stop an Elastic Metal server
      description: Stop the server associated with the ID. The server remains allocated
        to your account and all data remains on the local storage of the server.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: server_id
          description: ID of the server to stop.
          required: true
          schema:
            type: string
            description: ID of the server to stop.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.Server'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/stop\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/baremetal/v1/zones/{zone}/servers/{server_id}/stop\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /baremetal/v1/zones/{zone}/settings:
    get:
      tags:
        - Options
      operationId: ListSettings
      summary: List all settings
      description: Return all settings for a Project ID.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: query
          name: page
          description: Page number.
          schema:
            type: integer
            description: Page number.
            format: int32
        - in: query
          name: page_size
          description: Set the maximum list size.
          schema:
            type: integer
            description: Set the maximum list size.
            format: uint32
        - in: query
          name: order_by
          description: Sort order for items in the response.
          schema:
            type: string
            description: Sort order for items in the response.
            enum:
              - created_at_asc
              - created_at_desc
            default: created_at_asc
        - in: query
          name: project_id
          description: ID of the Project. (UUID format)
          schema:
            type: string
            description: ID of the Project. (UUID format)
            example: 6170692e-7363-616c-6577-61792e636f6d
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.ListSettingsResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/baremetal/v1/zones/{zone}/settings?project_id=6170692e-7363-616c-6577-61792e636f6d\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/baremetal/v1/zones/{zone}/settings\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  project_id==6170692e-7363-616c-6577-61792e636f6d"
  /baremetal/v1/zones/{zone}/settings/{setting_id}:
    patch:
      tags:
        - Options
      operationId: UpdateSetting
      summary: Update setting
      description: Update a setting for a Project ID (enable or disable).
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: setting_id
          description: ID of the setting.
          required: true
          schema:
            type: string
            description: ID of the setting.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.baremetal.v1.Setting'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled:
                  type: boolean
                  description: Defines whether the setting is enabled.
                  nullable: true
              x-properties-order:
                - enabled
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X PATCH \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n \
            \ -H \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/baremetal/v1/zones/{zone}/settings/{setting_id}\""
        - lang: HTTPie
          source: "http PATCH \"https://api.scaleway.com/baremetal/v1/zones/{zone}/settings/{setting_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/backups:
    get:
      tags:
        - Backups
      operationId: ListDatabaseBackups
      summary: List database backups
      description: List all backups in a specified region, for a given Scaleway Organization
        or Scaleway Project. By default, the backups listed are ordered by creation
        date in ascending order. This can be modified via the `order_by` field.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: query
          name: name
          description: Name of the database backups.
          schema:
            type: string
            description: Name of the database backups.
        - in: query
          name: order_by
          description: Criteria to use when ordering database backups listing.
          schema:
            type: string
            description: Criteria to use when ordering database backups listing.
            enum:
              - created_at_asc
              - created_at_desc
              - name_asc
              - name_desc
              - status_asc
              - status_desc
            default: created_at_asc
        - in: query
          name: instance_id
          description: UUID of the Database Instance.
          schema:
            type: string
            description: UUID of the Database Instance.
        - in: query
          name: organization_id
          description: Organization ID of the Organization the database backups belong
            to.
          schema:
            type: string
            description: Organization ID of the Organization the database backups
              belong to.
        - in: query
          name: project_id
          description: Project ID of the Project the database backups belong to.
          schema:
            type: string
            description: Project ID of the Project the database backups belong to.
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/google.protobuf.Int32Value'
        - in: query
          name: page_size
          schema:
            type: integer
            format: uint32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.ListDatabaseBackupsResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/rdb/v1/regions/fr-par/backups\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/rdb/v1/regions/fr-par/backups\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    post:
      tags:
        - Backups
      operationId: CreateDatabaseBackup
      summary: Create a database backup
      description: Create a new backup. You must set the `instance_id`, `database_name`,
        `name` and `expires_at` parameters.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.DatabaseBackup'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_id:
                  type: string
                  description: UUID of the Database Instance.
                database_name:
                  type: string
                  description: Name of the database you want to back up.
                name:
                  type: string
                  description: Name of the backup.
                expires_at:
                  type: string
                  description: Expiration date (must follow the ISO 8601 format).
                    (RFC 3339 format)
                  format: date-time
                  example: '2022-03-22T12:34:56.123456Z'
                  nullable: true
              x-properties-order:
                - instance_id
                - database_name
                - name
                - expires_at
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\n    \"database_name\"\
            : \"string\",\n    \"instance_id\": \"string\",\n    \"name\": \"string\"\
            \n  }' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/backups\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/backups\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  database_name=\"string\" \\\
            \n  instance_id=\"string\" \\\n  name=\"string\""
  /rdb/v1/regions/{region}/backups/{database_backup_id}:
    get:
      tags:
        - Backups
      operationId: GetDatabaseBackup
      summary: Get a database backup
      description: Retrieve information about a given backup, specified by its database
        backup ID and region. Full details about the backup, like size, URL and expiration
        date, are returned in the response.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: database_backup_id
          description: UUID of the database backup.
          required: true
          schema:
            type: string
            description: UUID of the database backup.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.DatabaseBackup'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/rdb/v1/regions/fr-par/backups/{database_backup_id}\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/rdb/v1/regions/fr-par/backups/{database_backup_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    patch:
      tags:
        - Backups
      operationId: UpdateDatabaseBackup
      summary: Update a database backup
      description: Update the parameters of a backup, including name and expiration
        date.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: database_backup_id
          description: UUID of the database backup to update.
          required: true
          schema:
            type: string
            description: UUID of the database backup to update.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.DatabaseBackup'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the Database Backup.
                  nullable: true
                expires_at:
                  type: string
                  description: Expiration date (must follow the ISO 8601 format).
                    (RFC 3339 format)
                  format: date-time
                  example: '2022-03-22T12:34:56.123456Z'
                  nullable: true
              x-properties-order:
                - name
                - expires_at
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X PATCH \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n \
            \ -H \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/backups/{database_backup_id}\""
        - lang: HTTPie
          source: "http PATCH \"https://api.scaleway.com/rdb/v1/regions/fr-par/backups/{database_backup_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    delete:
      tags:
        - Backups
      operationId: DeleteDatabaseBackup
      summary: Delete a database backup
      description: Delete a backup, specified by its database backup ID and region.
        Deleting a backup is permanent, and cannot be undone.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: database_backup_id
          description: UUID of the database backup to delete.
          required: true
          schema:
            type: string
            description: UUID of the database backup to delete.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.DatabaseBackup'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/rdb/v1/regions/fr-par/backups/{database_backup_id}\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/rdb/v1/regions/fr-par/backups/{database_backup_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/backups/{database_backup_id}/export:
    post:
      tags:
        - Backups
      operationId: ExportDatabaseBackup
      summary: Export a database backup
      description: Export a backup, specified by the `database_backup_id` and the
        `region` parameters. The download URL is returned in the response.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: database_backup_id
          description: UUID of the database backup you want to export.
          required: true
          schema:
            type: string
            description: UUID of the database backup you want to export.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.DatabaseBackup'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/backups/{database_backup_id}/export\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/backups/{database_backup_id}/export\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/backups/{database_backup_id}/restore:
    post:
      tags:
        - Backups
      operationId: RestoreDatabaseBackup
      summary: Restore a database backup
      description: Launch the process of restoring database backup. You must specify
        the `instance_id` of the Database Instance of destination, where the backup
        will be restored. Note that large database backups can take up to several
        hours to restore.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: database_backup_id
          description: Backup of a logical database.
          required: true
          schema:
            type: string
            description: Backup of a logical database.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.DatabaseBackup'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                database_name:
                  type: string
                  description: Defines the destination database to restore into a
                    specified database (the default destination is set to the origin
                    database of the backup).
                  nullable: true
                instance_id:
                  type: string
                  description: Defines the Database Instance where the backup has
                    to be restored.
              required:
                - instance_id
              x-properties-order:
                - database_name
                - instance_id
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"instance_id\":\"string\"\
            }' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/backups/{database_backup_id}/restore\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/backups/{database_backup_id}/restore\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  instance_id=\"string\""
  /rdb/v1/regions/{region}/database-engines:
    get:
      tags:
        - Engines
      operationId: ListDatabaseEngines
      summary: List available database engines
      description: List the PostgreSQL and MySQL database engines available at Scaleway.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: query
          name: name
          description: Name of the database engine.
          schema:
            type: string
            description: Name of the database engine.
        - in: query
          name: version
          description: Version of the database engine.
          schema:
            type: string
            description: Version of the database engine.
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/google.protobuf.Int32Value'
        - in: query
          name: page_size
          schema:
            type: integer
            format: uint32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.ListDatabaseEnginesResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/rdb/v1/regions/fr-par/database-engines\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/rdb/v1/regions/fr-par/database-engines\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/endpoints/{endpoint_id}:
    get:
      tags:
        - Endpoints
      operationId: GetEndpoint
      summary: Get a Database Instance endpoint
      description: Retrieve information about a Database Instance endpoint. Full details
        about the endpoint, like `ip`, `port`, `private_network` and `load_balancer`
        specifications are returned in the response.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: endpoint_id
          description: UUID of the endpoint you want to get.
          required: true
          schema:
            type: string
            description: UUID of the endpoint you want to get.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.Endpoint'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/rdb/v1/regions/fr-par/endpoints/{endpoint_id}\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/rdb/v1/regions/fr-par/endpoints/{endpoint_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    delete:
      tags:
        - Endpoints
      operationId: DeleteEndpoint
      summary: Delete a Database Instance endpoint
      description: Delete the endpoint of a Database Instance. You must specify the
        `region` and `endpoint_id` parameters of the endpoint you want to delete.
        Note that might need to update any environment configurations that point to
        the deleted endpoint.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: endpoint_id
          description: 'UUID of the endpoint you want to delete.

            This endpoint can also be used to delete a Read Replica endpoint.'
          required: true
          schema:
            type: string
            description: 'UUID of the endpoint you want to delete.

              This endpoint can also be used to delete a Read Replica endpoint.'
      responses:
        '204':
          description: ''
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/rdb/v1/regions/fr-par/endpoints/{endpoint_id}\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/rdb/v1/regions/fr-par/endpoints/{endpoint_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/endpoints/{endpoint_id}/migrate:
    post:
      tags:
        - Endpoints
      operationId: MigrateEndpoint
      summary: Migrate an existing instance endpoint to another instance
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: endpoint_id
          description: UUID of the endpoint you want to migrate.
          required: true
          schema:
            type: string
            description: UUID of the endpoint you want to migrate.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.Endpoint'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_id:
                  type: string
                  description: UUID of the instance you want to attach the endpoint
                    to.
              required:
                - instance_id
              x-properties-order:
                - instance_id
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"instance_id\":\"string\"\
            }' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/endpoints/{endpoint_id}/migrate\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/endpoints/{endpoint_id}/migrate\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  instance_id=\"string\""
  /rdb/v1/regions/{region}/instances:
    get:
      tags:
        - Database Instances
      operationId: ListInstances
      summary: List Database Instances
      description: List all Database Instances in the specified region, for a given
        Scaleway Organization or Scaleway Project. By default, the Database Instances
        returned in the list are ordered by creation date in ascending order, though
        this can be modified via the order_by field. You can define additional parameters
        for your query, such as `tags` and `name`. For the `name` parameter, the value
        you include will be checked against the whole name string to see if it includes
        the string you put in the parameter.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: query
          name: tags
          description: List Database Instances that have a given tag.
          schema:
            type: array
            description: List Database Instances that have a given tag.
            items:
              type: string
        - in: query
          name: name
          description: Lists Database Instances that match a name pattern.
          schema:
            type: string
            description: Lists Database Instances that match a name pattern.
        - in: query
          name: order_by
          description: Criteria to use when ordering Database Instance listings.
          schema:
            type: string
            description: Criteria to use when ordering Database Instance listings.
            enum:
              - created_at_asc
              - created_at_desc
              - name_asc
              - name_desc
              - region
              - status_asc
              - status_desc
            default: created_at_asc
        - in: query
          name: organization_id
          description: Please use project_id instead.
          schema:
            type: string
            description: Please use project_id instead.
        - in: query
          name: project_id
          description: Project ID to list the Database Instance of.
          schema:
            type: string
            description: Project ID to list the Database Instance of.
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/google.protobuf.Int32Value'
        - in: query
          name: page_size
          schema:
            type: integer
            format: uint32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.ListInstancesResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/rdb/v1/regions/fr-par/instances\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    post:
      tags:
        - Database Instances
      operationId: CreateInstance
      summary: Create a Database Instance
      description: Create a new Database Instance. You must set the `engine`, `user_name`,
        `password` and `node_type` parameters. Optionally, you can specify the volume
        type and size.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.Instance'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organization_id:
                  type: string
                  description: Please use project_id instead.
                  deprecated: true
                  nullable: true
                  x-one-of: ProjectIdentifier
                project_id:
                  type: string
                  description: The Project ID on which the Database Instance will
                    be created.
                  nullable: true
                  x-one-of: ProjectIdentifier
                name:
                  type: string
                  description: Name of the Database Instance.
                engine:
                  type: string
                  description: Database engine of the Database Instance (PostgreSQL,
                    MySQL, ...).
                user_name:
                  type: string
                  description: Username created when the Database Instance is created.
                password:
                  type: string
                  description: Password of the user. Password must be between 8 and
                    128 characters, contain at least one digit, one uppercase, one
                    lowercase and one special character.
                node_type:
                  type: string
                  description: Type of node to use for the Database Instance.
                is_ha_cluster:
                  type: boolean
                  description: Defines whether or not High-Availability is enabled.
                disable_backup:
                  type: boolean
                  description: Defines whether or not backups are disabled.
                tags:
                  type: array
                  description: Tags to apply to the Database Instance.
                  items:
                    type: string
                init_settings:
                  type: array
                  description: List of engine settings to be set upon Database Instance
                    initialization.
                  items:
                    $ref: '#/components/schemas/scaleway.rdb.v1.InstanceSetting'
                volume_type:
                  type: string
                  description: Type of volume where data is stored (lssd, bssd, ...).
                  enum:
                    - lssd
                    - bssd
                    - sbs_5k
                    - sbs_15k
                  default: lssd
                volume_size:
                  type: integer
                  description: Volume size when volume_type is not lssd. (in bytes)
                  format: uint64
                init_endpoints:
                  type: array
                  description: One or multiple EndpointSpec used to expose your Database
                    Instance. A load_balancer public endpoint is systematically created.
                  items:
                    $ref: '#/components/schemas/scaleway.rdb.v1.EndpointSpec'
                backup_same_region:
                  type: boolean
                  description: Defines whether to or not to store logical backups
                    in the same region as the Database Instance.
                encryption:
                  type: object
                  description: Encryption at rest settings for your Database Instance.
                  properties:
                    enabled:
                      type: boolean
                  x-properties-order:
                    - enabled
              required:
                - engine
                - user_name
                - password
                - node_type
              x-properties-order:
                - organization_id
                - project_id
                - name
                - engine
                - user_name
                - password
                - node_type
                - is_ha_cluster
                - disable_backup
                - tags
                - init_settings
                - volume_type
                - volume_size
                - init_endpoints
                - backup_same_region
                - encryption
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\n    \"backup_same_region\"\
            : false,\n    \"disable_backup\": false,\n    \"engine\": \"string\",\n\
            \    \"is_ha_cluster\": false,\n    \"name\": \"string\",\n    \"node_type\"\
            : \"string\",\n    \"password\": \"string\",\n    \"user_name\": \"string\"\
            ,\n    \"volume_size\": 42\n  }' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  backup_same_region:=false \\\
            \n  disable_backup:=false \\\n  engine=\"string\" \\\n  is_ha_cluster:=false\
            \ \\\n  name=\"string\" \\\n  node_type=\"string\" \\\n  password=\"string\"\
            \ \\\n  user_name=\"string\" \\\n  volume_size:=42"
  /rdb/v1/regions/{region}/instances/{instance_id}:
    get:
      tags:
        - Database Instances
      operationId: GetInstance
      summary: Get a Database Instance
      description: Retrieve information about a given Database Instance, specified
        by the `region` and `instance_id` parameters. Its full details, including
        name, status, IP address and port, are returned in the response object.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.Instance'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    patch:
      tags:
        - Database Instances
      operationId: UpdateInstance
      summary: Update a Database Instance
      description: Update the parameters of a Database Instance, including name, tags
        and backup schedule details.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance to update.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance to update.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.Instance'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                backup_schedule_frequency:
                  type: integer
                  description: In hours.
                  format: uint32
                  nullable: true
                backup_schedule_retention:
                  type: integer
                  description: In days.
                  format: uint32
                  nullable: true
                is_backup_schedule_disabled:
                  type: boolean
                  description: Defines whether or not the backup schedule is disabled.
                  nullable: true
                name:
                  type: string
                  description: Name of the Database Instance.
                  nullable: true
                tags:
                  type: array
                  description: Tags of a Database Instance.
                  nullable: true
                  items:
                    type: string
                logs_policy:
                  type: object
                  description: Logs policy of the Database Instance.
                  properties:
                    max_age_retention:
                      type: integer
                      description: Max age (in days) of remote logs to keep on the
                        Database Instance.
                      format: uint32
                      nullable: true
                    total_disk_retention:
                      type: integer
                      description: Max disk size of remote logs to keep on the Database
                        Instance. (in bytes)
                      format: uint64
                      nullable: true
                  x-properties-order:
                    - max_age_retention
                    - total_disk_retention
                backup_same_region:
                  type: boolean
                  description: Store logical backups in the same region as the Database
                    Instance.
                  nullable: true
                backup_schedule_start_hour:
                  type: integer
                  description: Defines the start time of the autobackup.
                  format: uint32
                  nullable: true
              x-properties-order:
                - backup_schedule_frequency
                - backup_schedule_retention
                - is_backup_schedule_disabled
                - name
                - tags
                - logs_policy
                - backup_same_region
                - backup_schedule_start_hour
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X PATCH \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n \
            \ -H \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}\""
        - lang: HTTPie
          source: "http PATCH \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    delete:
      tags:
        - Database Instances
      operationId: DeleteInstance
      summary: Delete a Database Instance
      description: Delete a given Database Instance, specified by the `region` and
        `instance_id` parameters. Deleting a Database Instance is permanent, and cannot
        be undone. Note that upon deletion all your data will be lost.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance to delete.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance to delete.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.Instance'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/instances/{instance_id}/acls:
    get:
      tags:
        - ACLs
      operationId: ListInstanceACLRules
      summary: List ACL rules of a Database Instance
      description: List the ACL rules for a given Database Instance. The response
        is an array of ACL objects, each one representing an ACL that denies, allows
        or redirects traffic based on certain conditions.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance.
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/google.protobuf.Int32Value'
        - in: query
          name: page_size
          schema:
            type: integer
            format: uint32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.ListInstanceACLRulesResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/acls\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/acls\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    post:
      tags:
        - ACLs
      operationId: AddInstanceACLRules
      summary: Add an ACL rule to a Database Instance
      description: Add an additional ACL rule to a Database Instance.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance you want to add ACL rules to.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance you want to add ACL rules to.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.AddInstanceACLRulesResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rules:
                  type: array
                  description: ACL rules to add to the Database Instance.
                  items:
                    $ref: '#/components/schemas/scaleway.rdb.v1.ACLRuleRequest'
              required:
                - rules
              x-properties-order:
                - rules
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"rules\":[\"\"]}' \\\n\
            \  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/acls\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/acls\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  rules:='[\"\"]'"
    put:
      tags:
        - ACLs
      operationId: SetInstanceACLRules
      summary: Set ACL rules for a Database Instance
      description: Replace all the ACL rules of a Database Instance.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance where the ACL rules must be set.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance where the ACL rules must be
              set.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.SetInstanceACLRulesResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rules:
                  type: array
                  description: ACL rules to define for the Database Instance.
                  items:
                    $ref: '#/components/schemas/scaleway.rdb.v1.ACLRuleRequest'
              required:
                - rules
              x-properties-order:
                - rules
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X PUT \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"rules\":[\"\"]}' \\\n\
            \  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/acls\""
        - lang: HTTPie
          source: "http PUT \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/acls\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  rules:='[\"\"]'"
    delete:
      tags:
        - ACLs
      operationId: DeleteInstanceACLRules
      summary: Delete ACL rules of a Database Instance
      description: Delete one or more ACL rules of a Database Instance.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance you want to delete an ACL rule
            from.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance you want to delete an ACL rule
              from.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.DeleteInstanceACLRulesResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                acl_rule_ips:
                  type: array
                  description: IP addresses defined in the ACL rules of the Database
                    Instance.
                  items:
                    type: string
              required:
                - acl_rule_ips
              x-properties-order:
                - acl_rule_ips
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  -H \"Content-Type: application/json\" \\\n  -d '{\"acl_rule_ips\":[\"\
            string\"]}' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/acls\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/acls\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  acl_rule_ips:='[\"string\"\
            ]'"
  /rdb/v1/regions/{region}/instances/{instance_id}/apply-maintenance:
    post:
      tags:
        - Database Instances
      operationId: ApplyInstanceMaintenance
      summary: Apply Database Instance maintenance
      description: Apply maintenance tasks to your Database Instance. This will trigger
        pending maintenance tasks to start in your Database Instance and can generate
        service interruption. Maintenance tasks can be applied between `starts_at`
        and `stops_at` times, and are run directly by Scaleway at `forced_at` timestamp.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance you want to apply maintenance.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance you want to apply maintenance.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.Maintenance'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/apply-maintenance\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/apply-maintenance\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/instances/{instance_id}/certificate:
    get:
      tags:
        - Database Instances
      operationId: GetInstanceCertificate
      summary: Get the TLS certificate of a Database Instance
      description: Retrieve information about the TLS certificate of a given Database
        Instance. Details like name and content are returned in the response.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.std.File'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/certificate\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/certificate\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/instances/{instance_id}/clone:
    post:
      tags:
        - Database Instances
      operationId: CloneInstance
      summary: Clone a Database Instance
      description: Clone a given Database Instance, specified by the `region` and
        `instance_id` parameters. The clone feature allows you to create a new Database
        Instance from an existing one. The clone includes all existing databases,
        users and permissions. You can create a clone on a Database Instance bigger
        than your current one.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance you want to clone.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance you want to clone.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.Instance'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the Database Instance clone.
                node_type:
                  type: string
                  description: Node type of the clone.
                  nullable: true
              x-properties-order:
                - name
                - node_type
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"name\":\"string\"}'\
            \ \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/clone\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/clone\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  name=\"string\""
  /rdb/v1/regions/{region}/instances/{instance_id}/databases:
    get:
      tags:
        - Databases
      operationId: ListDatabases
      summary: List databases in a Database Instance
      description: List all databases of a given Database Instance. By default, the
        databases returned in the list are ordered by creation date in ascending order,
        though this can be modified via the order_by field. You can define additional
        parameters for your query, such as `name`, `managed` and `owner`.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance to list the databases of.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance to list the databases of.
        - in: query
          name: name
          description: Name of the database.
          schema:
            type: string
            description: Name of the database.
        - in: query
          name: managed
          description: Defines whether or not the database is managed.
          schema:
            type: boolean
            description: Defines whether or not the database is managed.
        - in: query
          name: owner
          description: User that owns this database.
          schema:
            type: string
            description: User that owns this database.
        - in: query
          name: order_by
          description: Criteria to use when ordering database listing.
          schema:
            type: string
            description: Criteria to use when ordering database listing.
            enum:
              - name_asc
              - name_desc
              - size_asc
              - size_desc
            default: name_asc
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/google.protobuf.Int32Value'
        - in: query
          name: page_size
          schema:
            type: integer
            format: uint32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.ListDatabasesResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/databases\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/databases\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    post:
      tags:
        - Databases
      operationId: CreateDatabase
      summary: Create a database in a Database Instance
      description: Create a new database. You must define the `name` parameter in
        the request.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance where to create the database.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance where to create the database.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.Database'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the database.
              x-properties-order:
                - name
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"name\":\"string\"}'\
            \ \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/databases\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/databases\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  name=\"string\""
  /rdb/v1/regions/{region}/instances/{instance_id}/databases/{name}:
    delete:
      tags:
        - Databases
      operationId: DeleteDatabase
      summary: Delete a database in a Database Instance
      description: Delete a given database on a Database Instance. You must specify,
        in the endpoint, the `region`, `instance_id` and `name` parameters of the
        database you want to delete.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance where to delete the database.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance where to delete the database.
        - in: path
          name: name
          description: Name of the database to delete.
          required: true
          schema:
            type: string
            description: Name of the database to delete.
      responses:
        '204':
          description: ''
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/databases/{name}\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/databases/{name}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/instances/{instance_id}/endpoints:
    post:
      tags:
        - Endpoints
      operationId: CreateEndpoint
      summary: Create a new Database Instance endpoint
      description: Create a new endpoint for a Database Instance. You can add `load_balancer`
        and `private_network` specifications to the body of the request.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance you to which you want to add
            an endpoint.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance you to which you want to add
              an endpoint.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.Endpoint'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                endpoint_spec:
                  type: object
                  description: Specification of the endpoint you want to create.
                  properties:
                    load_balancer:
                      type: object
                      description: Load balancer endpoint specifications. Public endpoint
                        for Database Instance which is systematically present. One
                        per RDB instance.
                      nullable: true
                      x-one-of: spec
                    private_network:
                      type: object
                      description: Private Network endpoint specifications. One maximum
                        per Database Instance or Read Replica (a Database Instance
                        and its Read Replica can have different Private Networks).
                        Cannot be updated (has to be deleted and recreated).
                      properties:
                        private_network_id:
                          type: string
                          description: UUID of the Private Network to be connected
                            to the Database Instance. (UUID format)
                          example: 6170692e-7363-616c-6577-61792e636f6d
                        service_ip:
                          type: string
                          description: Endpoint IPv4 address with a CIDR notation.
                            Refer to the official Scaleway documentation to learn
                            more about IP and subnet limitations. (IP network)
                          example: 1.2.3.4/32
                          nullable: true
                          x-one-of: config
                        ipam_config:
                          type: object
                          description: Automated configuration of your Private Network
                            endpoint with Scaleway IPAM service. One at the most per
                            Database Instance or Read Replica (a Database Instance
                            and its Read Replica can have different Private Networks).
                            Cannot be updated (has to be deleted and recreated).
                          nullable: true
                          x-one-of: config
                      nullable: true
                      x-properties-order:
                        - private_network_id
                        - service_ip
                        - ipam_config
                      x-one-of: spec
                  x-properties-order:
                    - load_balancer
                    - private_network
              x-properties-order:
                - endpoint_spec
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/endpoints\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/endpoints\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/instances/{instance_id}/logs:
    get:
      tags:
        - Database Instances
      operationId: ListInstanceLogs
      summary: List available logs of a Database Instance
      description: List the available logs of a Database Instance. By default, the
        logs returned in the list are ordered by creation date in ascending order,
        though this can be modified via the order_by field.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance you want logs of.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance you want logs of.
        - in: query
          name: order_by
          description: Criteria to use when ordering Database Instance logs listing.
          schema:
            type: string
            description: Criteria to use when ordering Database Instance logs listing.
            enum:
              - created_at_asc
              - created_at_desc
            default: created_at_asc
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.ListInstanceLogsResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/logs\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/logs\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/instances/{instance_id}/logs-details:
    get:
      tags:
        - Database Instances
      operationId: ListInstanceLogsDetails
      summary: List remote Database Instance logs details
      description: List remote log details. By default, the details returned in the
        list are ordered by creation date in ascending order, though this can be modified
        via the order_by field.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance you want logs of.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance you want logs of.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.ListInstanceLogsDetailsResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/logs-details\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/logs-details\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/instances/{instance_id}/metrics:
    get:
      tags:
        - Database Instances
      operationId: GetInstanceMetrics
      summary: Get Database Instance metrics
      description: Retrieve the time series metrics of a given Database Instance.
        You can define the period from which to retrieve metrics by specifying the
        `start_date` and `end_date`.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance.
        - in: query
          name: start_date
          description: Start date to gather metrics from. (RFC 3339 format)
          schema:
            type: string
            description: Start date to gather metrics from. (RFC 3339 format)
            format: date-time
            example: '2022-03-22T12:34:56.123456Z'
        - in: query
          name: end_date
          description: End date to gather metrics from. (RFC 3339 format)
          schema:
            type: string
            description: End date to gather metrics from. (RFC 3339 format)
            format: date-time
            example: '2022-03-22T12:34:56.123456Z'
        - in: query
          name: metric_name
          description: Name of the metric to gather.
          schema:
            type: string
            description: Name of the metric to gather.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.InstanceMetrics'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/metrics\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/metrics\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/instances/{instance_id}/prepare-logs:
    post:
      tags:
        - Database Instances
      operationId: PrepareInstanceLogs
      summary: Prepare logs of a Database Instance
      description: Prepare your Database Instance logs. You can define the `start_date`
        and `end_date` parameters for your query. The download URL is returned in
        the response. Logs are recorded from 00h00 to 23h59 and then aggregated in
        a `.log` file once a day. Therefore, even if you specify a timeframe from
        which you want to get the logs, you will receive logs from the full 24 hours.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance you want logs of.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance you want logs of.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.PrepareInstanceLogsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  description: Start datetime of your log. (RFC 3339 format). (RFC
                    3339 format)
                  format: date-time
                  example: '2022-03-22T12:34:56.123456Z'
                  nullable: true
                end_date:
                  type: string
                  description: End datetime of your log. (RFC 3339 format). (RFC 3339
                    format)
                  format: date-time
                  example: '2022-03-22T12:34:56.123456Z'
                  nullable: true
              x-properties-order:
                - start_date
                - end_date
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/prepare-logs\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/prepare-logs\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/instances/{instance_id}/privileges:
    get:
      tags:
        - Privileges
      operationId: ListPrivileges
      summary: List user privileges for a database
      description: List privileges of a user on a database. By default, the details
        returned in the list are ordered by creation date in ascending order, though
        this can be modified via the order_by field. You can define additional parameters
        for your query, such as `database_name` and `user_name`.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance.
        - in: query
          name: order_by
          description: Criteria to use when ordering privileges listing.
          schema:
            type: string
            description: Criteria to use when ordering privileges listing.
            enum:
              - user_name_asc
              - user_name_desc
              - database_name_asc
              - database_name_desc
            default: user_name_asc
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/google.protobuf.Int32Value'
        - in: query
          name: page_size
          schema:
            type: integer
            format: uint32
        - in: query
          name: database_name
          description: Name of the database.
          schema:
            type: string
            description: Name of the database.
        - in: query
          name: user_name
          description: Name of the user.
          schema:
            type: string
            description: Name of the user.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.ListPrivilegesResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/privileges\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/privileges\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    put:
      tags:
        - Privileges
      operationId: SetPrivilege
      summary: Set user privileges for a database
      description: Set the privileges of a user on a database. You must define `database_name`,
        `user_name` and `permission` in the request body.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.Privilege'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                database_name:
                  type: string
                  description: Name of the database.
                user_name:
                  type: string
                  description: Name of the user.
                permission:
                  type: string
                  description: Permission to set (Read, Read/Write, All, Custom).
                  enum:
                    - readonly
                    - readwrite
                    - all
                    - custom
                    - none
                  default: readonly
              x-properties-order:
                - database_name
                - user_name
                - permission
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X PUT \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"database_name\":\"string\"\
            ,\"user_name\":\"string\"}' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/privileges\""
        - lang: HTTPie
          source: "http PUT \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/privileges\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  database_name=\"string\" \\\
            \n  user_name=\"string\""
  /rdb/v1/regions/{region}/instances/{instance_id}/purge-logs:
    post:
      tags:
        - Database Instances
      operationId: PurgeInstanceLogs
      summary: Purge remote Database Instance logs
      description: Purge a given remote log from a Database Instance. You can specify
        the `log_name` of the log you wish to clean from your Database Instance.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance you want logs of.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance you want logs of.
      responses:
        '204':
          description: ''
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                log_name:
                  type: string
                  description: Given log name to purge.
                  nullable: true
              x-properties-order:
                - log_name
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/purge-logs\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/purge-logs\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/instances/{instance_id}/renew-certificate:
    post:
      tags:
        - Database Instances
      operationId: RenewInstanceCertificate
      summary: Renew the TLS certificate of a Database Instance
      description: Renew a TLS for a Database Instance. Renewing a certificate means
        that you will not be able to connect to your Database Instance using the previous
        certificate. You will also need to download and update the new certificate
        for all database clients.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance you want logs of.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance you want logs of.
      responses:
        '204':
          description: ''
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/renew-certificate\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/renew-certificate\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/instances/{instance_id}/restart:
    post:
      tags:
        - Database Instances
      operationId: RestartInstance
      summary: Restart Database Instance
      description: Restart a given Database Instance, specified by the `region` and
        `instance_id` parameters. The status of the Database Instance returned in
        the response.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance you want to restart.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance you want to restart.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.Instance'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/restart\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/restart\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/instances/{instance_id}/settings:
    post:
      tags:
        - Instance Settings
      operationId: AddInstanceSettings
      summary: Add Database Instance advanced settings
      description: Add an advanced setting to a Database Instance. You must set the
        `name` and the `value` of each setting.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance you want to add settings to.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance you want to add settings to.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.AddInstanceSettingsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                settings:
                  type: array
                  description: Settings to add to the Database Instance.
                  items:
                    $ref: '#/components/schemas/scaleway.rdb.v1.InstanceSetting'
              required:
                - settings
              x-properties-order:
                - settings
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"settings\":[\"\"]}'\
            \ \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/settings\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/settings\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  settings:='[\"\"]'"
    put:
      tags:
        - Instance Settings
      operationId: SetInstanceSettings
      summary: Set Database Instance advanced settings
      description: Update an advanced setting for a Database Instance. Settings added
        upon database engine initialization can only be defined once, and cannot,
        therefore, be updated.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance where the settings must be set.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance where the settings must be
              set.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.SetInstanceSettingsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                settings:
                  type: array
                  description: Settings to define for the Database Instance.
                  items:
                    $ref: '#/components/schemas/scaleway.rdb.v1.InstanceSetting'
              required:
                - settings
              x-properties-order:
                - settings
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X PUT \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"settings\":[\"\"]}'\
            \ \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/settings\""
        - lang: HTTPie
          source: "http PUT \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/settings\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  settings:='[\"\"]'"
    delete:
      tags:
        - Instance Settings
      operationId: DeleteInstanceSettings
      summary: Delete Database Instance advanced settings
      description: Delete an advanced setting in a Database Instance. You must specify
        the names of the settings you want to delete in the request.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance to delete settings from.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance to delete settings from.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.DeleteInstanceSettingsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                setting_names:
                  type: array
                  description: Settings names to delete.
                  items:
                    type: string
              required:
                - setting_names
              x-properties-order:
                - setting_names
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  -H \"Content-Type: application/json\" \\\n  -d '{\"setting_names\"\
            :[\"string\"]}' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/settings\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/settings\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  setting_names:='[\"string\"\
            ]'"
  /rdb/v1/regions/{region}/instances/{instance_id}/snapshots:
    post:
      tags:
        - Snapshots
      operationId: CreateSnapshot
      summary: Create a Database Instance snapshot
      description: Create a new snapshot of a Database Instance. You must define the
        `name` parameter in the request.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.Snapshot'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the snapshot.
                expires_at:
                  type: string
                  description: Expiration date (must follow the ISO 8601 format).
                    (RFC 3339 format)
                  format: date-time
                  example: '2022-03-22T12:34:56.123456Z'
                  nullable: true
              required:
                - name
              x-properties-order:
                - name
                - expires_at
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"name\":\"string\"}'\
            \ \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/snapshots\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/snapshots\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  name=\"string\""
  /rdb/v1/regions/{region}/instances/{instance_id}/upgrade:
    post:
      tags:
        - Database Instances
      operationId: UpgradeInstance
      summary: Upgrade a Database Instance
      description: Upgrade your current Database Instance specifications like node
        type, high availability, volume, or the database engine version. Note that
        upon upgrade the `enable_ha` parameter can only be set to `true`.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance you want to upgrade.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance you want to upgrade.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.Instance'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                node_type:
                  type: string
                  description: Node type of the Database Instance you want to upgrade
                    to.
                  nullable: true
                  x-one-of: UpgradeTarget
                enable_ha:
                  type: boolean
                  description: Defines whether or not high availability should be
                    enabled on the Database Instance.
                  nullable: true
                  x-one-of: UpgradeTarget
                volume_size:
                  type: integer
                  description: Increase your block storage volume size.
                  format: uint64
                  nullable: true
                  x-one-of: UpgradeTarget
                volume_type:
                  type: string
                  description: Change your Database Instance storage type.
                  enum:
                    - lssd
                    - bssd
                    - sbs_5k
                    - sbs_15k
                  nullable: true
                  default: lssd
                  x-one-of: UpgradeTarget
                upgradable_version_id:
                  type: string
                  description: 'Update your database engine to a newer version.

                    This will create a new Database Instance with same specifications
                    as the current one and perform a Database Engine upgrade. (UUID
                    format)'
                  example: 6170692e-7363-616c-6577-61792e636f6d
                  nullable: true
                  x-one-of: UpgradeTarget
                major_upgrade_workflow:
                  type: object
                  description: Upgrade your database engine to a new major version
                    including instance endpoints.
                  properties:
                    upgradable_version_id:
                      type: string
                      description: 'Update your database engine to a newer version.

                        This will create a new Database Instance with same specifications
                        as the current one and perform a Database Engine upgrade.
                        (UUID format)'
                      example: 6170692e-7363-616c-6577-61792e636f6d
                    with_endpoints:
                      type: boolean
                      description: 'Include endpoint during the migration.

                        At the end of the migration procedure this option let you
                        migrate all your database endpoint to the upgraded instance.
                        (UUID format)'
                      example: 6170692e-7363-616c-6577-61792e636f6d
                  nullable: true
                  x-properties-order:
                    - upgradable_version_id
                    - with_endpoints
                  x-one-of: UpgradeTarget
                enable_encryption:
                  type: boolean
                  description: Defines whether or not encryption should be enabled
                    on the Database Instance.
                  nullable: true
                  x-one-of: UpgradeTarget
              x-properties-order:
                - node_type
                - enable_ha
                - volume_size
                - volume_type
                - upgradable_version_id
                - major_upgrade_workflow
                - enable_encryption
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/upgrade\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/upgrade\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/instances/{instance_id}/users:
    get:
      tags:
        - Users
      operationId: ListUsers
      summary: List users of a Database Instance
      description: List all users of a given Database Instance. By default, the users
        returned in the list are ordered by creation date in ascending order, though
        this can be modified via the order_by field.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance.
        - in: query
          name: name
          description: Name of the user.
          schema:
            type: string
            description: Name of the user.
        - in: query
          name: order_by
          description: Criteria to use when requesting user listing.
          schema:
            type: string
            description: Criteria to use when requesting user listing.
            enum:
              - name_asc
              - name_desc
              - is_admin_asc
              - is_admin_desc
            default: name_asc
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/google.protobuf.Int32Value'
        - in: query
          name: page_size
          schema:
            type: integer
            format: uint32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.ListUsersResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/users\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/users\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    post:
      tags:
        - Users
      operationId: CreateUser
      summary: Create a user for a Database Instance
      description: Create a new user for a Database Instance. You must define the
        `name`, `password` and `is_admin` parameters.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance in which you want to create a
            user.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance in which you want to create
              a user.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.User'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the user you want to create.
                password:
                  type: string
                  description: Password of the user you want to create. Password must
                    be between 8 and 128 characters, contain at least one digit, one
                    uppercase, one lowercase and one special character.
                is_admin:
                  type: boolean
                  description: Defines whether the user will have administrative privileges.
              x-properties-order:
                - name
                - password
                - is_admin
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\n    \"is_admin\": false,\n\
            \    \"name\": \"string\",\n    \"password\": \"string\"\n  }' \\\n  \"\
            https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/users\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/users\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  is_admin:=false \\\n  name=\"\
            string\" \\\n  password=\"string\""
  /rdb/v1/regions/{region}/instances/{instance_id}/users/{name}:
    patch:
      tags:
        - Users
      operationId: UpdateUser
      summary: Update a user on a Database Instance
      description: Update the parameters of a user on a Database Instance. You can
        update the `password` and `is_admin` parameters, but you cannot change the
        name of the user.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance the user belongs to.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance the user belongs to.
        - in: path
          name: name
          description: Name of the database user.
          required: true
          schema:
            type: string
            description: Name of the database user.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.User'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: Password of the database user. Password must be between
                    8 and 128 characters, contain at least one digit, one uppercase,
                    one lowercase and one special character.
                  nullable: true
                is_admin:
                  type: boolean
                  description: Defines whether or not this user got administrative
                    privileges.
                  nullable: true
              x-properties-order:
                - password
                - is_admin
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X PATCH \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n \
            \ -H \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/users/{name}\""
        - lang: HTTPie
          source: "http PATCH \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/users/{name}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    delete:
      tags:
        - Users
      operationId: DeleteUser
      summary: Delete a user on a Database Instance
      description: Delete a given user on a Database Instance. You must specify, in
        the endpoint,  the `region`, `instance_id` and `name` parameters of the user
        you want to delete.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_id
          description: UUID of the Database Instance to delete the user from.
          required: true
          schema:
            type: string
            description: UUID of the Database Instance to delete the user from.
        - in: path
          name: name
          description: Name of the user.
          required: true
          schema:
            type: string
            description: Name of the user.
      responses:
        '204':
          description: ''
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/users/{name}\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/rdb/v1/regions/fr-par/instances/{instance_id}/users/{name}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/logs/{instance_log_id}:
    get:
      tags:
        - Database Instances
      operationId: GetInstanceLog
      summary: Get given logs of a Database Instance
      description: Retrieve information about the logs of a Database Instance. Specify
        the `instance_log_id` and `region` in your request to get information such
        as `download_url`, `status`, `expires_at` and `created_at` about your logs
        in the response.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: instance_log_id
          description: UUID of the instance_log you want.
          required: true
          schema:
            type: string
            description: UUID of the instance_log you want.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.InstanceLog'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/rdb/v1/regions/fr-par/logs/{instance_log_id}\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/rdb/v1/regions/fr-par/logs/{instance_log_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/node-types:
    get:
      tags:
        - NodeTypes
      operationId: ListNodeTypes
      summary: List available node types
      description: List all available node types. By default, the node types returned
        in the list are ordered by creation date in ascending order, though this can
        be modified via the `order_by` field.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: query
          name: include_disabled_types
          description: Defines whether or not to include disabled types.
          required: true
          schema:
            type: boolean
            description: Defines whether or not to include disabled types.
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/google.protobuf.Int32Value'
        - in: query
          name: page_size
          schema:
            type: integer
            format: uint32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.ListNodeTypesResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/rdb/v1/regions/fr-par/node-types?include_disabled_types=false\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/rdb/v1/regions/fr-par/node-types\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  include_disabled_types==false"
  /rdb/v1/regions/{region}/read-replicas:
    post:
      tags:
        - Read Replicas
      operationId: CreateReadReplica
      summary: Create a Read Replica
      description: Create a new Read Replica of a Database Instance. You must specify
        the `region` and the `instance_id`. You can only create a maximum of 3 Read
        Replicas per Database Instance.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.ReadReplica'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_id:
                  type: string
                  description: UUID of the Database Instance you want to create a
                    Read Replica from. (UUID format)
                  example: 6170692e-7363-616c-6577-61792e636f6d
                endpoint_spec:
                  type: array
                  description: Specification of the endpoint you want to create.
                  items:
                    $ref: '#/components/schemas/scaleway.rdb.v1.ReadReplicaEndpointSpec'
                same_zone:
                  type: boolean
                  description: Defines whether to create the replica in the same availability
                    zone as the main instance nodes or not.
                  nullable: true
              required:
                - instance_id
              x-properties-order:
                - instance_id
                - endpoint_spec
                - same_zone
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"instance_id\":\"6170692e-7363-616c-6577-61792e636f6d\"\
            }' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/read-replicas\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/read-replicas\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  instance_id=\"6170692e-7363-616c-6577-61792e636f6d\""
  /rdb/v1/regions/{region}/read-replicas/{read_replica_id}:
    get:
      tags:
        - Read Replicas
      operationId: GetReadReplica
      summary: Get a Read Replica
      description: Retrieve information about a Database Instance Read Replica. Full
        details about the Read Replica, like `endpoints`, `status`  and `region` are
        returned in the response.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: read_replica_id
          description: UUID of the Read Replica. (UUID format)
          required: true
          schema:
            type: string
            description: UUID of the Read Replica. (UUID format)
            example: 6170692e-7363-616c-6577-61792e636f6d
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.ReadReplica'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/rdb/v1/regions/fr-par/read-replicas/{read_replica_id}\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/rdb/v1/regions/fr-par/read-replicas/{read_replica_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    delete:
      tags:
        - Read Replicas
      operationId: DeleteReadReplica
      summary: Delete a Read Replica
      description: Delete a Read Replica of a Database Instance. You must specify
        the `region` and `read_replica_id` parameters of the Read Replica you want
        to delete.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: read_replica_id
          description: UUID of the Read Replica. (UUID format)
          required: true
          schema:
            type: string
            description: UUID of the Read Replica. (UUID format)
            example: 6170692e-7363-616c-6577-61792e636f6d
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.ReadReplica'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/rdb/v1/regions/fr-par/read-replicas/{read_replica_id}\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/rdb/v1/regions/fr-par/read-replicas/{read_replica_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/read-replicas/{read_replica_id}/endpoints:
    post:
      tags:
        - Read Replicas
      operationId: CreateReadReplicaEndpoint
      summary: Create an endpoint for a Read Replica
      description: Create a new endpoint for a Read Replica. Read Replicas can have
        at most one direct access and one Private Network endpoint.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: read_replica_id
          description: UUID of the Read Replica. (UUID format)
          required: true
          schema:
            type: string
            description: UUID of the Read Replica. (UUID format)
            example: 6170692e-7363-616c-6577-61792e636f6d
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.ReadReplica'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                endpoint_spec:
                  type: array
                  description: Specification of the endpoint you want to create.
                  items:
                    $ref: '#/components/schemas/scaleway.rdb.v1.ReadReplicaEndpointSpec'
              required:
                - endpoint_spec
              x-properties-order:
                - endpoint_spec
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"endpoint_spec\":[\"\"\
            ]}' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/read-replicas/{read_replica_id}/endpoints\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/read-replicas/{read_replica_id}/endpoints\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  endpoint_spec:='[\"\"]'"
  /rdb/v1/regions/{region}/read-replicas/{read_replica_id}/promote:
    post:
      tags:
        - Read Replicas
      operationId: PromoteReadReplica
      summary: Promote a Read Replica
      description: Promote a Read Replica to Database Instance automatically.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: read_replica_id
          description: UUID of the Read Replica. (UUID format)
          required: true
          schema:
            type: string
            description: UUID of the Read Replica. (UUID format)
            example: 6170692e-7363-616c-6577-61792e636f6d
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.Instance'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/read-replicas/{read_replica_id}/promote\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/read-replicas/{read_replica_id}/promote\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/read-replicas/{read_replica_id}/reset:
    post:
      tags:
        - Read Replicas
      operationId: ResetReadReplica
      summary: Resync a Read Replica
      description: 'When you resync a Read Replica, first it is reset, then its data
        is resynchronized from the primary node. Your Read Replica remains unavailable
        during the resync process. The duration of this process is proportional to
        the size of your Database Instance.

        The configured endpoints do not change.'
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: read_replica_id
          description: UUID of the Read Replica. (UUID format)
          required: true
          schema:
            type: string
            description: UUID of the Read Replica. (UUID format)
            example: 6170692e-7363-616c-6577-61792e636f6d
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.ReadReplica'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/read-replicas/{read_replica_id}/reset\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/read-replicas/{read_replica_id}/reset\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/snapshots:
    get:
      tags:
        - Snapshots
      operationId: ListSnapshots
      summary: List snapshots
      description: List snapshots. You can include the `instance_id` or `project_id`
        in your query to get the list of snapshots for specific Database Instances
        and/or Projects. By default, the details returned in the list are ordered
        by creation date in ascending order, though this can be modified via the `order_by`
        field.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: query
          name: name
          description: Name of the snapshot.
          schema:
            type: string
            description: Name of the snapshot.
        - in: query
          name: order_by
          description: Criteria to use when ordering snapshot listing.
          schema:
            type: string
            description: Criteria to use when ordering snapshot listing.
            enum:
              - created_at_asc
              - created_at_desc
              - name_asc
              - name_desc
              - expires_at_asc
              - expires_at_desc
            default: created_at_asc
        - in: query
          name: instance_id
          description: UUID of the Database Instance.
          schema:
            type: string
            description: UUID of the Database Instance.
        - in: query
          name: organization_id
          description: Organization ID the snapshots belongs to.
          schema:
            type: string
            description: Organization ID the snapshots belongs to.
        - in: query
          name: project_id
          description: Project ID the snapshots belongs to.
          schema:
            type: string
            description: Project ID the snapshots belongs to.
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/google.protobuf.Int32Value'
        - in: query
          name: page_size
          schema:
            type: integer
            format: uint32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.ListSnapshotsResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/rdb/v1/regions/fr-par/snapshots\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/rdb/v1/regions/fr-par/snapshots\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/snapshots/{snapshot_id}:
    get:
      tags:
        - Snapshots
      operationId: GetSnapshot
      summary: Get a Database Instance snapshot
      description: Retrieve information about a given snapshot, specified by its `snapshot_id`
        and `region`. Full details about the snapshot, like size and expiration date,
        are returned in the response.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: snapshot_id
          description: UUID of the snapshot.
          required: true
          schema:
            type: string
            description: UUID of the snapshot.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.Snapshot'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/rdb/v1/regions/fr-par/snapshots/{snapshot_id}\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/rdb/v1/regions/fr-par/snapshots/{snapshot_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    patch:
      tags:
        - Snapshots
      operationId: UpdateSnapshot
      summary: Update a Database Instance snapshot
      description: Update the parameters of a snapshot of a Database Instance. You
        can update the `name` and `expires_at` parameters.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: snapshot_id
          description: UUID of the snapshot to update.
          required: true
          schema:
            type: string
            description: UUID of the snapshot to update.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.Snapshot'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the snapshot.
                  nullable: true
                expires_at:
                  type: string
                  description: Expiration date (must follow the ISO 8601 format).
                    (RFC 3339 format)
                  format: date-time
                  example: '2022-03-22T12:34:56.123456Z'
                  nullable: true
              x-properties-order:
                - name
                - expires_at
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X PATCH \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n \
            \ -H \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/snapshots/{snapshot_id}\""
        - lang: HTTPie
          source: "http PATCH \"https://api.scaleway.com/rdb/v1/regions/fr-par/snapshots/{snapshot_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    delete:
      tags:
        - Snapshots
      operationId: DeleteSnapshot
      summary: Delete a Database Instance snapshot
      description: Delete a given snapshot of a Database Instance. You must specify,
        in the endpoint,  the `region` and `snapshot_id` parameters of the snapshot
        you want to delete.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: snapshot_id
          description: UUID of the snapshot to delete.
          required: true
          schema:
            type: string
            description: UUID of the snapshot to delete.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.Snapshot'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/rdb/v1/regions/fr-par/snapshots/{snapshot_id}\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/rdb/v1/regions/fr-par/snapshots/{snapshot_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /rdb/v1/regions/{region}/snapshots/{snapshot_id}/create-instance:
    post:
      tags:
        - Snapshots
      operationId: CreateInstanceFromSnapshot
      summary: Create a new Database Instance from a snapshot
      description: Restore a snapshot. When you restore a snapshot, a new Instance
        is created and billed to your account. Note that is possible to select a larger
        node type for your new Database Instance. However, the Block volume size will
        be the same as the size of the restored snapshot. All Instance settings will
        be restored if you chose a node type with the same or more memory size than
        the initial Instance. Settings will be reset to the default if your node type
        has less memory.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: snapshot_id
          description: Block snapshot of the Database Instance.
          required: true
          schema:
            type: string
            description: Block snapshot of the Database Instance.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.rdb.v1.Instance'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_name:
                  type: string
                  description: Name of the Database Instance created with the snapshot.
                is_ha_cluster:
                  type: boolean
                  description: Defines whether or not High-Availability is enabled
                    on the new Database Instance.
                  nullable: true
                node_type:
                  type: string
                  description: The node type used to restore the snapshot.
                  nullable: true
              x-properties-order:
                - instance_name
                - is_ha_cluster
                - node_type
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"instance_name\":\"string\"\
            }' \\\n  \"https://api.scaleway.com/rdb/v1/regions/fr-par/snapshots/{snapshot_id}/create-instance\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/rdb/v1/regions/fr-par/snapshots/{snapshot_id}/create-instance\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  instance_name=\"string\""
  /registry/v1/regions/{region}/images:
    get:
      tags:
        - Images
      operationId: ListImages
      summary: List images
      description: List all images in a specified region. By default, the images listed
        are ordered by creation date in ascending order. This can be modified via
        the order_by field. You can also define additional parameters for your query,
        such as the `namespace_id` and `project_id` parameters.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: query
          name: page
          description: A positive integer to choose the page to display.
          schema:
            type: integer
            description: A positive integer to choose the page to display.
            format: int32
        - in: query
          name: page_size
          description: A positive integer lower or equal to 100 to select the number
            of items to display.
          schema:
            type: integer
            description: A positive integer lower or equal to 100 to select the number
              of items to display.
            format: uint32
        - in: query
          name: order_by
          description: Criteria to use when ordering image listings. Possible values
            are `created_at_asc`, `created_at_desc`, `name_asc`, `name_desc`, `region`,
            `status_asc` and `status_desc`. The default value is `created_at_asc`.
          schema:
            type: string
            description: Criteria to use when ordering image listings. Possible values
              are `created_at_asc`, `created_at_desc`, `name_asc`, `name_desc`, `region`,
              `status_asc` and `status_desc`. The default value is `created_at_asc`.
            enum:
              - created_at_asc
              - created_at_desc
              - name_asc
              - name_desc
            default: created_at_asc
        - in: query
          name: namespace_id
          description: Filter by the namespace ID.
          schema:
            type: string
            description: Filter by the namespace ID.
        - in: query
          name: name
          description: Filter by the image name (exact match).
          schema:
            type: string
            description: Filter by the image name (exact match).
        - in: query
          name: organization_id
          description: Filter by Organization ID.
          schema:
            type: string
            description: Filter by Organization ID.
        - in: query
          name: project_id
          description: Filter by Project ID.
          schema:
            type: string
            description: Filter by Project ID.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.registry.v1.ListImagesResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/registry/v1/regions/fr-par/images\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/registry/v1/regions/fr-par/images\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /registry/v1/regions/{region}/images/{image_id}:
    get:
      tags:
        - Images
      operationId: GetImage
      summary: Get an image
      description: Retrieve information about a given container image, specified by
        its `image_id` and region. Full details about the image, such as `name`, `namespace_id`,
        `status`, `visibility`, and `size` are returned in the response.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: image_id
          description: UUID of the image.
          required: true
          schema:
            type: string
            description: UUID of the image.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.registry.v1.Image'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/registry/v1/regions/fr-par/images/{image_id}\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/registry/v1/regions/fr-par/images/{image_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    patch:
      tags:
        - Images
      operationId: UpdateImage
      summary: Update an image
      description: Update the parameters of a given image, specified by its `image_id`
        and `region`. You can update the `visibility` parameter.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: image_id
          description: ID of the image to update.
          required: true
          schema:
            type: string
            description: ID of the image to update.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.registry.v1.Image'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                visibility:
                  type: string
                  description: Set to `public` to allow the image to be pulled without
                    authentication. Else, set to  `private`. Set to `inherit` to keep
                    the same visibility configuration as the namespace.
                  enum:
                    - visibility_unknown
                    - inherit
                    - public
                    - private
                  default: visibility_unknown
              x-properties-order:
                - visibility
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X PATCH \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n \
            \ -H \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/registry/v1/regions/fr-par/images/{image_id}\""
        - lang: HTTPie
          source: "http PATCH \"https://api.scaleway.com/registry/v1/regions/fr-par/images/{image_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    delete:
      tags:
        - Images
      operationId: DeleteImage
      summary: Delete an image
      description: Delete a given image. You must specify, in the endpoint, the `region`
        and `image_id` parameters of the image you want to delete.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: image_id
          description: UUID of the image.
          required: true
          schema:
            type: string
            description: UUID of the image.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.registry.v1.Image'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/registry/v1/regions/fr-par/images/{image_id}\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/registry/v1/regions/fr-par/images/{image_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /registry/v1/regions/{region}/images/{image_id}/tags:
    get:
      tags:
        - Tags
      operationId: ListTags
      summary: List tags
      description: List all tags for a given image, specified by region. By default,
        the tags listed are ordered by creation date in ascending order. This can
        be modified via the order_by field. You can also define additional parameters
        for your query, such as the `name`.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: image_id
          description: UUID of the image.
          required: true
          schema:
            type: string
            description: UUID of the image.
        - in: query
          name: page
          description: A positive integer to choose the page to display.
          schema:
            type: integer
            description: A positive integer to choose the page to display.
            format: int32
        - in: query
          name: page_size
          description: A positive integer lower or equal to 100 to select the number
            of items to display.
          schema:
            type: integer
            description: A positive integer lower or equal to 100 to select the number
              of items to display.
            format: uint32
        - in: query
          name: order_by
          description: Criteria to use when ordering tag listings. Possible values
            are `created_at_asc`, `created_at_desc`, `name_asc`, `name_desc`, `region`,
            `status_asc` and `status_desc`. The default value is `created_at_asc`.
          schema:
            type: string
            description: Criteria to use when ordering tag listings. Possible values
              are `created_at_asc`, `created_at_desc`, `name_asc`, `name_desc`, `region`,
              `status_asc` and `status_desc`. The default value is `created_at_asc`.
            enum:
              - created_at_asc
              - created_at_desc
              - name_asc
              - name_desc
            default: created_at_asc
        - in: query
          name: name
          description: Filter by the tag name (exact match).
          schema:
            type: string
            description: Filter by the tag name (exact match).
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.registry.v1.ListTagsResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/registry/v1/regions/fr-par/images/{image_id}/tags\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/registry/v1/regions/fr-par/images/{image_id}/tags\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /registry/v1/regions/{region}/namespaces:
    get:
      tags:
        - Namespaces
      operationId: ListNamespaces
      summary: List namespaces
      description: List all namespaces in a specified region. By default, the namespaces
        listed are ordered by creation date in ascending order. This can be modified
        via the order_by field. You can also define additional parameters for your
        query, such as the `instance_id` and `project_id` parameters.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: query
          name: page
          description: A positive integer to choose the page to display.
          schema:
            type: integer
            description: A positive integer to choose the page to display.
            format: int32
        - in: query
          name: page_size
          description: A positive integer lower or equal to 100 to select the number
            of items to display.
          schema:
            type: integer
            description: A positive integer lower or equal to 100 to select the number
              of items to display.
            format: uint32
        - in: query
          name: order_by
          description: Criteria to use when ordering namespace listings. Possible
            values are `created_at_asc`, `created_at_desc`, `name_asc`, `name_desc`,
            `region`, `status_asc` and `status_desc`. The default value is `created_at_asc`.
          schema:
            type: string
            description: Criteria to use when ordering namespace listings. Possible
              values are `created_at_asc`, `created_at_desc`, `name_asc`, `name_desc`,
              `region`, `status_asc` and `status_desc`. The default value is `created_at_asc`.
            enum:
              - created_at_asc
              - created_at_desc
              - description_asc
              - description_desc
              - name_asc
              - name_desc
            default: created_at_asc
        - in: query
          name: organization_id
          description: Filter by Organization ID.
          schema:
            type: string
            description: Filter by Organization ID.
        - in: query
          name: project_id
          description: Filter by Project ID.
          schema:
            type: string
            description: Filter by Project ID.
        - in: query
          name: name
          description: Filter by the namespace name (exact match).
          schema:
            type: string
            description: Filter by the namespace name (exact match).
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.registry.v1.ListNamespacesResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/registry/v1/regions/fr-par/namespaces\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/registry/v1/regions/fr-par/namespaces\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    post:
      tags:
        - Namespaces
      operationId: CreateNamespace
      summary: Create a namespace
      description: Create a new Container Registry namespace. You must specify the
        namespace name and region in which you want it to be created. Optionally,
        you can specify the `project_id` and `is_public` in the request payload.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.registry.v1.Namespace'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the namespace.
                description:
                  type: string
                  description: Description of the namespace.
                organization_id:
                  type: string
                  description: Namespace owner (deprecated).
                  deprecated: true
                  nullable: true
                  x-one-of: ProjectIdentifier
                project_id:
                  type: string
                  description: Project ID on which the namespace will be created.
                  nullable: true
                  x-one-of: ProjectIdentifier
                is_public:
                  type: boolean
                  description: Defines whether or not namespace is public.
              required:
                - name
              x-properties-order:
                - name
                - description
                - organization_id
                - project_id
                - is_public
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\n    \"description\"\
            : \"string\",\n    \"is_public\": false,\n    \"name\": \"string\"\n \
            \ }' \\\n  \"https://api.scaleway.com/registry/v1/regions/fr-par/namespaces\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/registry/v1/regions/fr-par/namespaces\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  description=\"string\" \\\n\
            \  is_public:=false \\\n  name=\"string\""
  /registry/v1/regions/{region}/namespaces/{namespace_id}:
    get:
      tags:
        - Namespaces
      operationId: GetNamespace
      summary: Get a namespace
      description: Retrieve information about a given namespace, specified by its
        `namespace_id` and region. Full details about the namespace, such as `description`,
        `project_id`, `status`, `endpoint`, `is_public`, `size`, and `image_count`
        are returned in the response.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: namespace_id
          description: UUID of the namespace.
          required: true
          schema:
            type: string
            description: UUID of the namespace.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.registry.v1.Namespace'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/registry/v1/regions/fr-par/namespaces/{namespace_id}\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/registry/v1/regions/fr-par/namespaces/{namespace_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    patch:
      tags:
        - Namespaces
      operationId: UpdateNamespace
      summary: Update a namespace
      description: Update the parameters of a given namespace, specified by its `namespace_id`
        and `region`. You can update the `description` and `is_public` parameters.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: namespace_id
          description: ID of the namespace to update.
          required: true
          schema:
            type: string
            description: ID of the namespace to update.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.registry.v1.Namespace'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: Namespace description.
                  nullable: true
                is_public:
                  type: boolean
                  description: Defines whether or not the namespace is public.
                  nullable: true
              x-properties-order:
                - description
                - is_public
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X PATCH \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n \
            \ -H \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/registry/v1/regions/fr-par/namespaces/{namespace_id}\""
        - lang: HTTPie
          source: "http PATCH \"https://api.scaleway.com/registry/v1/regions/fr-par/namespaces/{namespace_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    delete:
      tags:
        - Namespaces
      operationId: DeleteNamespace
      summary: Delete a namespace
      description: Delete a given namespace. You must specify, in the endpoint, the
        `region` and `namespace_id` parameters of the namespace you want to delete.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: namespace_id
          description: UUID of the namespace.
          required: true
          schema:
            type: string
            description: UUID of the namespace.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.registry.v1.Namespace'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/registry/v1/regions/fr-par/namespaces/{namespace_id}\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/registry/v1/regions/fr-par/namespaces/{namespace_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /registry/v1/regions/{region}/tags/{tag_id}:
    get:
      tags:
        - Tags
      operationId: GetTag
      summary: Get a tag
      description: Retrieve information about a given image tag, specified by its
        `tag_id` and region. Full details about the tag, such as `name`, `image_id`,
        `status`, and `digest` are returned in the response.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: tag_id
          description: UUID of the tag.
          required: true
          schema:
            type: string
            description: UUID of the tag.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.registry.v1.Tag'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/registry/v1/regions/fr-par/tags/{tag_id}\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/registry/v1/regions/fr-par/tags/{tag_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    delete:
      tags:
        - Tags
      operationId: DeleteTag
      summary: Delete a tag
      description: Delete a given image tag. You must specify, in the endpoint, the
        `region` and `tag_id` parameters of the tag you want to delete.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: tag_id
          description: UUID of the tag.
          required: true
          schema:
            type: string
            description: UUID of the tag.
        - in: query
          name: force
          description: If two tags share the same digest the deletion will fail unless
            this parameter is set to true (deprecated).
          schema:
            type: boolean
            description: If two tags share the same digest the deletion will fail
              unless this parameter is set to true (deprecated).
            deprecated: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.registry.v1.Tag'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/registry/v1/regions/fr-par/tags/{tag_id}\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/registry/v1/regions/fr-par/tags/{tag_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /k8s/v1/regions/{region}/acls/{acl_id}:
    delete:
      tags:
        - Access Control List
      operationId: DeleteACLRule
      summary: Delete an existing ACL
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: acl_id
          description: ID of the ACL rule to delete.
          required: true
          schema:
            type: string
            description: ID of the ACL rule to delete.
      responses:
        '204':
          description: ''
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/k8s/v1/regions/fr-par/acls/{acl_id}\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/k8s/v1/regions/fr-par/acls/{acl_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /k8s/v1/regions/{region}/cluster-types:
    get:
      tags:
        - Cluster types
      operationId: ListClusterTypes
      summary: List cluster types
      description: List available cluster types and their technical details.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: query
          name: page
          description: Page number, from the paginated results, to return for cluster-types.
          schema:
            type: integer
            description: Page number, from the paginated results, to return for cluster-types.
            format: int32
        - in: query
          name: page_size
          description: Maximum number of clusters per page.
          schema:
            type: integer
            description: Maximum number of clusters per page.
            format: uint32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.ListClusterTypesResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/k8s/v1/regions/fr-par/cluster-types\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/k8s/v1/regions/fr-par/cluster-types\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /k8s/v1/regions/{region}/clusters:
    get:
      tags:
        - Clusters
      operationId: ListClusters
      summary: List Clusters
      description: List all existing Kubernetes clusters in a specific region.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: query
          name: organization_id
          description: Organization ID on which to filter the returned clusters.
          schema:
            type: string
            description: Organization ID on which to filter the returned clusters.
        - in: query
          name: project_id
          description: Project ID on which to filter the returned clusters.
          schema:
            type: string
            description: Project ID on which to filter the returned clusters.
        - in: query
          name: order_by
          description: Sort order of returned clusters.
          schema:
            type: string
            description: Sort order of returned clusters.
            enum:
              - created_at_asc
              - created_at_desc
              - updated_at_asc
              - updated_at_desc
              - name_asc
              - name_desc
              - status_asc
              - status_desc
              - version_asc
              - version_desc
            default: created_at_asc
        - in: query
          name: page
          description: Page number to return for clusters, from the paginated results.
          schema:
            type: integer
            description: Page number to return for clusters, from the paginated results.
            format: int32
        - in: query
          name: page_size
          description: Maximum number of clusters per page.
          schema:
            type: integer
            description: Maximum number of clusters per page.
            format: uint32
        - in: query
          name: name
          description: Name to filter on, only clusters containing this substring
            in their name will be returned.
          schema:
            type: string
            description: Name to filter on, only clusters containing this substring
              in their name will be returned.
        - in: query
          name: status
          description: Status to filter on, only clusters with this status will be
            returned.
          schema:
            type: string
            description: Status to filter on, only clusters with this status will
              be returned.
            enum:
              - unknown
              - creating
              - ready
              - deleting
              - deleted
              - updating
              - locked
              - pool_required
            default: unknown
        - in: query
          name: type
          description: Type to filter on, only clusters with this type will be returned.
          schema:
            type: string
            description: Type to filter on, only clusters with this type will be returned.
        - in: query
          name: private_network_id
          description: Private Network ID to filter on, only clusters within this
            Private Network will be returned.
          schema:
            type: string
            description: Private Network ID to filter on, only clusters within this
              Private Network will be returned.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.ListClustersResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/k8s/v1/regions/fr-par/clusters\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    post:
      tags:
        - Clusters
      operationId: CreateCluster
      summary: Create a new Cluster
      description: Create a new Kubernetes cluster in a Scaleway region.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.Cluster'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organization_id:
                  type: string
                  description: Organization ID in which the cluster will be created.
                  deprecated: true
                  nullable: true
                  x-one-of: ProjectIdentifier
                project_id:
                  type: string
                  description: Project ID in which the cluster will be created.
                  nullable: true
                  x-one-of: ProjectIdentifier
                type:
                  type: string
                  description: Type of the cluster. See [list available cluster types](#list-available-cluster-types-for-a-cluster)
                    for a list of valid types.
                name:
                  type: string
                  description: Cluster name.
                description:
                  type: string
                  description: Cluster description.
                tags:
                  type: array
                  description: Tags associated with the cluster.
                  items:
                    type: string
                version:
                  type: string
                  description: Kubernetes version of the cluster.
                cni:
                  type: string
                  description: Container Network Interface (CNI) plugin running in
                    the cluster.
                  enum:
                    - unknown_cni
                    - cilium
                    - calico
                    - weave
                    - flannel
                    - kilo
                    - none
                  default: unknown_cni
                pools:
                  type: array
                  description: Pools created along with the cluster.
                  items:
                    $ref: '#/components/schemas/scaleway.k8s.v1.CreateClusterRequest.PoolConfig'
                autoscaler_config:
                  type: object
                  description: Autoscaler configuration for the cluster. It allows
                    you to set (to an extent) your preferred autoscaler configuration,
                    which is an implementation of the cluster-autoscaler (https://github.com/kubernetes/autoscaler/tree/master/cluster-autoscaler/).
                  properties:
                    scale_down_disabled:
                      type: boolean
                      description: Disable the cluster autoscaler.
                      nullable: true
                    scale_down_delay_after_add:
                      type: string
                      description: How long after scale up the scale down evaluation
                        resumes.
                      nullable: true
                    estimator:
                      type: string
                      description: Type of resource estimator to be used in scale
                        up.
                      enum:
                        - unknown_estimator
                        - binpacking
                      default: unknown_estimator
                    expander:
                      type: string
                      description: Type of node group expander to be used in scale
                        up.
                      enum:
                        - unknown_expander
                        - random
                        - most_pods
                        - least_waste
                        - priority
                        - price
                      default: unknown_expander
                    ignore_daemonsets_utilization:
                      type: boolean
                      description: Ignore DaemonSet pods when calculating resource
                        utilization for scaling down.
                      nullable: true
                    balance_similar_node_groups:
                      type: boolean
                      description: Detect similar node groups and balance the number
                        of nodes between them.
                      nullable: true
                    expendable_pods_priority_cutoff:
                      type: integer
                      description: Pods with priority below cutoff will be expendable.
                        They can be killed without any consideration during scale
                        down and they won't cause scale up. Pods with null priority
                        (PodPriority disabled) are non expendable.
                      format: int32
                      nullable: true
                    scale_down_unneeded_time:
                      type: string
                      description: How long a node should be unneeded before it is
                        eligible to be scaled down.
                      nullable: true
                    scale_down_utilization_threshold:
                      type: object
                      description: Node utilization level, defined as a sum of requested
                        resources divided by capacity, below which a node can be considered
                        for scale down.
                      properties:
                        value:
                          type: number
                          format: float
                      x-properties-order:
                        - value
                    max_graceful_termination_sec:
                      type: integer
                      description: Maximum number of seconds the cluster autoscaler
                        waits for pod termination when trying to scale down a node.
                      format: uint32
                      nullable: true
                  x-properties-order:
                    - scale_down_disabled
                    - scale_down_delay_after_add
                    - estimator
                    - expander
                    - ignore_daemonsets_utilization
                    - balance_similar_node_groups
                    - expendable_pods_priority_cutoff
                    - scale_down_unneeded_time
                    - scale_down_utilization_threshold
                    - max_graceful_termination_sec
                auto_upgrade:
                  type: object
                  description: Auto upgrade configuration of the cluster. This configuration
                    enables to set a specific 2-hour time window in which the cluster
                    can be automatically updated to the latest patch version.
                  properties:
                    enable:
                      type: boolean
                      description: Defines whether auto upgrade is enabled for the
                        cluster.
                    maintenance_window:
                      type: object
                      description: Maintenance window of the cluster auto upgrades.
                      properties:
                        start_hour:
                          type: integer
                          description: Start time of the two-hour maintenance window.
                          format: uint32
                        day:
                          type: string
                          description: Day of the week for the maintenance window.
                          enum:
                            - any
                            - monday
                            - tuesday
                            - wednesday
                            - thursday
                            - friday
                            - saturday
                            - sunday
                          default: any
                      x-properties-order:
                        - start_hour
                        - day
                  x-properties-order:
                    - enable
                    - maintenance_window
                feature_gates:
                  type: array
                  description: List of feature gates to enable.
                  items:
                    type: string
                admission_plugins:
                  type: array
                  description: List of admission plugins to enable.
                  items:
                    type: string
                open_id_connect_config:
                  type: object
                  description: OpenID Connect configuration of the cluster. This configuration
                    enables to update the OpenID Connect configuration of the Kubernetes
                    API server.
                  properties:
                    issuer_url:
                      type: string
                      description: URL of the provider which allows the API server
                        to discover public signing keys. Only URLs using the `https://`
                        scheme are accepted. This is typically the provider's discovery
                        URL without a path, for example "https://accounts.google.com"
                        or "https://login.salesforce.com".
                    client_id:
                      type: string
                      description: A client ID that all tokens must be issued for.
                    username_claim:
                      type: string
                      description: JWT claim to use as the user name. The default
                        is `sub`, which is expected to be the end user's unique identifier.
                        Admins can choose other claims, such as `email` or `name`,
                        depending on their provider. However, claims other than `email`
                        will be prefixed with the issuer URL to prevent name collision.
                      nullable: true
                    username_prefix:
                      type: string
                      description: Prefix prepended to username claims to prevent
                        name collision (such as `system:` users). For example, the
                        value `oidc:` will create usernames like `oidc:jane.doe`.
                        If this flag is not provided and `username_claim` is a value
                        other than `email`, the prefix defaults to `( Issuer URL )#`
                        where `( Issuer URL )` is the value of `issuer_url`. The value
                        `-` can be used to disable all prefixing.
                      nullable: true
                    groups_claim:
                      type: array
                      description: JWT claim to use as the user's group.
                      nullable: true
                      items:
                        type: string
                    groups_prefix:
                      type: string
                      description: Prefix prepended to group claims to prevent name
                        collision (such as `system:` groups). For example, the value
                        `oidc:` will create group names like `oidc:engineering` and
                        `oidc:infra`.
                      nullable: true
                    required_claim:
                      type: array
                      description: Multiple key=value pairs describing a required
                        claim in the ID token. If set, the claims are verified to
                        be present in the ID token with a matching value.
                      nullable: true
                      items:
                        type: string
                  x-properties-order:
                    - issuer_url
                    - client_id
                    - username_claim
                    - username_prefix
                    - groups_claim
                    - groups_prefix
                    - required_claim
                apiserver_cert_sans:
                  type: array
                  description: Additional Subject Alternative Names for the Kubernetes
                    API server certificate.
                  items:
                    type: string
                private_network_id:
                  type: string
                  description: Private network ID for internal cluster communication
                    (cannot be changed later).
                  nullable: true
              required:
                - name
                - version
                - cni
              x-properties-order:
                - organization_id
                - project_id
                - type
                - name
                - description
                - tags
                - version
                - cni
                - pools
                - autoscaler_config
                - auto_upgrade
                - feature_gates
                - admission_plugins
                - open_id_connect_config
                - apiserver_cert_sans
                - private_network_id
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\n    \"cni\": \"unknown_cni\"\
            ,\n    \"description\": \"string\",\n    \"name\": \"string\",\n    \"\
            type\": \"string\",\n    \"version\": \"string\"\n  }' \\\n  \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  cni=\"unknown_cni\" \\\n  description=\"\
            string\" \\\n  name=\"string\" \\\n  type=\"string\" \\\n  version=\"\
            string\""
  /k8s/v1/regions/{region}/clusters/{cluster_id}:
    get:
      tags:
        - Clusters
      operationId: GetCluster
      summary: Get a Cluster
      description: Retrieve information about a specific Kubernetes cluster.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: cluster_id
          description: ID of the requested cluster.
          required: true
          schema:
            type: string
            description: ID of the requested cluster.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.Cluster'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    patch:
      tags:
        - Clusters
      operationId: UpdateCluster
      summary: Update a Cluster
      description: Update information on a specific Kubernetes cluster. You can update
        details such as its name, description, tags and configuration. To upgrade
        a cluster, you will need to use the dedicated endpoint.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: cluster_id
          description: ID of the cluster to update.
          required: true
          schema:
            type: string
            description: ID of the cluster to update.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.Cluster'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: New external name for the cluster.
                  nullable: true
                description:
                  type: string
                  description: New description for the cluster.
                  nullable: true
                tags:
                  type: array
                  description: New tags associated with the cluster.
                  nullable: true
                  items:
                    type: string
                autoscaler_config:
                  type: object
                  description: New autoscaler config for the cluster.
                  properties:
                    scale_down_disabled:
                      type: boolean
                      description: Disable the cluster autoscaler.
                      nullable: true
                    scale_down_delay_after_add:
                      type: string
                      description: How long after scale up the scale down evaluation
                        resumes.
                      nullable: true
                    estimator:
                      type: string
                      description: Type of resource estimator to be used in scale
                        up.
                      enum:
                        - unknown_estimator
                        - binpacking
                      default: unknown_estimator
                    expander:
                      type: string
                      description: Type of node group expander to be used in scale
                        up.
                      enum:
                        - unknown_expander
                        - random
                        - most_pods
                        - least_waste
                        - priority
                        - price
                      default: unknown_expander
                    ignore_daemonsets_utilization:
                      type: boolean
                      description: Ignore DaemonSet pods when calculating resource
                        utilization for scaling down.
                      nullable: true
                    balance_similar_node_groups:
                      type: boolean
                      description: Detect similar node groups and balance the number
                        of nodes between them.
                      nullable: true
                    expendable_pods_priority_cutoff:
                      type: integer
                      description: Pods with priority below cutoff will be expendable.
                        They can be killed without any consideration during scale
                        down and they won't cause scale up. Pods with null priority
                        (PodPriority disabled) are non expendable.
                      format: int32
                      nullable: true
                    scale_down_unneeded_time:
                      type: string
                      description: How long a node should be unneeded before it is
                        eligible to be scaled down.
                      nullable: true
                    scale_down_utilization_threshold:
                      type: object
                      description: Node utilization level, defined as a sum of requested
                        resources divided by capacity, below which a node can be considered
                        for scale down.
                      properties:
                        value:
                          type: number
                          format: float
                      x-properties-order:
                        - value
                    max_graceful_termination_sec:
                      type: integer
                      description: Maximum number of seconds the cluster autoscaler
                        waits for pod termination when trying to scale down a node.
                      format: uint32
                      nullable: true
                  x-properties-order:
                    - scale_down_disabled
                    - scale_down_delay_after_add
                    - estimator
                    - expander
                    - ignore_daemonsets_utilization
                    - balance_similar_node_groups
                    - expendable_pods_priority_cutoff
                    - scale_down_unneeded_time
                    - scale_down_utilization_threshold
                    - max_graceful_termination_sec
                auto_upgrade:
                  type: object
                  description: New auto upgrade configuration for the cluster. Note
                    that all fields needs to be set.
                  properties:
                    enable:
                      type: boolean
                      description: Defines whether auto upgrade is enabled for the
                        cluster.
                      nullable: true
                    maintenance_window:
                      type: object
                      description: Maintenance window of the cluster auto upgrades.
                      properties:
                        start_hour:
                          type: integer
                          description: Start time of the two-hour maintenance window.
                          format: uint32
                        day:
                          type: string
                          description: Day of the week for the maintenance window.
                          enum:
                            - any
                            - monday
                            - tuesday
                            - wednesday
                            - thursday
                            - friday
                            - saturday
                            - sunday
                          default: any
                      x-properties-order:
                        - start_hour
                        - day
                  x-properties-order:
                    - enable
                    - maintenance_window
                feature_gates:
                  type: array
                  description: List of feature gates to enable.
                  nullable: true
                  items:
                    type: string
                admission_plugins:
                  type: array
                  description: List of admission plugins to enable.
                  nullable: true
                  items:
                    type: string
                open_id_connect_config:
                  type: object
                  description: OpenID Connect configuration of the cluster. This configuration
                    enables to update the OpenID Connect configuration of the Kubernetes
                    API server.
                  properties:
                    issuer_url:
                      type: string
                      description: URL of the provider which allows the API server
                        to discover public signing keys. Only URLs using the `https://`
                        scheme are accepted. This is typically the provider's discovery
                        URL without a path, for example "https://accounts.google.com"
                        or "https://login.salesforce.com".
                      nullable: true
                    client_id:
                      type: string
                      description: A client ID that all tokens must be issued for.
                      nullable: true
                    username_claim:
                      type: string
                      description: JWT claim to use as the user name. The default
                        is `sub`, which is expected to be the end user's unique identifier.
                        Admins can choose other claims, such as `email` or `name`,
                        depending on their provider. However, claims other than `email`
                        will be prefixed with the issuer URL to prevent name collision.
                      nullable: true
                    username_prefix:
                      type: string
                      description: Prefix prepended to username claims to prevent
                        name collision (such as `system:` users). For example, the
                        value `oidc:` will create usernames like `oidc:jane.doe`.
                        If this flag is not provided and `username_claim` is a value
                        other than `email`, the prefix defaults to `( Issuer URL )#`
                        where `( Issuer URL )` is the value of `issuer_url`. The value
                        `-` can be used to disable all prefixing.
                      nullable: true
                    groups_claim:
                      type: array
                      description: JWT claim to use as the user's group.
                      nullable: true
                      items:
                        type: string
                    groups_prefix:
                      type: string
                      description: Prefix prepended to group claims to prevent name
                        collision (such as `system:` groups). For example, the value
                        `oidc:` will create group names like `oidc:engineering` and
                        `oidc:infra`.
                      nullable: true
                    required_claim:
                      type: array
                      description: Multiple key=value pairs describing a required
                        claim in the ID token. If set, the claims are verified to
                        be present in the ID token with a matching value.
                      nullable: true
                      items:
                        type: string
                  x-properties-order:
                    - issuer_url
                    - client_id
                    - username_claim
                    - username_prefix
                    - groups_claim
                    - groups_prefix
                    - required_claim
                apiserver_cert_sans:
                  type: array
                  description: Additional Subject Alternative Names for the Kubernetes
                    API server certificate.
                  nullable: true
                  items:
                    type: string
              x-properties-order:
                - name
                - description
                - tags
                - autoscaler_config
                - auto_upgrade
                - feature_gates
                - admission_plugins
                - open_id_connect_config
                - apiserver_cert_sans
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X PATCH \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n \
            \ -H \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}\""
        - lang: HTTPie
          source: "http PATCH \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    delete:
      tags:
        - Clusters
      operationId: DeleteCluster
      summary: Delete a Cluster
      description: Delete a specific Kubernetes cluster and all its associated pools
        and nodes, and possibly its associated Load Balancers or Block Volumes.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: cluster_id
          description: ID of the cluster to delete.
          required: true
          schema:
            type: string
            description: ID of the cluster to delete.
        - in: query
          name: with_additional_resources
          description: Defines whether all volumes (including retain volume type),
            empty Private Networks and Load Balancers with a name starting with the
            cluster ID will also be deleted.
          required: true
          schema:
            type: boolean
            description: Defines whether all volumes (including retain volume type),
              empty Private Networks and Load Balancers with a name starting with
              the cluster ID will also be deleted.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.Cluster'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}?with_additional_resources=false\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  with_additional_resources==false"
  /k8s/v1/regions/{region}/clusters/{cluster_id}/acls:
    get:
      tags:
        - Access Control List
      operationId: ListClusterACLRules
      summary: List ACLs
      description: List ACLs for a specific cluster.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: cluster_id
          description: ID of the cluster whose ACLs will be listed.
          required: true
          schema:
            type: string
            description: ID of the cluster whose ACLs will be listed.
        - in: query
          name: page
          description: Page number for the returned ACLs.
          schema:
            type: integer
            description: Page number for the returned ACLs.
            format: int32
        - in: query
          name: page_size
          description: Maximum number of ACLs per page.
          schema:
            type: integer
            description: Maximum number of ACLs per page.
            format: uint32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.ListClusterACLRulesResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/acls\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/acls\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    post:
      tags:
        - Access Control List
      operationId: AddClusterACLRules
      summary: Add new ACLs
      description: Add new ACL rules for a specific cluster.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: cluster_id
          description: ID of the cluster whose ACLs will be added.
          required: true
          schema:
            type: string
            description: ID of the cluster whose ACLs will be added.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.AddClusterACLRulesResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                acls:
                  type: array
                  description: ACLs to add.
                  items:
                    $ref: '#/components/schemas/scaleway.k8s.v1.ACLRuleRequest'
              x-properties-order:
                - acls
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/acls\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/acls\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    put:
      tags:
        - Access Control List
      operationId: SetClusterACLRules
      summary: Set new ACLs
      description: Set new ACL rules for a specific cluster.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: cluster_id
          description: ID of the cluster whose ACLs will be set.
          required: true
          schema:
            type: string
            description: ID of the cluster whose ACLs will be set.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.SetClusterACLRulesResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                acls:
                  type: array
                  description: ACLs to set.
                  items:
                    $ref: '#/components/schemas/scaleway.k8s.v1.ACLRuleRequest'
              x-properties-order:
                - acls
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X PUT \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/acls\""
        - lang: HTTPie
          source: "http PUT \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/acls\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /k8s/v1/regions/{region}/clusters/{cluster_id}/available-types:
    get:
      tags:
        - Clusters
      operationId: ListClusterAvailableTypes
      summary: List available cluster types for a cluster
      description: List the cluster types that a specific Kubernetes cluster is allowed
        to switch to.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: cluster_id
          description: Cluster ID for which the available Kubernetes types will be
            listed.
          required: true
          schema:
            type: string
            description: Cluster ID for which the available Kubernetes types will
              be listed.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.ListClusterAvailableTypesResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/available-types\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/available-types\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /k8s/v1/regions/{region}/clusters/{cluster_id}/available-versions:
    get:
      tags:
        - Clusters
      operationId: ListClusterAvailableVersions
      summary: List available versions for a Cluster
      description: List the versions that a specific Kubernetes cluster is allowed
        to upgrade to. Results will include every patch version greater than the current
        patch, as well as one minor version ahead of the current version. Any upgrade
        skipping a minor version will not work.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: cluster_id
          description: Cluster ID for which the available Kubernetes versions will
            be listed.
          required: true
          schema:
            type: string
            description: Cluster ID for which the available Kubernetes versions will
              be listed.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.ListClusterAvailableVersionsResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/available-versions\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/available-versions\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /k8s/v1/regions/{region}/clusters/{cluster_id}/kubeconfig:
    get:
      tags:
        - Clusters
      operationId: GetClusterKubeConfig
      summary: Download the kubeconfig for a Cluster
      description: 'Download the Kubernetes cluster config file (also known as `kubeconfig`)
        for a specific cluster to use it with `kubectl`.

        Tip: add `?dl=1` at the end of the URL to directly retrieve the base64 decoded
        kubeconfig. If you choose not to, the kubeconfig will be base64 encoded.'
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: cluster_id
          description: Cluster ID for which to download the kubeconfig.
          required: true
          schema:
            type: string
            description: Cluster ID for which to download the kubeconfig.
        - in: query
          name: redacted
          description: Hide the legacy token from the kubeconfig.
          schema:
            type: boolean
            description: Hide the legacy token from the kubeconfig.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.std.File'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/kubeconfig\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/kubeconfig\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /k8s/v1/regions/{region}/clusters/{cluster_id}/migrate-pools-to-new-images:
    post:
      tags:
        - Pools
      operationId: MigratePoolsToNewImages
      summary: Migrate specific pools or all pools of a cluster to new images.
      description: If no pool is specified, all pools of the cluster will be migrated
        to new images.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: cluster_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pool_ids:
                  type: array
                  items:
                    type: string
              x-properties-order:
                - pool_ids
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/migrate-pools-to-new-images\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/migrate-pools-to-new-images\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /k8s/v1/regions/{region}/clusters/{cluster_id}/nodes:
    get:
      tags:
        - Nodes
      operationId: ListNodes
      summary: List Nodes in a Cluster
      description: List all the existing nodes for a specific Kubernetes cluster.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: cluster_id
          description: Cluster ID from which the nodes will be listed from.
          required: true
          schema:
            type: string
            description: Cluster ID from which the nodes will be listed from.
        - in: query
          name: pool_id
          description: Pool ID on which to filter the returned nodes.
          schema:
            type: string
            description: Pool ID on which to filter the returned nodes.
        - in: query
          name: order_by
          description: Sort order of the returned nodes.
          schema:
            type: string
            description: Sort order of the returned nodes.
            enum:
              - created_at_asc
              - created_at_desc
              - updated_at_asc
              - updated_at_desc
              - name_asc
              - name_desc
              - status_asc
              - status_desc
              - version_asc
              - version_desc
            default: created_at_asc
        - in: query
          name: page
          description: Page number for the returned nodes.
          schema:
            type: integer
            description: Page number for the returned nodes.
            format: int32
        - in: query
          name: page_size
          description: Maximum number of nodes per page.
          schema:
            type: integer
            description: Maximum number of nodes per page.
            format: uint32
        - in: query
          name: name
          description: Name to filter on, only nodes containing this substring in
            their name will be returned.
          schema:
            type: string
            description: Name to filter on, only nodes containing this substring in
              their name will be returned.
        - in: query
          name: status
          description: Status to filter on, only nodes with this status will be returned.
          schema:
            type: string
            description: Status to filter on, only nodes with this status will be
              returned.
            enum:
              - unknown
              - creating
              - not_ready
              - ready
              - deleting
              - deleted
              - locked
              - rebooting
              - creation_error
              - upgrading
              - starting
              - registering
            default: unknown
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.ListNodesResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/nodes\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/nodes\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /k8s/v1/regions/{region}/clusters/{cluster_id}/pools:
    get:
      tags:
        - Pools
      operationId: ListPools
      summary: List Pools in a Cluster
      description: List all the existing pools for a specific Kubernetes cluster.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: cluster_id
          description: ID of the cluster whose pools will be listed.
          required: true
          schema:
            type: string
            description: ID of the cluster whose pools will be listed.
        - in: query
          name: order_by
          description: Sort order of returned pools.
          schema:
            type: string
            description: Sort order of returned pools.
            enum:
              - created_at_asc
              - created_at_desc
              - updated_at_asc
              - updated_at_desc
              - name_asc
              - name_desc
              - status_asc
              - status_desc
              - version_asc
              - version_desc
            default: created_at_asc
        - in: query
          name: page
          description: Page number for the returned pools.
          schema:
            type: integer
            description: Page number for the returned pools.
            format: int32
        - in: query
          name: page_size
          description: Maximum number of pools per page.
          schema:
            type: integer
            description: Maximum number of pools per page.
            format: uint32
        - in: query
          name: name
          description: Name to filter on, only pools containing this substring in
            their name will be returned.
          schema:
            type: string
            description: Name to filter on, only pools containing this substring in
              their name will be returned.
        - in: query
          name: status
          description: Status to filter on, only pools with this status will be returned.
          schema:
            type: string
            description: Status to filter on, only pools with this status will be
              returned.
            enum:
              - unknown
              - ready
              - deleting
              - deleted
              - scaling
              - warning
              - locked
              - upgrading
            default: unknown
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.ListPoolsResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/pools\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/pools\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    post:
      tags:
        - Pools
      operationId: CreatePool
      summary: Create a new Pool in a Cluster
      description: Create a new pool in a specific Kubernetes cluster.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: cluster_id
          description: Cluster ID to which the pool will be attached.
          required: true
          schema:
            type: string
            description: Cluster ID to which the pool will be attached.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.Pool'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Pool name.
                node_type:
                  type: string
                  description: Node type is the type of Scaleway Instance wanted for
                    the pool. Nodes with insufficient memory are not eligible (DEV1-S,
                    PLAY2-PICO, STARDUST). 'external' is a special node type used
                    to provision instances from other cloud providers in a Kosmos
                    Cluster.
                placement_group_id:
                  type: string
                  description: Placement group ID in which all the nodes of the pool
                    will be created, placement groups are limited to 20 instances.
                  nullable: true
                autoscaling:
                  type: boolean
                  description: Defines whether the autoscaling feature is enabled
                    for the pool.
                size:
                  type: integer
                  description: Size (number of nodes) of the pool.
                  format: uint32
                min_size:
                  type: integer
                  description: Defines the minimum size of the pool. Note that this
                    field is only used when autoscaling is enabled on the pool.
                  format: uint32
                  nullable: true
                max_size:
                  type: integer
                  description: Defines the maximum size of the pool. Note that this
                    field is only used when autoscaling is enabled on the pool.
                  format: uint32
                  nullable: true
                container_runtime:
                  type: string
                  description: Customization of the container runtime is available
                    for each pool.
                  enum:
                    - unknown_runtime
                    - docker
                    - containerd
                    - crio
                  default: unknown_runtime
                autohealing:
                  type: boolean
                  description: Defines whether the autohealing feature is enabled
                    for the pool.
                tags:
                  type: array
                  description: Tags associated with the pool, see [managing tags](https://www.scaleway.com/en/docs/containers/kubernetes/api-cli/managing-tags).
                  items:
                    type: string
                kubelet_args:
                  type: object
                  description: Kubelet arguments to be used by this pool. Note that
                    this feature is experimental.
                  properties:
                    <kubelet_argKey>:
                      type: string
                  additionalProperties: true
                upgrade_policy:
                  type: object
                  description: Pool upgrade policy.
                  properties:
                    max_unavailable:
                      $ref: '#/components/schemas/google.protobuf.UInt32Value'
                    max_surge:
                      $ref: '#/components/schemas/google.protobuf.UInt32Value'
                  x-properties-order:
                    - max_unavailable
                    - max_surge
                zone:
                  type: string
                  description: Zone in which the pool's nodes will be spawned.
                root_volume_type:
                  type: string
                  description: 'Defines the system volume disk type. Several types
                    of volume (`volume_type`) are provided:.

                    * `l_ssd` is a local block storage which means your system is
                    stored locally on your node''s hypervisor. This type is not available
                    for all node types

                    * `sbs-5k` is a remote block storage which means your system is
                    stored on a centralized and resilient cluster with 5k IOPS limits

                    * `sbs-15k` is a faster remote block storage which means your
                    system is stored on a centralized and resilient cluster with 15k
                    IOPS limits

                    * `b_ssd` is the legacy remote block storage which means your
                    system is stored on a centralized and resilient cluster. Consider
                    using `sbs-5k` or `sbs-15k` instead.'
                  enum:
                    - default_volume_type
                    - l_ssd
                    - b_ssd
                    - sbs_5k
                    - sbs_15k
                  default: default_volume_type
                root_volume_size:
                  type: integer
                  description: System volume disk size. (in bytes)
                  format: uint64
                  nullable: true
                public_ip_disabled:
                  type: boolean
                  description: Defines if the public IP should be removed from Nodes.
                    To use this feature, your Cluster must have an attached Private
                    Network set up with a Public Gateway.
              required:
                - name
                - node_type
                - size
              x-properties-order:
                - name
                - node_type
                - placement_group_id
                - autoscaling
                - size
                - min_size
                - max_size
                - container_runtime
                - autohealing
                - tags
                - kubelet_args
                - upgrade_policy
                - zone
                - root_volume_type
                - root_volume_size
                - public_ip_disabled
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\n    \"autohealing\"\
            : false,\n    \"autoscaling\": false,\n    \"kubelet_args\": {\n     \
            \   \"\\u003ckubelet_argKey\\u003e\": \"string\"\n    },\n    \"name\"\
            : \"string\",\n    \"node_type\": \"string\",\n    \"public_ip_disabled\"\
            : false,\n    \"size\": 42,\n    \"zone\": \"string\"\n  }' \\\n  \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/pools\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/pools\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  autohealing:=false \\\n  autoscaling:=false\
            \ \\\n  kubelet_args:='{\n    \"\\u003ckubelet_argKey\\u003e\": \"string\"\
            \n  }' \\\n  name=\"string\" \\\n  node_type=\"string\" \\\n  public_ip_disabled:=false\
            \ \\\n  size:=42 \\\n  zone=\"string\""
  /k8s/v1/regions/{region}/clusters/{cluster_id}/reset-admin-token:
    post:
      tags:
        - Clusters
      operationId: ResetClusterAdminToken
      summary: Reset the admin token of a Cluster
      description: Reset the admin token for a specific Kubernetes cluster. This will
        revoke the old admin token (which will not be usable afterwards) and create
        a new one. Note that you will need to download the kubeconfig again to keep
        interacting with the cluster.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: cluster_id
          description: Cluster ID on which the admin token will be renewed.
          required: true
          schema:
            type: string
            description: Cluster ID on which the admin token will be renewed.
      responses:
        '204':
          description: ''
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/reset-admin-token\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/reset-admin-token\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /k8s/v1/regions/{region}/clusters/{cluster_id}/set-type:
    post:
      tags:
        - Clusters
      operationId: SetClusterType
      summary: Change the Cluster type
      description: Change the type of a specific Kubernetes cluster. To see the possible
        values you can enter for the `type` field, [list available cluster types](#list-available-cluster-types-for-a-cluster).
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: cluster_id
          description: ID of the cluster to migrate from one type to another.
          required: true
          schema:
            type: string
            description: ID of the cluster to migrate from one type to another.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.Cluster'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: Type of the cluster. Note that some migrations are
                    not possible (please refer to product documentation).
              required:
                - type
              x-properties-order:
                - type
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"type\":\"string\"}'\
            \ \\\n  \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/set-type\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/set-type\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  type=\"string\""
  /k8s/v1/regions/{region}/clusters/{cluster_id}/upgrade:
    post:
      tags:
        - Clusters
      operationId: UpgradeCluster
      summary: Upgrade a Cluster
      description: Upgrade a specific Kubernetes cluster and possibly its associated
        pools to a specific and supported Kubernetes version.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: cluster_id
          description: ID of the cluster to upgrade.
          required: true
          schema:
            type: string
            description: ID of the cluster to upgrade.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.Cluster'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                version:
                  type: string
                  description: New Kubernetes version of the cluster. Note that the
                    version should either be a higher patch version of the same minor
                    version or the direct minor version after the current one.
                upgrade_pools:
                  type: boolean
                  description: Defines whether pools will also be upgraded once the
                    control plane is upgraded.
              required:
                - version
              x-properties-order:
                - version
                - upgrade_pools
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"upgrade_pools\":false,\"\
            version\":\"string\"}' \\\n  \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/upgrade\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/{cluster_id}/upgrade\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  upgrade_pools:=false \\\n \
            \ version=\"string\""
  /k8s/v1/regions/{region}/nodes/{node_id}:
    get:
      tags:
        - Nodes
      operationId: GetNode
      summary: Get a Node in a Cluster
      description: Retrieve details about a specific Kubernetes Node.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: node_id
          description: ID of the requested node.
          required: true
          schema:
            type: string
            description: ID of the requested node.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.Node'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/k8s/v1/regions/fr-par/nodes/{node_id}\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/k8s/v1/regions/fr-par/nodes/{node_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    delete:
      tags:
        - Nodes
      operationId: DeleteNode
      summary: Delete a Node in a Cluster
      description: Delete a specific Node. The node will first be drained and pods
        will be rescheduled onto another node. Note that when there is not enough
        space to reschedule all the pods (such as in a one-node cluster, or with specific
        constraints), disruption of your applications may occur.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: node_id
          description: ID of the node to replace.
          required: true
          schema:
            type: string
            description: ID of the node to replace.
        - in: query
          name: skip_drain
          description: 'Skip draining node from its workload (Note: this parameter
            is currently inactive).'
          required: true
          schema:
            type: boolean
            description: 'Skip draining node from its workload (Note: this parameter
              is currently inactive).'
        - in: query
          name: replace
          description: Add a new node after the deletion of this node.
          required: true
          schema:
            type: boolean
            description: Add a new node after the deletion of this node.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.Node'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/k8s/v1/regions/fr-par/nodes/{node_id}?replace=false&skip_drain=false\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/k8s/v1/regions/fr-par/nodes/{node_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  replace==false \\\n  skip_drain==false"
  /k8s/v1/regions/{region}/nodes/{node_id}/reboot:
    post:
      tags:
        - Nodes
      operationId: RebootNode
      summary: Reboot a Node in a Cluster
      description: Reboot a specific Node. The node will first be drained and pods
        will be rescheduled onto another node. Note that when there is not enough
        space to reschedule all the pods (such as in a one-node cluster, or with specific
        constraints), disruption of your applications may occur.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: node_id
          description: ID of the node to reboot.
          required: true
          schema:
            type: string
            description: ID of the node to reboot.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.Node'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/k8s/v1/regions/fr-par/nodes/{node_id}/reboot\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/k8s/v1/regions/fr-par/nodes/{node_id}/reboot\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /k8s/v1/regions/{region}/pools/{pool_id}:
    get:
      tags:
        - Pools
      operationId: GetPool
      summary: Get a Pool in a Cluster
      description: Retrieve details about a specific pool in a Kubernetes cluster.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: pool_id
          description: ID of the requested pool.
          required: true
          schema:
            type: string
            description: ID of the requested pool.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.Pool'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/k8s/v1/regions/fr-par/pools/{pool_id}\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/k8s/v1/regions/fr-par/pools/{pool_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    patch:
      tags:
        - Pools
      operationId: UpdatePool
      summary: Update a Pool in a Cluster
      description: Update the attributes of a specific pool, such as its desired size,
        autoscaling settings, and tags. To upgrade a pool, you will need to use the
        dedicated endpoint.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: pool_id
          description: ID of the pool to update.
          required: true
          schema:
            type: string
            description: ID of the pool to update.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.Pool'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                autoscaling:
                  type: boolean
                  description: New value for the pool autoscaling enablement.
                  nullable: true
                size:
                  type: integer
                  description: New desired pool size.
                  format: uint32
                  nullable: true
                min_size:
                  type: integer
                  description: New minimum size for the pool.
                  format: uint32
                  nullable: true
                max_size:
                  type: integer
                  description: New maximum size for the pool.
                  format: uint32
                  nullable: true
                autohealing:
                  type: boolean
                  description: New value for the pool autohealing enablement.
                  nullable: true
                tags:
                  type: array
                  description: New tags associated with the pool.
                  nullable: true
                  items:
                    type: string
                kubelet_args:
                  type: object
                  description: New Kubelet arguments to be used by this pool. Note
                    that this feature is experimental.
                  properties:
                    <key>:
                      type: string
                  nullable: true
                upgrade_policy:
                  type: object
                  description: New upgrade policy for the pool.
                  properties:
                    max_unavailable:
                      $ref: '#/components/schemas/google.protobuf.UInt32Value'
                    max_surge:
                      $ref: '#/components/schemas/google.protobuf.UInt32Value'
                  x-properties-order:
                    - max_unavailable
                    - max_surge
              x-properties-order:
                - autoscaling
                - size
                - min_size
                - max_size
                - autohealing
                - tags
                - kubelet_args
                - upgrade_policy
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X PATCH \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n \
            \ -H \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/k8s/v1/regions/fr-par/pools/{pool_id}\""
        - lang: HTTPie
          source: "http PATCH \"https://api.scaleway.com/k8s/v1/regions/fr-par/pools/{pool_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    delete:
      tags:
        - Pools
      operationId: DeletePool
      summary: Delete a Pool in a Cluster
      description: Delete a specific pool from a cluster. Note that all the pool's
        nodes will also be deleted.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: pool_id
          description: ID of the pool to delete.
          required: true
          schema:
            type: string
            description: ID of the pool to delete.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.Pool'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/k8s/v1/regions/fr-par/pools/{pool_id}\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/k8s/v1/regions/fr-par/pools/{pool_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /k8s/v1/regions/{region}/pools/{pool_id}/external-nodes:
    post:
      tags:
        - Nodes
      operationId: CreateExternalNode
      summary: Create a Kosmos node
      description: Retrieve metadata for a Kosmos node. This method is not intended
        to be called by end users but rather programmatically by the kapsule-node-agent.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.ExternalNode'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/k8s/v1/regions/fr-par/pools/{pool_id}/external-nodes\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/k8s/v1/regions/fr-par/pools/{pool_id}/external-nodes\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /k8s/v1/regions/{region}/pools/{pool_id}/upgrade:
    post:
      tags:
        - Pools
      operationId: UpgradePool
      summary: Upgrade a Pool in a Cluster
      description: 'Upgrade the Kubernetes version of a specific pool. Note that it
        only works if the targeted version matches the cluster''s version.

        This will drain and replace the nodes in that pool.'
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: pool_id
          description: ID of the pool to upgrade.
          required: true
          schema:
            type: string
            description: ID of the pool to upgrade.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.Pool'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                version:
                  type: string
                  description: New Kubernetes version for the pool.
              required:
                - version
              x-properties-order:
                - version
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"version\":\"string\"\
            }' \\\n  \"https://api.scaleway.com/k8s/v1/regions/fr-par/pools/{pool_id}/upgrade\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/k8s/v1/regions/fr-par/pools/{pool_id}/upgrade\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  version=\"string\""
  /k8s/v1/regions/{region}/versions:
    get:
      tags:
        - Versions
      operationId: ListVersions
      summary: List all available Versions
      description: List all available versions for the creation of a new Kubernetes
        cluster.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.ListVersionsResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/k8s/v1/regions/fr-par/versions\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/k8s/v1/regions/fr-par/versions\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /k8s/v1/regions/{region}/versions/{version_name}:
    get:
      tags:
        - Versions
      operationId: GetVersion
      summary: Get a Version
      description: Retrieve a specific Kubernetes version and its details.
      parameters:
        - in: path
          name: region
          description: The region you want to target
          required: true
          schema:
            type: string
            description: The region you want to target
            enum:
              - fr-par
              - nl-ams
              - pl-waw
        - in: path
          name: version_name
          description: Requested version name.
          required: true
          schema:
            type: string
            description: Requested version name.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.k8s.v1.Version'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/k8s/v1/regions/fr-par/versions/{version_name}\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/k8s/v1/regions/fr-par/versions/{version_name}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /vpc/v1/zones/{zone}/private-networks:
    get:
      tags:
        - Private Networks
      operationId: ListPrivateNetworks
      summary: List Private Networks
      description: List existing Private Networks in a specified Availability Zone.
        By default, the Private Networks returned in the list are ordered by creation
        date in ascending order, though this can be modified via the order_by field.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - fr-par-3
              - nl-ams-1
              - nl-ams-2
              - nl-ams-3
              - pl-waw-1
              - pl-waw-2
        - in: query
          name: order_by
          description: Sort order of the returned Private Networks.
          schema:
            type: string
            description: Sort order of the returned Private Networks.
            enum:
              - created_at_asc
              - created_at_desc
              - name_asc
              - name_desc
            default: created_at_asc
        - in: query
          name: page
          description: Page number to return, from the paginated results.
          schema:
            type: integer
            description: Page number to return, from the paginated results.
            format: int32
        - in: query
          name: page_size
          description: Maximum number of Private Networks to return per page.
          schema:
            type: integer
            description: Maximum number of Private Networks to return per page.
            format: uint32
        - in: query
          name: name
          description: Name to filter for. Only Private Networks with names containing
            this string will be returned.
          schema:
            type: string
            description: Name to filter for. Only Private Networks with names containing
              this string will be returned.
        - in: query
          name: tags
          description: Tags to filter for. Only Private Networks with one or more
            matching tags will be returned.
          schema:
            type: array
            description: Tags to filter for. Only Private Networks with one or more
              matching tags will be returned.
            items:
              type: string
        - in: query
          name: organization_id
          description: Organization ID to filter for. Only Private Networks belonging
            to this Organization will be returned.
          schema:
            type: string
            description: Organization ID to filter for. Only Private Networks belonging
              to this Organization will be returned.
        - in: query
          name: project_id
          description: Project ID to filter for. Only Private Networks belonging to
            this Project will be returned.
          schema:
            type: string
            description: Project ID to filter for. Only Private Networks belonging
              to this Project will be returned.
        - in: query
          name: private_network_ids
          description: Private Network IDs to filter for. Only Private Networks with
            one of these IDs will be returned. (UUID format)
          schema:
            type: array
            description: Private Network IDs to filter for. Only Private Networks
              with one of these IDs will be returned. (UUID format)
            example:
              - 6170692e-7363-616c-6577-61792e636f6d
            items:
              type: string
        - in: query
          name: include_regional
          description: Defines whether to include regional Private Networks in the
            response.
          schema:
            type: boolean
            description: Defines whether to include regional Private Networks in the
              response.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.vpc.v1.ListPrivateNetworksResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/vpc/v1/zones/{zone}/private-networks\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/vpc/v1/zones/{zone}/private-networks\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    post:
      tags:
        - Private Networks
      operationId: CreatePrivateNetwork
      summary: Create a Private Network
      description: Create a new Private Network. Once created, you can attach Scaleway
        resources in the same Availability Zone.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - fr-par-3
              - nl-ams-1
              - nl-ams-2
              - nl-ams-3
              - pl-waw-1
              - pl-waw-2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.vpc.v1.PrivateNetwork'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name for the Private Network.
                project_id:
                  type: string
                  description: Scaleway Project in which to create the Private Network.
                tags:
                  type: array
                  description: Tags for the Private Network.
                  items:
                    type: string
                subnets:
                  type: array
                  description: Private Network subnets CIDR. (IP network)
                  example:
                    - 1.2.3.4/32
                  items:
                    type: string
              required:
                - name
                - project_id
              x-properties-order:
                - name
                - project_id
                - tags
                - subnets
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"name\":\"string\",\"\
            project_id\":\"string\"}' \\\n  \"https://api.scaleway.com/vpc/v1/zones/{zone}/private-networks\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/vpc/v1/zones/{zone}/private-networks\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  name=\"string\" \\\n  project_id=\"\
            string\""
  /vpc/v1/zones/{zone}/private-networks/{private_network_id}:
    get:
      tags:
        - Private Networks
      operationId: GetPrivateNetwork
      summary: Get a Private Network
      description: Retrieve information about an existing Private Network, specified
        by its Private Network ID. Its full details are returned in the response object.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - fr-par-3
              - nl-ams-1
              - nl-ams-2
              - nl-ams-3
              - pl-waw-1
              - pl-waw-2
        - in: path
          name: private_network_id
          description: Private Network ID.
          required: true
          schema:
            type: string
            description: Private Network ID.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.vpc.v1.PrivateNetwork'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/vpc/v1/zones/{zone}/private-networks/{private_network_id}\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/vpc/v1/zones/{zone}/private-networks/{private_network_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    patch:
      tags:
        - Private Networks
      operationId: UpdatePrivateNetwork
      summary: Update Private Network
      description: Update parameters (such as name or tags) of an existing Private
        Network, specified by its Private Network ID.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - fr-par-3
              - nl-ams-1
              - nl-ams-2
              - nl-ams-3
              - pl-waw-1
              - pl-waw-2
        - in: path
          name: private_network_id
          description: Private Network ID.
          required: true
          schema:
            type: string
            description: Private Network ID.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.vpc.v1.PrivateNetwork'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the private network.
                  nullable: true
                tags:
                  type: array
                  description: Tags for the Private Network.
                  nullable: true
                  items:
                    type: string
                subnets:
                  type: array
                  description: Private Network subnets CIDR (deprecated).
                  deprecated: true
                  nullable: true
                  items:
                    type: string
              x-properties-order:
                - name
                - tags
                - subnets
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X PATCH \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n \
            \ -H \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/vpc/v1/zones/{zone}/private-networks/{private_network_id}\""
        - lang: HTTPie
          source: "http PATCH \"https://api.scaleway.com/vpc/v1/zones/{zone}/private-networks/{private_network_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    delete:
      tags:
        - Private Networks
      operationId: DeletePrivateNetwork
      summary: Delete a Private Network
      description: Delete an existing Private Network. Note that you must first detach
        all resources from the network, in order to delete it.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - fr-par-3
              - nl-ams-1
              - nl-ams-2
              - nl-ams-3
              - pl-waw-1
              - pl-waw-2
        - in: path
          name: private_network_id
          description: Private Network ID.
          required: true
          schema:
            type: string
            description: Private Network ID.
      responses:
        '204':
          description: ''
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/vpc/v1/zones/{zone}/private-networks/{private_network_id}\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/vpc/v1/zones/{zone}/private-networks/{private_network_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /flexible-ip/v1alpha1/zones/{zone}/fips:
    get:
      tags:
        - Flexible IP
      operationId: ListFlexibleIPs
      summary: List flexible IPs
      description: List all flexible IPs within a given zone.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: query
          name: order_by
          description: Sort order of the returned flexible IPs.
          schema:
            type: string
            description: Sort order of the returned flexible IPs.
            enum:
              - created_at_asc
              - created_at_desc
            default: created_at_asc
        - in: query
          name: page
          description: Page number.
          schema:
            type: integer
            description: Page number.
            format: int32
        - in: query
          name: page_size
          description: Maximum number of flexible IPs per page.
          schema:
            type: integer
            description: Maximum number of flexible IPs per page.
            format: uint32
        - in: query
          name: tags
          description: Filter by tag, only flexible IPs with one or more matching
            tags will be returned.
          schema:
            type: array
            description: Filter by tag, only flexible IPs with one or more matching
              tags will be returned.
            items:
              type: string
        - in: query
          name: status
          description: Filter by status, only flexible IPs with this status will be
            returned.
          schema:
            type: array
            description: Filter by status, only flexible IPs with this status will
              be returned.
            items:
              $ref: '#/components/schemas/scaleway.flexible_ip.v1alpha1.FlexibleIP.Status'
        - in: query
          name: server_ids
          description: Filter by server IDs, only flexible IPs with these server IDs
            will be returned.
          schema:
            type: array
            description: Filter by server IDs, only flexible IPs with these server
              IDs will be returned.
            items:
              type: string
        - in: query
          name: organization_id
          description: Filter by Organization ID, only flexible IPs from this Organization
            will be returned.
          schema:
            type: string
            description: Filter by Organization ID, only flexible IPs from this Organization
              will be returned.
        - in: query
          name: project_id
          description: Filter by Project ID, only flexible IPs from this Project will
            be returned.
          schema:
            type: string
            description: Filter by Project ID, only flexible IPs from this Project
              will be returned.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.flexible_ip.v1alpha1.ListFlexibleIPsResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    post:
      tags:
        - Flexible IP
      operationId: CreateFlexibleIP
      summary: Create a new flexible IP
      description: Generate a new flexible IP within a given zone, specifying its
        configuration including Project ID and description.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.flexible_ip.v1alpha1.FlexibleIP'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                project_id:
                  type: string
                  description: ID of the project to associate with the Flexible IP.
                description:
                  type: string
                  description: Flexible IP description (max. of 255 characters).
                tags:
                  type: array
                  description: Tags to associate to the flexible IP.
                  items:
                    type: string
                server_id:
                  type: string
                  description: ID of the server to which the newly created flexible
                    IP will be attached.
                  nullable: true
                reverse:
                  type: string
                  description: Value of the reverse DNS.
                  nullable: true
                is_ipv6:
                  type: boolean
                  description: Defines whether the flexible IP has an IPv6 address.
              required:
                - project_id
              x-properties-order:
                - project_id
                - description
                - tags
                - server_id
                - reverse
                - is_ipv6
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\n    \"description\"\
            : \"string\",\n    \"is_ipv6\": false,\n    \"project_id\": \"string\"\
            \n  }' \\\n  \"https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  description=\"string\" \\\n\
            \  is_ipv6:=false \\\n  project_id=\"string\""
  /flexible-ip/v1alpha1/zones/{zone}/fips/{fip_id}:
    get:
      tags:
        - Flexible IP
      operationId: GetFlexibleIP
      summary: Get an existing flexible IP
      description: Retrieve information about an existing flexible IP, specified by
        its ID and zone. Its full details, including Project ID, description and status,
        are returned in the response object.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: fip_id
          description: ID of the flexible IP.
          required: true
          schema:
            type: string
            description: ID of the flexible IP.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.flexible_ip.v1alpha1.FlexibleIP'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips/{fip_id}\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips/{fip_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    patch:
      tags:
        - Flexible IP
      operationId: UpdateFlexibleIP
      summary: Update an existing flexible IP
      description: Update the parameters of an existing flexible IP, specified by
        its ID and zone. These parameters include tags and description.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: fip_id
          description: ID of the flexible IP to update.
          required: true
          schema:
            type: string
            description: ID of the flexible IP to update.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.flexible_ip.v1alpha1.FlexibleIP'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: Flexible IP description (max. 255 characters).
                  nullable: true
                tags:
                  type: array
                  description: Tags associated with the flexible IP.
                  nullable: true
                  items:
                    type: string
                reverse:
                  type: string
                  description: Value of the reverse DNS.
                  nullable: true
              x-properties-order:
                - description
                - tags
                - reverse
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X PATCH \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n \
            \ -H \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips/{fip_id}\""
        - lang: HTTPie
          source: "http PATCH \"https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips/{fip_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    delete:
      tags:
        - Flexible IP
      operationId: DeleteFlexibleIP
      summary: Delete an existing flexible IP
      description: Delete an existing flexible IP, specified by its ID and zone. Note
        that deleting a flexible IP is permanent and cannot be undone.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: fip_id
          description: ID of the flexible IP to delete.
          required: true
          schema:
            type: string
            description: ID of the flexible IP to delete.
      responses:
        '204':
          description: ''
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips/{fip_id}\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips/{fip_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /flexible-ip/v1alpha1/zones/{zone}/fips/{fip_id}/mac:
    post:
      tags:
        - Flexible IP
      operationId: GenerateMACAddr
      summary: Generate a virtual MAC address on an existing flexible IP
      description: Generate a virtual MAC (Media Access Control) address on an existing
        flexible IP.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: fip_id
          description: ID of the flexible IP for which to generate a virtual MAC.
          required: true
          schema:
            type: string
            description: ID of the flexible IP for which to generate a virtual MAC.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.flexible_ip.v1alpha1.FlexibleIP'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mac_type:
                  type: string
                  description: TODO.
                  enum:
                    - unknown_type
                    - vmware
                    - xen
                    - kvm
                  default: unknown_type
              required:
                - mac_type
              x-properties-order:
                - mac_type
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"mac_type\":\"unknown_type\"\
            }' \\\n  \"https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips/{fip_id}/mac\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips/{fip_id}/mac\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  mac_type=\"unknown_type\""
    delete:
      tags:
        - Flexible IP
      operationId: DeleteMACAddr
      summary: Detach a given virtual MAC address from an existing flexible IP
      description: Detach a given MAC (Media Access Control) address from an existing
        flexible IP.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: fip_id
          description: 'ID of the flexible IP from which to delete the virtual MAC.

            If the flexible IP belongs to a MAC group, the MAC will be removed from
            both the MAC group and flexible IP.'
          required: true
          schema:
            type: string
            description: 'ID of the flexible IP from which to delete the virtual MAC.

              If the flexible IP belongs to a MAC group, the MAC will be removed from
              both the MAC group and flexible IP.'
      responses:
        '204':
          description: ''
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips/{fip_id}/mac\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips/{fip_id}/mac\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /flexible-ip/v1alpha1/zones/{zone}/fips/{fip_id}/mac/duplicate:
    post:
      tags:
        - Flexible IP
      operationId: DuplicateMACAddr
      summary: Duplicate a virtual MAC address to another flexible IP
      description: Duplicate a virtual MAC address from a given flexible IP to another
        flexible IP attached to the same server.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: fip_id
          description: 'ID of the flexible IP on which to duplicate the virtual MAC.

            Note that the flexible IPs need to be attached to the same server.'
          required: true
          schema:
            type: string
            description: 'ID of the flexible IP on which to duplicate the virtual
              MAC.

              Note that the flexible IPs need to be attached to the same server.'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.flexible_ip.v1alpha1.FlexibleIP'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                duplicate_from_fip_id:
                  type: string
                  description: 'ID of the flexible IP to duplicate the Virtual MAC
                    from.

                    Note that flexible IPs need to be attached to the same server.'
              required:
                - duplicate_from_fip_id
              x-properties-order:
                - duplicate_from_fip_id
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"duplicate_from_fip_id\"\
            :\"string\"}' \\\n  \"https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips/{fip_id}/mac/duplicate\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips/{fip_id}/mac/duplicate\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  duplicate_from_fip_id=\"string\""
  /flexible-ip/v1alpha1/zones/{zone}/fips/{fip_id}/mac/move:
    post:
      tags:
        - Flexible IP
      operationId: MoveMACAddr
      summary: Relocate an existing virtual MAC address to a different flexible IP
      description: Relocate a virtual MAC (Media Access Control) address from an existing
        flexible IP to a different flexible IP.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
        - in: path
          name: fip_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.flexible_ip.v1alpha1.FlexibleIP'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dst_fip_id:
                  type: string
              x-properties-order:
                - dst_fip_id
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"dst_fip_id\":\"string\"\
            }' \\\n  \"https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips/{fip_id}/mac/move\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips/{fip_id}/mac/move\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  dst_fip_id=\"string\""
  /flexible-ip/v1alpha1/zones/{zone}/fips/attach:
    post:
      tags:
        - Flexible IP
      operationId: AttachFlexibleIP
      summary: Attach an existing flexible IP to a server
      description: Attach an existing flexible IP to a specified Elastic Metal server.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.flexible_ip.v1alpha1.AttachFlexibleIPsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fips_ids:
                  type: array
                  description: 'List of flexible IP IDs to attach to a server.

                    Multiple IDs can be provided, but note that flexible IPs must
                    belong to the same MAC group (see details about MAC groups).'
                  items:
                    type: string
                server_id:
                  type: string
                  description: ID of the server on which to attach the flexible IPs.
              required:
                - fips_ids
                - server_id
              x-properties-order:
                - fips_ids
                - server_id
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"fips_ids\":[\"string\"\
            ],\"server_id\":\"string\"}' \\\n  \"https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips/attach\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips/attach\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  fips_ids:='[\"string\"]' \\\
            \n  server_id=\"string\""
  /flexible-ip/v1alpha1/zones/{zone}/fips/detach:
    post:
      tags:
        - Flexible IP
      operationId: DetachFlexibleIP
      summary: Detach an existing flexible IP from a server
      description: Detach an existing flexible IP from a specified Elastic Metal server.
      parameters:
        - in: path
          name: zone
          description: The zone you want to target
          required: true
          schema:
            type: string
            description: The zone you want to target
            enum:
              - fr-par-1
              - fr-par-2
              - nl-ams-1
              - nl-ams-2
              - pl-waw-2
              - pl-waw-3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.flexible_ip.v1alpha1.DetachFlexibleIPsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fips_ids:
                  type: array
                  description: List of flexible IP IDs to detach from a server. Multiple
                    IDs can be provided. Note that flexible IPs must belong to the
                    same MAC group.
                  items:
                    type: string
              required:
                - fips_ids
              x-properties-order:
                - fips_ids
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"fips_ids\":[\"string\"\
            ]}' \\\n  \"https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips/detach\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/flexible-ip/v1alpha1/zones/{zone}/fips/detach\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  fips_ids:='[\"string\"]'"
  /domain/v2beta1/dns-zones:
    get:
      tags:
        - DNS Zones
      operationId: ListDNSZones
      summary: List DNS zones
      description: Retrieve the list of DNS zones you can manage and filter DNS zones
        associated with specific domain names.
      parameters:
        - in: query
          name: organization_id
          description: Organization ID on which to filter the returned DNS zones.
          schema:
            type: string
            description: Organization ID on which to filter the returned DNS zones.
        - in: query
          name: project_id
          description: Project ID on which to filter the returned DNS zones.
          schema:
            type: string
            description: Project ID on which to filter the returned DNS zones.
        - in: query
          name: order_by
          description: Sort order of the returned DNS zones.
          schema:
            type: string
            description: Sort order of the returned DNS zones.
            enum:
              - domain_asc
              - domain_desc
              - subdomain_asc
              - subdomain_desc
              - created_at_asc
              - created_at_desc
              - updated_at_asc
              - updated_at_desc
            default: domain_asc
        - in: query
          name: page
          description: Page number to return, from the paginated results.
          schema:
            type: integer
            description: Page number to return, from the paginated results.
            format: int32
        - in: query
          name: page_size
          description: Maximum number of DNS zones to return per page.
          schema:
            type: integer
            description: Maximum number of DNS zones to return per page.
            format: uint32
        - in: query
          name: domain
          description: Domain on which to filter the returned DNS zones.
          required: true
          schema:
            type: string
            description: Domain on which to filter the returned DNS zones.
        - in: query
          name: dns_zone
          description: DNS zone on which to filter the returned DNS zones.
          schema:
            type: string
            description: DNS zone on which to filter the returned DNS zones.
            deprecated: true
        - in: query
          name: dns_zones
          description: DNS zones on which to filter the returned DNS zones.
          schema:
            type: array
            description: DNS zones on which to filter the returned DNS zones.
            items:
              type: string
        - in: query
          name: created_after
          description: Only list DNS zones created after this date. (RFC 3339 format)
          schema:
            type: string
            description: Only list DNS zones created after this date. (RFC 3339 format)
            format: date-time
            example: '2022-03-22T12:34:56.123456Z'
        - in: query
          name: created_before
          description: Only list DNS zones created before this date. (RFC 3339 format)
          schema:
            type: string
            description: Only list DNS zones created before this date. (RFC 3339 format)
            format: date-time
            example: '2022-03-22T12:34:56.123456Z'
        - in: query
          name: updated_after
          description: Only list DNS zones updated after this date. (RFC 3339 format)
          schema:
            type: string
            description: Only list DNS zones updated after this date. (RFC 3339 format)
            format: date-time
            example: '2022-03-22T12:34:56.123456Z'
        - in: query
          name: updated_before
          description: Only list DNS zones updated before this date. (RFC 3339 format)
          schema:
            type: string
            description: Only list DNS zones updated before this date. (RFC 3339 format)
            format: date-time
            example: '2022-03-22T12:34:56.123456Z'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.ListDNSZonesResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/domain/v2beta1/dns-zones?domain=string\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/domain/v2beta1/dns-zones\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  domain==string"
    post:
      tags:
        - DNS Zones
      operationId: CreateDNSZone
      summary: Create a DNS zone
      description: Create a new DNS zone specified by the domain name, the subdomain
        and the Project ID.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.DNSZone'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                domain:
                  type: string
                  description: Domain in which to crreate the DNS zone.
                subdomain:
                  type: string
                  description: Subdomain of the DNS zone to create.
                project_id:
                  type: string
                  description: Project ID in which to create the DNS zone.
              required:
                - domain
                - subdomain
                - project_id
              x-properties-order:
                - domain
                - subdomain
                - project_id
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\n    \"domain\": \"string\"\
            ,\n    \"project_id\": \"string\",\n    \"subdomain\": \"string\"\n  }'\
            \ \\\n  \"https://api.scaleway.com/domain/v2beta1/dns-zones\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/domain/v2beta1/dns-zones\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  domain=\"string\" \\\n  project_id=\"\
            string\" \\\n  subdomain=\"string\""
  /domain/v2beta1/dns-zones/{dns_zone}:
    patch:
      tags:
        - DNS Zones
      operationId: UpdateDNSZone
      summary: Update a DNS zone
      description: Update the name and/or the Organizations for a DNS zone.
      parameters:
        - in: path
          name: dns_zone
          description: DNS zone to update.
          required: true
          schema:
            type: string
            description: DNS zone to update.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.DNSZone'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                new_dns_zone:
                  type: string
                  description: Name of the new DNS zone to create.
                  nullable: true
                project_id:
                  type: string
                  description: Project ID in which to create the new DNS zone.
              required:
                - new_dns_zone
                - project_id
              x-properties-order:
                - new_dns_zone
                - project_id
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X PATCH \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n \
            \ -H \"Content-Type: application/json\" \\\n  -d '{\"new_dns_zone\":\"\
            string\",\"project_id\":\"string\"}' \\\n  \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}\""
        - lang: HTTPie
          source: "http PATCH \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  new_dns_zone=\"string\" \\\n\
            \  project_id=\"string\""
    delete:
      tags:
        - DNS Zones
      operationId: DeleteDNSZone
      summary: Delete a DNS zone
      description: Delete a DNS zone and all its records.
      parameters:
        - in: path
          name: dns_zone
          description: DNS zone to delete.
          required: true
          schema:
            type: string
            description: DNS zone to delete.
        - in: query
          name: project_id
          description: Project ID of the DNS zone to delete.
          required: true
          schema:
            type: string
            description: Project ID of the DNS zone to delete.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.DeleteDNSZoneResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}?project_id=string\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  project_id==string"
  /domain/v2beta1/dns-zones/{dns_zone}/clone:
    post:
      tags:
        - DNS Zones
      operationId: CloneDNSZone
      summary: Clone a DNS zone
      description: Clone an existing DNS zone with all its records into a new DNS
        zone.
      parameters:
        - in: path
          name: dns_zone
          description: DNS zone to clone.
          required: true
          schema:
            type: string
            description: DNS zone to clone.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.DNSZone'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dest_dns_zone:
                  type: string
                  description: Destination DNS zone in which to clone the chosen DNS
                    zone.
                overwrite:
                  type: boolean
                  description: Specifies whether or not the destination DNS zone will
                    be overwritten.
                project_id:
                  type: string
                  description: Project ID of the destination DNS zone.
                  nullable: true
              required:
                - dest_dns_zone
              x-properties-order:
                - dest_dns_zone
                - overwrite
                - project_id
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"dest_dns_zone\":\"string\"\
            ,\"overwrite\":false}' \\\n  \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/clone\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/clone\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  dest_dns_zone=\"string\" \\\
            \n  overwrite:=false"
  /domain/v2beta1/dns-zones/{dns_zone}/import-provider:
    post:
      tags:
        - Imports / Exports
      operationId: ImportProviderDNSZone
      summary: Import a DNS zone from another provider
      description: Import and replace the format of records from a given provider,
        with default name servers.
      parameters:
        - in: path
          name: dns_zone
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.ImportProviderDNSZoneResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                online_v1:
                  type: object
                  properties:
                    token:
                      type: string
                  nullable: true
                  x-properties-order:
                    - token
                  x-one-of: provider
              x-properties-order:
                - online_v1
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/import-provider\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/import-provider\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /domain/v2beta1/dns-zones/{dns_zone}/nameservers:
    get:
      tags:
        - Records
      operationId: ListDNSZoneNameservers
      summary: List name servers within a DNS zone
      description: Retrieve a list of name servers within a DNS zone and their optional
        glue records.
      parameters:
        - in: path
          name: dns_zone
          description: DNS zone on which to filter the returned DNS zone name servers.
          required: true
          schema:
            type: string
            description: DNS zone on which to filter the returned DNS zone name servers.
        - in: query
          name: project_id
          description: Project ID on which to filter the returned DNS zone name servers.
          schema:
            type: string
            description: Project ID on which to filter the returned DNS zone name
              servers.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.ListDNSZoneNameserversResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/nameservers\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/nameservers\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    put:
      tags:
        - Records
      operationId: UpdateDNSZoneNameservers
      summary: Update name servers within a DNS zone
      description: Update name servers within a DNS zone and set optional glue records.
      parameters:
        - in: path
          name: dns_zone
          description: DNS zone in which to update the DNS zone name servers.
          required: true
          schema:
            type: string
            description: DNS zone in which to update the DNS zone name servers.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.UpdateDNSZoneNameserversResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ns:
                  type: array
                  description: New DNS zone name servers.
                  items:
                    $ref: '#/components/schemas/scaleway.domain.v2beta1.Nameserver'
              required:
                - ns
              x-properties-order:
                - ns
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X PUT \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"ns\":[\"\"]}' \\\n \
            \ \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/nameservers\""
        - lang: HTTPie
          source: "http PUT \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/nameservers\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  ns:='[\"\"]'"
  /domain/v2beta1/dns-zones/{dns_zone}/raw:
    get:
      tags:
        - Imports / Exports
      operationId: ExportRawDNSZone
      summary: Export a raw DNS zone
      description: Export a DNS zone with default name servers, in a specific format.
      parameters:
        - in: path
          name: dns_zone
          description: DNS zone to export.
          required: true
          schema:
            type: string
            description: DNS zone to export.
        - in: query
          name: format
          description: DNS zone format.
          schema:
            type: string
            description: DNS zone format.
            enum:
              - unknown_raw_format
              - bind
            default: bind
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.std.File'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/raw\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/raw\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    post:
      tags:
        - Imports / Exports
      operationId: ImportRawDNSZone
      summary: Import a raw DNS zone
      description: Import and replace the format of records from a given provider,
        with default name servers.
      parameters:
        - in: path
          name: dns_zone
          description: DNS zone to import.
          required: true
          schema:
            type: string
            description: DNS zone to import.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.ImportRawDNSZoneResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  deprecated: true
                project_id:
                  type: string
                format:
                  deprecated: true
                  $ref: '#/components/schemas/scaleway.domain.v2beta1.RawFormat'
                bind_source:
                  type: object
                  description: Import a bind file format.
                  properties:
                    content:
                      type: string
                  nullable: true
                  x-properties-order:
                    - content
                  x-one-of: source
                axfr_source:
                  type: object
                  description: Import from the name server given with TSIG, to use
                    or not.
                  properties:
                    name_server:
                      type: string
                    tsig_key:
                      $ref: '#/components/schemas/scaleway.domain.v2beta1.ImportRawDNSZoneRequest.TsigKey'
                  nullable: true
                  x-properties-order:
                    - name_server
                    - tsig_key
                  x-one-of: source
              x-properties-order:
                - content
                - project_id
                - format
                - bind_source
                - axfr_source
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"project_id\":\"string\"\
            }' \\\n  \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/raw\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/raw\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  project_id=\"string\""
  /domain/v2beta1/dns-zones/{dns_zone}/records:
    get:
      tags:
        - Records
      operationId: ListDNSZoneRecords
      summary: List records within a DNS zone
      description: 'Retrieve a list of DNS records within a DNS zone that has default
        name servers.

        You can filter records by type and name.'
      parameters:
        - in: path
          name: dns_zone
          description: DNS zone on which to filter the returned DNS zone records.
          required: true
          schema:
            type: string
            description: DNS zone on which to filter the returned DNS zone records.
        - in: query
          name: project_id
          description: Project ID on which to filter the returned DNS zone records.
          schema:
            type: string
            description: Project ID on which to filter the returned DNS zone records.
        - in: query
          name: order_by
          description: Sort order of the returned DNS zone records.
          schema:
            type: string
            description: Sort order of the returned DNS zone records.
            enum:
              - name_asc
              - name_desc
            default: name_asc
        - in: query
          name: page
          description: Page number to return, from the paginated results.
          schema:
            type: integer
            description: Page number to return, from the paginated results.
            format: int32
        - in: query
          name: page_size
          description: Maximum number of DNS zone records per page.
          schema:
            type: integer
            description: Maximum number of DNS zone records per page.
            format: uint32
        - in: query
          name: name
          description: Name on which to filter the returned DNS zone records.
          required: true
          schema:
            type: string
            description: Name on which to filter the returned DNS zone records.
        - in: query
          name: type
          description: Record type on which to filter the returned DNS zone records.
          schema:
            type: string
            description: Record type on which to filter the returned DNS zone records.
            enum:
              - unknown
              - A
              - AAAA
              - CNAME
              - TXT
              - SRV
              - TLSA
              - MX
              - NS
              - PTR
              - CAA
              - ALIAS
              - LOC
              - SSHFP
              - HINFO
              - RP
              - URI
              - DS
              - NAPTR
              - DNAME
              - SVCB
              - HTTPS
            default: unknown
        - in: query
          name: id
          description: Record ID on which to filter the returned DNS zone records.
          schema:
            type: string
            description: Record ID on which to filter the returned DNS zone records.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.ListDNSZoneRecordsResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/records?name=string\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/records\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  name==string"
    patch:
      tags:
        - Records
      operationId: UpdateDNSZoneRecords
      summary: Update records within a DNS zone
      description: "Update records within a DNS zone that has default name servers\
        \ and perform several actions on your records.\n\nActions include:\n - add:\
        \ allows you to add a new record or add a new IP to an existing A record,\
        \ for example\n - set: allows you to edit a record or edit an IP from an existing\
        \ A record, for example\n - delete: allows you to delete a record or delete\
        \ an IP from an existing A record, for example\n - clear: allows you to delete\
        \ all records from a DNS zone\n\nAll edits will be versioned."
      parameters:
        - in: path
          name: dns_zone
          description: DNS zone in which to update the DNS zone records.
          required: true
          schema:
            type: string
            description: DNS zone in which to update the DNS zone records.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.UpdateDNSZoneRecordsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                changes:
                  type: array
                  description: Changes made to the records.
                  items:
                    $ref: '#/components/schemas/scaleway.domain.v2beta1.RecordChange'
                return_all_records:
                  type: boolean
                  description: Specifies whether or not to return all the records.
                  nullable: true
                disallow_new_zone_creation:
                  type: boolean
                  description: Disable the creation of the target zone if it does
                    not exist. Target zone creation is disabled by default.
                serial:
                  type: integer
                  description: Use the provided serial (0) instead of the auto-increment
                    serial.
                  format: uint64
                  nullable: true
              required:
                - changes
              x-properties-order:
                - changes
                - return_all_records
                - disallow_new_zone_creation
                - serial
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X PATCH \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n \
            \ -H \"Content-Type: application/json\" \\\n  -d '{\"changes\":[\"\"],\"\
            disallow_new_zone_creation\":false}' \\\n  \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/records\""
        - lang: HTTPie
          source: "http PATCH \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/records\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  changes:='[\"\"]' \\\n  disallow_new_zone_creation:=false"
    delete:
      tags:
        - Records
      operationId: ClearDNSZoneRecords
      summary: Clear records within a DNS zone
      description: 'Delete all records within a DNS zone that has default name servers.<br/>

        All edits will be versioned.'
      parameters:
        - in: path
          name: dns_zone
          description: DNS zone to clear.
          required: true
          schema:
            type: string
            description: DNS zone to clear.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.ClearDNSZoneRecordsResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/records\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/records\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /domain/v2beta1/dns-zones/{dns_zone}/refresh:
    post:
      tags:
        - DNS Zones
      operationId: RefreshDNSZone
      summary: Refresh a DNS zone
      description: 'Refresh an SOA DNS zone to reload the records in the DNS zone
        and update the SOA serial.

        You can recreate the given DNS zone and its sub DNS zone if needed.'
      parameters:
        - in: path
          name: dns_zone
          description: DNS zone to refresh.
          required: true
          schema:
            type: string
            description: DNS zone to refresh.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.RefreshDNSZoneResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recreate_dns_zone:
                  type: boolean
                  description: Specifies whether or not to recreate the DNS zone.
                recreate_sub_dns_zone:
                  type: boolean
                  description: Specifies whether or not to recreate the sub DNS zone.
              x-properties-order:
                - recreate_dns_zone
                - recreate_sub_dns_zone
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"recreate_dns_zone\"\
            :false,\"recreate_sub_dns_zone\":false}' \\\n  \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/refresh\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/refresh\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  recreate_dns_zone:=false \\\
            \n  recreate_sub_dns_zone:=false"
  /domain/v2beta1/dns-zones/{dns_zone}/tsig-key:
    get:
      tags:
        - DNS Zones
      operationId: GetDNSZoneTsigKey
      summary: Get the DNS zone's TSIG key
      description: Retrieve information about the TSIG key of a given DNS zone to
        allow AXFR requests.
      parameters:
        - in: path
          name: dns_zone
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.GetDNSZoneTsigKeyResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/tsig-key\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/tsig-key\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    delete:
      tags:
        - DNS Zones
      operationId: DeleteDNSZoneTsigKey
      summary: Delete the DNS zone's TSIG key
      description: Delete an existing TSIG key specified by its DNS zone. Deleting
        a TSIG key is permanent and cannot be undone.
      parameters:
        - in: path
          name: dns_zone
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/tsig-key\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/tsig-key\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /domain/v2beta1/dns-zones/{dns_zone}/versions:
    get:
      tags:
        - Versions
      operationId: ListDNSZoneVersions
      summary: List versions of a DNS zone
      description: 'Retrieve a list of a DNS zone''s versions.<br/>

        The maximum version count is 100. If the count reaches this limit, the oldest
        version will be deleted after each new modification.'
      parameters:
        - in: path
          name: dns_zone
          required: true
          schema:
            type: string
        - in: query
          name: page
          description: Page number to return, from the paginated results.
          schema:
            type: integer
            description: Page number to return, from the paginated results.
            format: int32
        - in: query
          name: page_size
          description: Maximum number of DNS zones versions per page.
          schema:
            type: integer
            description: Maximum number of DNS zones versions per page.
            format: uint32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.ListDNSZoneVersionsResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/versions\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/domain/v2beta1/dns-zones/{dns_zone}/versions\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /domain/v2beta1/dns-zones/version/{dns_zone_version_id}:
    get:
      tags:
        - Versions
      operationId: ListDNSZoneVersionRecords
      summary: List records from a given version of a specific DNS zone
      description: Retrieve a list of records from a specific DNS zone version.
      parameters:
        - in: path
          name: dns_zone_version_id
          description: (UUID format)
          required: true
          schema:
            type: string
            description: (UUID format)
            example: 6170692e-7363-616c-6577-61792e636f6d
        - in: query
          name: page
          description: Page number to return, from the paginated results.
          schema:
            type: integer
            description: Page number to return, from the paginated results.
            format: int32
        - in: query
          name: page_size
          description: Maximum number of DNS zones versions records per page.
          schema:
            type: integer
            description: Maximum number of DNS zones versions records per page.
            format: uint32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.ListDNSZoneVersionRecordsResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/domain/v2beta1/dns-zones/version/{dns_zone_version_id}\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/domain/v2beta1/dns-zones/version/{dns_zone_version_id}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /domain/v2beta1/dns-zones/version/{dns_zone_version_id}/diff:
    get:
      tags:
        - Versions
      operationId: GetDNSZoneVersionDiff
      summary: Access differences from a specific DNS zone version
      description: Access a previous DNS zone version to see the differences from
        another specific version.
      parameters:
        - in: path
          name: dns_zone_version_id
          description: (UUID format)
          required: true
          schema:
            type: string
            description: (UUID format)
            example: 6170692e-7363-616c-6577-61792e636f6d
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.GetDNSZoneVersionDiffResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/domain/v2beta1/dns-zones/version/{dns_zone_version_id}/diff\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/domain/v2beta1/dns-zones/version/{dns_zone_version_id}/diff\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /domain/v2beta1/dns-zones/version/{dns_zone_version_id}/restore:
    post:
      tags:
        - Versions
      operationId: RestoreDNSZoneVersion
      summary: Restore a DNS zone version
      description: Restore and activate a version of a specific DNS zone.
      parameters:
        - in: path
          name: dns_zone_version_id
          description: (UUID format)
          required: true
          schema:
            type: string
            description: (UUID format)
            example: 6170692e-7363-616c-6577-61792e636f6d
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.RestoreDNSZoneVersionResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{}' \\\n  \"https://api.scaleway.com/domain/v2beta1/dns-zones/version/{dns_zone_version_id}/restore\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/domain/v2beta1/dns-zones/version/{dns_zone_version_id}/restore\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
  /domain/v2beta1/ssl-certificates:
    get:
      tags:
        - DNS Zones
      operationId: ListSSLCertificates
      summary: List a user's TLS certificates
      description: List all the TLS certificates a user has created, specified by
        the user's Project ID and the DNS zone.
      parameters:
        - in: query
          name: dns_zone
          required: true
          schema:
            type: string
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/google.protobuf.Int32Value'
        - in: query
          name: page_size
          schema:
            type: integer
            format: uint32
        - in: query
          name: project_id
          schema:
            $ref: '#/components/schemas/google.protobuf.StringValue'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.ListSSLCertificatesResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/domain/v2beta1/ssl-certificates?dns_zone=string\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/domain/v2beta1/ssl-certificates\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  dns_zone==string"
    post:
      tags:
        - DNS Zones
      operationId: CreateSSLCertificate
      summary: Create or get the DNS zone's TLS certificate
      description: Create a new TLS certificate or retrieve information about an existing
        TLS certificate.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.SSLCertificate'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dns_zone:
                  type: string
                alternative_dns_zones:
                  type: array
                  items:
                    type: string
              x-properties-order:
                - dns_zone
                - alternative_dns_zones
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X POST \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  -H\
            \ \"Content-Type: application/json\" \\\n  -d '{\"dns_zone\":\"string\"\
            }' \\\n  \"https://api.scaleway.com/domain/v2beta1/ssl-certificates\""
        - lang: HTTPie
          source: "http POST \"https://api.scaleway.com/domain/v2beta1/ssl-certificates\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY \\\n  dns_zone=\"string\""
  /domain/v2beta1/ssl-certificates/{dns_zone}:
    get:
      tags:
        - DNS Zones
      operationId: GetSSLCertificate
      summary: Get a DNS zone's TLS certificate
      description: Get the DNS zone's TLS certificate. If you do not have a certificate,
        the ouptut returns `no certificate found`.
      parameters:
        - in: path
          name: dns_zone
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.SSLCertificate'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X GET \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n  \"\
            https://api.scaleway.com/domain/v2beta1/ssl-certificates/{dns_zone}\""
        - lang: HTTPie
          source: "http GET \"https://api.scaleway.com/domain/v2beta1/ssl-certificates/{dns_zone}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
    delete:
      tags:
        - DNS Zones
      operationId: DeleteSSLCertificate
      summary: Delete a TLS certificate
      description: Delete an existing TLS certificate specified by its DNS zone. Deleting
        a TLS certificate is permanent and cannot be undone.
      parameters:
        - in: path
          name: dns_zone
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.DeleteSSLCertificateResponse'
      security:
        - scaleway: []
      x-codeSamples:
        - lang: cURL
          source: "curl -X DELETE \\\n  -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n\
            \  \"https://api.scaleway.com/domain/v2beta1/ssl-certificates/{dns_zone}\""
        - lang: HTTPie
          source: "http DELETE \"https://api.scaleway.com/domain/v2beta1/ssl-certificates/{dns_zone}\"\
            \ \\\n  X-Auth-Token:$SCW_SECRET_KEY"
components:
  schemas:
    google.protobuf.StringValue:
      type: string
      nullable: true
    scaleway.baremetal.v1.BMCAccess:
      type: object
      properties:
        url:
          type: string
          description: URL to access to the server console.
        login:
          type: string
          description: The login to use for the BMC (Baseboard Management Controller)
            access authentification.
        password:
          type: string
          description: The password to use for the BMC (Baseboard Management Controller)
            access authentification.
        expires_at:
          type: string
          description: The date after which the BMC (Baseboard Management Controller)
            access will be closed. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
      x-properties-order:
        - url
        - login
        - password
        - expires_at
    scaleway.baremetal.v1.CPU:
      type: object
      properties:
        name:
          type: string
          description: Name of the CPU.
        core_count:
          type: integer
          description: Number of CPU cores.
          format: uint32
        thread_count:
          type: integer
          description: Number CPU threads.
          format: uint32
        frequency:
          type: integer
          description: Frequency of the CPU in MHz.
          format: uint32
        benchmark:
          type: string
          description: Benchmark of the CPU.
      x-properties-order:
        - name
        - core_count
        - thread_count
        - frequency
        - benchmark
    scaleway.baremetal.v1.Disk:
      type: object
      properties:
        capacity:
          type: integer
          description: Capacity of the disk in bytes. (in bytes)
          format: uint64
        type:
          type: string
          description: Type of the disk.
      x-properties-order:
        - capacity
        - type
    scaleway.baremetal.v1.GPU:
      type: object
      properties:
        name:
          type: string
          description: Name of the GPU.
        vram:
          type: integer
          description: Capacity of the vram in bytes.
          format: uint64
      x-properties-order:
        - name
        - vram
    scaleway.baremetal.v1.GetServerMetricsResponse:
      type: object
      properties:
        pings:
          type: object
          description: Timeseries object representing pings on the server.
          properties:
            name:
              type: string
            points:
              type: array
              items:
                $ref: '#/components/schemas/scaleway.std.TimeSeries.Point'
            metadata:
              type: object
              properties:
                <metadataKey>:
                  type: string
              additionalProperties: true
          x-properties-order:
            - name
            - points
            - metadata
      x-properties-order:
        - pings
    scaleway.baremetal.v1.IP:
      type: object
      properties:
        id:
          type: string
          description: ID of the IP.
        address:
          type: string
          description: Address of the IP. (IP address)
          example: 1.2.3.4
        reverse:
          type: string
          description: Reverse IP value.
        version:
          type: string
          description: Version of IP (v4 or v6).
          enum:
            - IPv4
            - IPv6
          default: IPv4
        reverse_status:
          type: string
          description: Status of the reverse.
          enum:
            - unknown
            - pending
            - active
            - error
          default: unknown
        reverse_status_message:
          type: string
          description: A message related to the reverse status, e.g. in case of an
            error.
      x-properties-order:
        - id
        - address
        - reverse
        - version
        - reverse_status
        - reverse_status_message
    scaleway.baremetal.v1.ListOSResponse:
      type: object
      properties:
        total_count:
          type: integer
          description: Total count of matching OS.
          format: uint32
        os:
          type: array
          description: OS that match filters.
          items:
            $ref: '#/components/schemas/scaleway.baremetal.v1.OS'
      x-properties-order:
        - total_count
        - os
    scaleway.baremetal.v1.ListOffersResponse:
      type: object
      properties:
        total_count:
          type: integer
          description: Total count of matching offers.
          format: uint32
        offers:
          type: array
          description: Offers that match filters.
          items:
            $ref: '#/components/schemas/scaleway.baremetal.v1.Offer'
      x-properties-order:
        - total_count
        - offers
    scaleway.baremetal.v1.ListOptionsResponse:
      type: object
      properties:
        total_count:
          type: integer
          description: Total count of matching options.
          format: uint32
        options:
          type: array
          description: Options that match filters.
          items:
            $ref: '#/components/schemas/scaleway.baremetal.v1.Option'
      x-properties-order:
        - total_count
        - options
    scaleway.baremetal.v1.ListServerEventsResponse:
      type: object
      properties:
        total_count:
          type: integer
          description: Total count of matching events.
          format: uint32
        events:
          type: array
          description: Server events that match filters.
          items:
            $ref: '#/components/schemas/scaleway.baremetal.v1.ServerEvent'
      x-properties-order:
        - total_count
        - events
    scaleway.baremetal.v1.ListServersResponse:
      type: object
      properties:
        total_count:
          type: integer
          description: Total count of matching servers.
          format: uint32
        servers:
          type: array
          description: Array of Elastic Metal server objects matching the filters
            in the request.
          items:
            $ref: '#/components/schemas/scaleway.baremetal.v1.Server'
      x-properties-order:
        - total_count
        - servers
    scaleway.baremetal.v1.ListSettingsResponse:
      type: object
      properties:
        total_count:
          type: integer
          description: Total count of matching settings.
          format: uint32
        settings:
          type: array
          description: Settings that match filters.
          items:
            $ref: '#/components/schemas/scaleway.baremetal.v1.Setting'
      x-properties-order:
        - total_count
        - settings
    scaleway.baremetal.v1.Memory:
      type: object
      properties:
        capacity:
          type: integer
          description: Capacity of the memory in bytes. (in bytes)
          format: uint64
        type:
          type: string
          description: Type of the memory.
        frequency:
          type: integer
          description: Frequency of the memory in MHz.
          format: uint32
        is_ecc:
          type: boolean
          description: True if the memory is an error-correcting code memory.
      x-properties-order:
        - capacity
        - type
        - frequency
        - is_ecc
    scaleway.baremetal.v1.OS:
      type: object
      properties:
        id:
          type: string
          description: ID of the OS.
        name:
          type: string
          description: Name of the OS.
        version:
          type: string
          description: Version of the OS.
        logo_url:
          type: string
          description: URL of this OS's logo.
        ssh:
          type: object
          description: Object defining the SSH requirements to install the OS.
          properties:
            editable:
              type: boolean
            required:
              type: boolean
            default_value:
              $ref: '#/components/schemas/google.protobuf.StringValue'
          x-properties-order:
            - editable
            - required
            - default_value
        user:
          type: object
          description: Object defining the username requirements to install the OS.
          properties:
            editable:
              type: boolean
            required:
              type: boolean
            default_value:
              $ref: '#/components/schemas/google.protobuf.StringValue'
          x-properties-order:
            - editable
            - required
            - default_value
        password:
          type: object
          description: Object defining the password requirements to install the OS.
          properties:
            editable:
              type: boolean
            required:
              type: boolean
            default_value:
              $ref: '#/components/schemas/google.protobuf.StringValue'
          x-properties-order:
            - editable
            - required
            - default_value
        service_user:
          type: object
          description: Object defining the username requirements to install the service.
          properties:
            editable:
              type: boolean
            required:
              type: boolean
            default_value:
              $ref: '#/components/schemas/google.protobuf.StringValue'
          x-properties-order:
            - editable
            - required
            - default_value
        service_password:
          type: object
          description: Object defining the password requirements to install the service.
          properties:
            editable:
              type: boolean
            required:
              type: boolean
            default_value:
              $ref: '#/components/schemas/google.protobuf.StringValue'
          x-properties-order:
            - editable
            - required
            - default_value
        enabled:
          type: boolean
          description: Defines if the operating system is enabled or not.
        license_required:
          type: boolean
          description: License required (check server options for pricing details).
        allowed:
          type: boolean
          description: Defines if a specific Organization is allowed to install this
            OS type.
        custom_partitioning_supported:
          type: boolean
          description: Defines if custom partitioning is supported by this OS.
      x-properties-order:
        - id
        - name
        - version
        - logo_url
        - ssh
        - user
        - password
        - service_user
        - service_password
        - enabled
        - license_required
        - allowed
        - custom_partitioning_supported
    scaleway.baremetal.v1.Offer:
      type: object
      properties:
        id:
          type: string
          description: ID of the offer.
        name:
          type: string
          description: Name of the offer.
        stock:
          type: string
          description: Stock level.
          enum:
            - empty
            - low
            - available
          default: empty
        bandwidth:
          type: integer
          description: Public bandwidth available (in bits/s) with the offer.
          format: uint64
        max_bandwidth:
          type: integer
          description: Maximum public bandwidth available (in bits/s) depending on
            available options.
          format: uint64
        commercial_range:
          type: string
          description: Commercial range of the offer.
        price_per_hour:
          type: object
          description: Price of the offer for the next 60 minutes (a server order
            at 11h32 will be paid until 12h32).
          properties:
            currency_code:
              type: string
            units:
              type: integer
              format: int64
            nanos:
              type: integer
              format: int32
          x-properties-order:
            - currency_code
            - units
            - nanos
        price_per_month:
          type: object
          description: Monthly price of the offer, if subscribing on a monthly basis.
          properties:
            currency_code:
              type: string
            units:
              type: integer
              format: int64
            nanos:
              type: integer
              format: int32
          x-properties-order:
            - currency_code
            - units
            - nanos
        disks:
          type: array
          description: Disks specifications of the offer.
          items:
            $ref: '#/components/schemas/scaleway.baremetal.v1.Disk'
        enable:
          type: boolean
          description: Defines whether the offer is currently available.
        cpus:
          type: array
          description: CPU specifications of the offer.
          items:
            $ref: '#/components/schemas/scaleway.baremetal.v1.CPU'
        memories:
          type: array
          description: Memory specifications of the offer.
          items:
            $ref: '#/components/schemas/scaleway.baremetal.v1.Memory'
        quota_name:
          type: string
          description: Name of the quota associated to the offer.
        persistent_memories:
          type: array
          description: Persistent memory specifications of the offer.
          items:
            $ref: '#/components/schemas/scaleway.baremetal.v1.PersistentMemory'
        raid_controllers:
          type: array
          description: Raid controller specifications of the offer.
          items:
            $ref: '#/components/schemas/scaleway.baremetal.v1.RaidController'
        incompatible_os_ids:
          type: array
          description: Array of OS images IDs incompatible with the server.
          items:
            type: string
        subscription_period:
          type: string
          description: Period of subscription for the offer.
          enum:
            - unknown_subscription_period
            - hourly
            - monthly
          default: unknown_subscription_period
        operation_path:
          type: string
          description: Operation path of the service.
        fee:
          type: object
          description: One time fee invoiced by Scaleway for the setup and activation
            of the server.
          properties:
            currency_code:
              type: string
            units:
              type: integer
              format: int64
            nanos:
              type: integer
              format: int32
          x-properties-order:
            - currency_code
            - units
            - nanos
        options:
          type: array
          description: Available options for customization of the server.
          items:
            $ref: '#/components/schemas/scaleway.baremetal.v1.Offer.OptionOffer'
        private_bandwidth:
          type: integer
          description: Private bandwidth available in bits/s with the offer.
          format: uint64
        shared_bandwidth:
          type: boolean
          description: Defines whether the offer's bandwidth is shared or not.
        tags:
          type: array
          description: Array of tags attached to the offer.
          items:
            type: string
        gpus:
          type: array
          description: GPU specifications of the offer.
          items:
            $ref: '#/components/schemas/scaleway.baremetal.v1.GPU'
        monthly_offer_id:
          type: string
          description: Exist only for hourly offers, to migrate to the monthly offer.
          nullable: true
      x-properties-order:
        - id
        - name
        - stock
        - bandwidth
        - max_bandwidth
        - commercial_range
        - price_per_hour
        - price_per_month
        - disks
        - enable
        - cpus
        - memories
        - quota_name
        - persistent_memories
        - raid_controllers
        - incompatible_os_ids
        - subscription_period
        - operation_path
        - fee
        - options
        - private_bandwidth
        - shared_bandwidth
        - tags
        - gpus
        - monthly_offer_id
    scaleway.baremetal.v1.Offer.OptionOffer:
      type: object
      properties:
        id:
          type: string
          description: ID of the option.
        name:
          type: string
          description: Name of the option.
        enabled:
          type: boolean
          description: 'If true the option is enabled and included by default in the
            offer.

            If true the option is enabled and included by default in the offer

            If false the option is available for the offer but not included by default.'
        subscription_period:
          type: string
          description: Period of subscription for the offer.
          enum:
            - unknown_subscription_period
            - hourly
            - monthly
          default: unknown_subscription_period
        price:
          type: object
          description: Price of the option.
          properties:
            currency_code:
              type: string
            units:
              type: integer
              format: int64
            nanos:
              type: integer
              format: int32
          x-properties-order:
            - currency_code
            - units
            - nanos
        manageable:
          type: boolean
          description: Boolean to know if option could be managed.
        os_id:
          type: string
          description: Deprecated, use LicenseOptionVars.os_id instead.
          deprecated: true
          nullable: true
        license:
          type: object
          description: License option, contains the ID of the OS linked to the option.
          properties:
            os_id:
              type: string
          nullable: true
          x-properties-order:
            - os_id
          x-one-of: option
        public_bandwidth:
          type: object
          description: Public_bandwidth option, contains the bandwidth_in_bps.
          properties:
            bandwidth_in_bps:
              type: integer
              format: uint64
          nullable: true
          x-properties-order:
            - bandwidth_in_bps
          x-one-of: option
        private_network:
          type: object
          description: Private_network option, contains the bandwidth_in_bps.
          properties:
            bandwidth_in_bps:
              type: integer
              format: uint64
          nullable: true
          x-properties-order:
            - bandwidth_in_bps
          x-one-of: option
        remote_access:
          type: object
          description: Remote_access option.
          nullable: true
          x-one-of: option
        certification:
          type: object
          description: Certification option.
          nullable: true
          x-one-of: option
      x-properties-order:
        - id
        - name
        - enabled
        - subscription_period
        - price
        - manageable
        - os_id
        - license
        - public_bandwidth
        - private_network
        - remote_access
        - certification
    scaleway.baremetal.v1.Option:
      type: object
      properties:
        id:
          type: string
          description: ID of the option.
        name:
          type: string
          description: Name of the option.
        manageable:
          type: boolean
          description: Defines whether the option is manageable (could be added or
            removed).
        license:
          type: object
          description: License option, contains the ID of the OS linked to the option.
          properties:
            os_id:
              type: string
          nullable: true
          x-properties-order:
            - os_id
          x-one-of: option
        public_bandwidth:
          type: object
          description: Public_bandwidth option, contains the bandwidth_in_bps.
          properties:
            bandwidth_in_bps:
              type: integer
              format: uint64
          nullable: true
          x-properties-order:
            - bandwidth_in_bps
          x-one-of: option
        private_network:
          type: object
          description: Private_network option, contains the bandwidth_in_bps.
          properties:
            bandwidth_in_bps:
              type: integer
              format: uint64
          nullable: true
          x-properties-order:
            - bandwidth_in_bps
          x-one-of: option
        remote_access:
          type: object
          description: Remote_access option.
          nullable: true
          x-one-of: option
        certification:
          type: object
          description: Certification option.
          nullable: true
          x-one-of: option
      x-properties-order:
        - id
        - name
        - manageable
        - license
        - public_bandwidth
        - private_network
        - remote_access
        - certification
    scaleway.baremetal.v1.PersistentMemory:
      type: object
      properties:
        capacity:
          type: integer
          description: Capacity of the memory in bytes. (in bytes)
          format: uint64
        type:
          type: string
          description: Type of the memory.
        frequency:
          type: integer
          description: Frequency of the memory in MHz.
          format: uint32
      x-properties-order:
        - capacity
        - type
        - frequency
    scaleway.baremetal.v1.RaidController:
      type: object
      properties:
        model:
          type: string
        raid_level:
          type: array
          items:
            type: string
      x-properties-order:
        - model
        - raid_level
    scaleway.baremetal.v1.Schema:
      type: object
      properties:
        disks:
          type: array
          items:
            $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.Disk'
        raids:
          type: array
          items:
            $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.RAID'
        filesystems:
          type: array
          items:
            $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.Filesystem'
        zfs:
          $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.ZFS'
      x-properties-order:
        - disks
        - raids
        - filesystems
        - zfs
    scaleway.baremetal.v1.Schema.Disk:
      type: object
      properties:
        device:
          type: string
        partitions:
          type: array
          items:
            $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.Partition'
      x-properties-order:
        - device
        - partitions
    scaleway.baremetal.v1.Schema.Filesystem:
      type: object
      properties:
        device:
          type: string
        format:
          $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.Filesystem.Format'
        mountpoint:
          type: string
      x-properties-order:
        - device
        - format
        - mountpoint
    scaleway.baremetal.v1.Schema.Filesystem.Format:
      type: string
      enum:
        - unknown_format
        - fat32
        - ext4
        - swap
        - zfs
        - xfs
      default: unknown_format
    scaleway.baremetal.v1.Schema.Partition:
      type: object
      properties:
        label:
          $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.Partition.Label'
        number:
          type: integer
          format: uint32
        size:
          type: integer
          description: (in bytes)
          format: uint64
        use_all_available_space:
          type: boolean
      x-properties-order:
        - label
        - number
        - size
        - use_all_available_space
    scaleway.baremetal.v1.Schema.Partition.Label:
      type: string
      enum:
        - unknown_partition_label
        - uefi
        - legacy
        - root
        - boot
        - swap
        - data
        - home
        - raid
        - zfs
      default: unknown_partition_label
    scaleway.baremetal.v1.Schema.Pool:
      type: object
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.Pool.Type'
        devices:
          type: array
          items:
            type: string
        options:
          type: array
          items:
            type: string
        filesystem_options:
          type: array
          items:
            type: string
      x-properties-order:
        - name
        - type
        - devices
        - options
        - filesystem_options
    scaleway.baremetal.v1.Schema.Pool.Type:
      type: string
      enum:
        - unknown_type
        - no_raid
        - mirror
        - raidz1
        - raidz2
      default: unknown_type
    scaleway.baremetal.v1.Schema.RAID:
      type: object
      properties:
        name:
          type: string
        level:
          $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.RAID.Level'
        devices:
          type: array
          items:
            type: string
      x-properties-order:
        - name
        - level
        - devices
    scaleway.baremetal.v1.Schema.RAID.Level:
      type: string
      enum:
        - unknown_raid_level
        - raid_level_0
        - raid_level_1
        - raid_level_5
        - raid_level_6
        - raid_level_10
      default: unknown_raid_level
    scaleway.baremetal.v1.Schema.ZFS:
      type: object
      properties:
        pools:
          type: array
          items:
            $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.Pool'
      x-properties-order:
        - pools
    scaleway.baremetal.v1.Server:
      type: object
      properties:
        id:
          type: string
          description: ID of the server.
        organization_id:
          type: string
          description: Organization ID the server is attached to.
        project_id:
          type: string
          description: Project ID the server is attached to.
        name:
          type: string
          description: Name of the server.
        description:
          type: string
          description: Description of the server.
        updated_at:
          type: string
          description: Last modification date of the server. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        created_at:
          type: string
          description: Creation date of the server. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        status:
          type: string
          description: Status of the server.
          enum:
            - unknown
            - delivering
            - ready
            - stopping
            - stopped
            - starting
            - error
            - deleting
            - locked
            - out_of_stock
            - ordered
            - resetting
            - migrating
          default: unknown
        offer_id:
          type: string
          description: Offer ID of the server.
        offer_name:
          type: string
          description: Offer name of the server.
        tags:
          type: array
          description: Array of custom tags attached to the server.
          items:
            type: string
        ips:
          type: array
          description: Array of IPs attached to the server.
          items:
            $ref: '#/components/schemas/scaleway.baremetal.v1.IP'
        domain:
          type: string
          description: Domain of the server.
        boot_type:
          type: string
          description: Boot type of the server.
          enum:
            - unknown_boot_type
            - normal
            - rescue
          default: unknown_boot_type
        zone:
          type: string
          description: Zone in which is the server located.
        install:
          type: object
          description: Configuration of the installation.
          properties:
            os_id:
              type: string
              description: ID of the OS.
            hostname:
              type: string
              description: Host defined during the server installation.
            ssh_key_ids:
              type: array
              description: SSH public key IDs defined during server installation.
              items:
                type: string
            status:
              type: string
              description: Status of the server installation.
              enum:
                - unknown
                - to_install
                - installing
                - completed
                - error
              default: unknown
            user:
              type: string
              description: User defined in the server installation, or the default
                user if none were specified.
            service_user:
              type: string
              description: Service user defined in the server installation, or the
                default user if none were specified.
            service_url:
              type: string
              description: Address of the installed service.
            partitioning_schema:
              type: object
              description: Partitioning schema.
              properties:
                disks:
                  type: array
                  items:
                    $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.Disk'
                raids:
                  type: array
                  items:
                    $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.RAID'
                filesystems:
                  type: array
                  items:
                    $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.Filesystem'
                zfs:
                  $ref: '#/components/schemas/scaleway.baremetal.v1.Schema.ZFS'
              x-properties-order:
                - disks
                - raids
                - filesystems
                - zfs
          x-properties-order:
            - os_id
            - hostname
            - ssh_key_ids
            - status
            - user
            - service_user
            - service_url
            - partitioning_schema
        ping_status:
          type: string
          description: Status of server ping.
          enum:
            - ping_status_unknown
            - ping_status_up
            - ping_status_down
          default: ping_status_unknown
        options:
          type: array
          description: Options enabled on the server.
          items:
            $ref: '#/components/schemas/scaleway.baremetal.v1.Server.Option'
        rescue_server:
          type: object
          description: Configuration of rescue boot.
          properties:
            user:
              type: string
              description: Rescue user name.
            password:
              type: string
              description: Rescue password.
          x-properties-order:
            - user
            - password
      x-properties-order:
        - id
        - organization_id
        - project_id
        - name
        - description
        - updated_at
        - created_at
        - status
        - offer_id
        - offer_name
        - tags
        - ips
        - domain
        - boot_type
        - zone
        - install
        - ping_status
        - options
        - rescue_server
    scaleway.baremetal.v1.Server.Option:
      type: object
      properties:
        id:
          type: string
          description: ID of the option.
        name:
          type: string
          description: Name of the option.
        status:
          type: string
          description: Status of the option on this server.
          enum:
            - option_status_unknown
            - option_status_enable
            - option_status_enabling
            - option_status_disabling
            - option_status_error
          default: option_status_unknown
        manageable:
          type: boolean
          description: Defines whether the option can be managed (added or removed).
        expires_at:
          type: string
          description: Auto expiration date for compatible options. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        license:
          type: object
          description: License option, contains the ID of the OS linked to the option.
          properties:
            os_id:
              type: string
          nullable: true
          x-properties-order:
            - os_id
          x-one-of: option
        public_bandwidth:
          type: object
          description: Public_bandwidth option, contains the bandwidth_in_bps.
          properties:
            bandwidth_in_bps:
              type: integer
              format: uint64
          nullable: true
          x-properties-order:
            - bandwidth_in_bps
          x-one-of: option
        private_network:
          type: object
          description: Private_network option, contains the bandwidth_in_bps.
          properties:
            bandwidth_in_bps:
              type: integer
              format: uint64
          nullable: true
          x-properties-order:
            - bandwidth_in_bps
          x-one-of: option
        remote_access:
          type: object
          description: Remote_access option.
          nullable: true
          x-one-of: option
        certification:
          type: object
          description: Certification option.
          nullable: true
          x-one-of: option
      x-properties-order:
        - id
        - name
        - status
        - manageable
        - expires_at
        - license
        - public_bandwidth
        - private_network
        - remote_access
        - certification
    scaleway.baremetal.v1.ServerEvent:
      type: object
      properties:
        id:
          type: string
          description: ID of the server to which the action will be applied.
        action:
          type: string
          description: The action that will be applied to the server.
        updated_at:
          type: string
          description: Date of last modification of the action. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        created_at:
          type: string
          description: Date of creation of the action. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
      x-properties-order:
        - id
        - action
        - updated_at
        - created_at
    scaleway.baremetal.v1.Setting:
      type: object
      properties:
        id:
          type: string
          description: ID of the setting.
        type:
          type: string
          description: Type of the setting.
          enum:
            - unknown
            - smtp
          default: unknown
        project_id:
          type: string
          description: ID of the Project ID.
        enabled:
          type: boolean
          description: Defines whether the setting is enabled.
      x-properties-order:
        - id
        - type
        - project_id
        - enabled
    scaleway.std.TimeSeries.Point:
      type: array
      items:
        oneOf:
          - type: string
            format: date-time
          - type: number
    google.protobuf.Int32Value:
      type: integer
      format: int32
      nullable: true
    scaleway.rdb.v1.ACLRule:
      type: object
      properties:
        ip:
          type: string
          description: (IP network)
          example: 1.2.3.4/32
        port:
          type: integer
          deprecated: true
          format: uint32
        protocol:
          $ref: '#/components/schemas/scaleway.rdb.v1.ACLRule.Protocol'
        direction:
          $ref: '#/components/schemas/scaleway.rdb.v1.ACLRule.Direction'
        action:
          $ref: '#/components/schemas/scaleway.rdb.v1.ACLRule.Action'
        description:
          type: string
      x-properties-order:
        - ip
        - port
        - protocol
        - direction
        - action
        - description
    scaleway.rdb.v1.ACLRule.Action:
      type: string
      enum:
        - allow
        - deny
      default: allow
    scaleway.rdb.v1.ACLRule.Direction:
      type: string
      enum:
        - inbound
        - outbound
      default: inbound
    scaleway.rdb.v1.ACLRule.Protocol:
      type: string
      enum:
        - tcp
        - udp
        - icmp
      default: tcp
    scaleway.rdb.v1.ACLRuleRequest:
      type: object
      properties:
        ip:
          type: string
          description: (IP network)
          example: 1.2.3.4/32
        description:
          type: string
      x-properties-order:
        - ip
        - description
    scaleway.rdb.v1.AddInstanceACLRulesResponse:
      type: object
      properties:
        rules:
          type: array
          description: ACL Rules enabled for the Database Instance.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.ACLRule'
      x-properties-order:
        - rules
    scaleway.rdb.v1.AddInstanceSettingsResponse:
      type: object
      properties:
        settings:
          type: array
          description: Settings available on the Database Instance.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.InstanceSetting'
      x-properties-order:
        - settings
    scaleway.rdb.v1.Database:
      type: object
      properties:
        name:
          type: string
          description: Name of the database.
        owner:
          type: string
          description: Name of the database owner.
        managed:
          type: boolean
          description: Defines whether the database is managed or not.
        size:
          type: integer
          description: Size of the database. (in bytes)
          format: uint64
      x-properties-order:
        - name
        - owner
        - managed
        - size
    scaleway.rdb.v1.DatabaseBackup:
      type: object
      properties:
        id:
          type: string
          description: UUID of the database backup.
        instance_id:
          type: string
          description: UUID of the Database Instance.
        database_name:
          type: string
          description: Name of backed up database.
        name:
          type: string
          description: Name of the backup.
        status:
          type: string
          description: Status of the backup.
          enum:
            - unknown
            - creating
            - ready
            - restoring
            - deleting
            - error
            - exporting
            - locked
          default: unknown
        size:
          type: integer
          description: Size of the database backup. (in bytes)
          format: uint64
          nullable: true
        expires_at:
          type: string
          description: Expiration date (must follow the ISO 8601 format). (RFC 3339
            format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        created_at:
          type: string
          description: Creation date (must follow the ISO 8601 format). (RFC 3339
            format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        updated_at:
          type: string
          description: Updated date (must follow the ISO 8601 format). (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        instance_name:
          type: string
          description: Name of the Database Instance of the backup.
        download_url:
          type: string
          description: URL you can download the backup from.
          nullable: true
        download_url_expires_at:
          type: string
          description: Expiration date of the download link. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        region:
          type: string
          description: Region of the database backup.
        same_region:
          type: boolean
          description: Store logical backups in the same region as the source Database
            Instance.
      x-properties-order:
        - id
        - instance_id
        - database_name
        - name
        - status
        - size
        - expires_at
        - created_at
        - updated_at
        - instance_name
        - download_url
        - download_url_expires_at
        - region
        - same_region
    scaleway.rdb.v1.DatabaseEngine:
      type: object
      properties:
        name:
          type: string
          description: Engine name.
        logo_url:
          type: string
          description: Engine logo URL.
        versions:
          type: array
          description: Available versions.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.EngineVersion'
        region:
          type: string
          description: Region of this Database Instance.
      x-properties-order:
        - name
        - logo_url
        - versions
        - region
    scaleway.rdb.v1.DeleteInstanceACLRulesResponse:
      type: object
      properties:
        rules:
          type: array
          description: IP addresses defined in the ACL rules of the Database Instance.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.ACLRule'
      x-properties-order:
        - rules
    scaleway.rdb.v1.DeleteInstanceSettingsResponse:
      type: object
      properties:
        settings:
          type: array
          description: Settings names to delete from the Database Instance.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.InstanceSetting'
      x-properties-order:
        - settings
    scaleway.rdb.v1.Endpoint:
      type: object
      properties:
        id:
          type: string
          description: UUID of the endpoint. (UUID format)
          example: 6170692e-7363-616c-6577-61792e636f6d
        ip:
          type: string
          description: IPv4 address of the endpoint. (IP address)
          example: 1.2.3.4
          nullable: true
          x-one-of: address
        port:
          type: integer
          description: TCP port of the endpoint.
          format: uint32
        name:
          type: string
          description: Name of the endpoint.
          nullable: true
        private_network:
          type: object
          description: Private Network details. One maximum per Database Instance
            or Read Replica (a Database Instance and its Read Replica can have different
            Private Networks). Cannot be updated (has to be deleted and recreated).
          properties:
            private_network_id:
              type: string
              description: UUID of the private network. (UUID format)
              example: 6170692e-7363-616c-6577-61792e636f6d
            service_ip:
              type: string
              description: CIDR notation of the endpoint IPv4 address. (IP network)
              example: 1.2.3.4/32
            zone:
              type: string
              description: Private network zone.
            provisioning_mode:
              type: string
              description: How endpoint ips are provisioned.
              enum:
                - static
                - ipam
              default: static
          nullable: true
          x-properties-order:
            - private_network_id
            - service_ip
            - zone
            - provisioning_mode
          x-one-of: details
        load_balancer:
          type: object
          description: Load balancer details. Public endpoint for Database Instance
            which is systematically present. One per Database Instance.
          nullable: true
          x-one-of: details
        direct_access:
          type: object
          description: Direct access details. Public endpoint reserved for Read Replicas.
            One per Read Replica.
          nullable: true
          x-one-of: details
        hostname:
          type: string
          description: Hostname of the endpoint.
          nullable: true
          x-one-of: address
      x-properties-order:
        - id
        - ip
        - port
        - name
        - private_network
        - load_balancer
        - direct_access
        - hostname
    scaleway.rdb.v1.EndpointSpec:
      type: object
      properties:
        load_balancer:
          type: object
          description: Load balancer endpoint specifications. Public endpoint for
            Database Instance which is systematically present. One per RDB instance.
          nullable: true
          x-one-of: spec
        private_network:
          type: object
          description: Private Network endpoint specifications. One maximum per Database
            Instance or Read Replica (a Database Instance and its Read Replica can
            have different Private Networks). Cannot be updated (has to be deleted
            and recreated).
          properties:
            private_network_id:
              type: string
              description: UUID of the Private Network to be connected to the Database
                Instance. (UUID format)
              example: 6170692e-7363-616c-6577-61792e636f6d
            service_ip:
              type: string
              description: Endpoint IPv4 address with a CIDR notation. Refer to the
                official Scaleway documentation to learn more about IP and subnet
                limitations. (IP network)
              example: 1.2.3.4/32
              nullable: true
              x-one-of: config
            ipam_config:
              type: object
              description: Automated configuration of your Private Network endpoint
                with Scaleway IPAM service. One at the most per Database Instance
                or Read Replica (a Database Instance and its Read Replica can have
                different Private Networks). Cannot be updated (has to be deleted
                and recreated).
              nullable: true
              x-one-of: config
          nullable: true
          x-properties-order:
            - private_network_id
            - service_ip
            - ipam_config
          x-one-of: spec
      x-properties-order:
        - load_balancer
        - private_network
    scaleway.rdb.v1.EngineSetting:
      type: object
      properties:
        name:
          type: string
          description: Setting name from the database engine.
        default_value:
          type: string
          description: Value set when not specified.
        hot_configurable:
          type: boolean
          description: Setting can be applied without restarting.
        description:
          type: string
          description: Setting description.
        property_type:
          type: string
          description: Setting type.
          enum:
            - BOOLEAN
            - INT
            - STRING
            - FLOAT
          default: BOOLEAN
        unit:
          type: string
          description: Setting base unit.
          nullable: true
        string_constraint:
          type: string
          description: Validation regex for string type settings.
          nullable: true
        int_min:
          type: integer
          description: Minimum value for int types.
          format: int32
          nullable: true
        int_max:
          type: integer
          description: Maximum value for int types.
          format: int32
          nullable: true
        float_min:
          type: object
          description: Minimum value for float types.
          properties:
            value:
              type: number
              format: float
          x-properties-order:
            - value
        float_max:
          type: object
          description: Maximum value for float types.
          properties:
            value:
              type: number
              format: float
          x-properties-order:
            - value
      x-properties-order:
        - name
        - default_value
        - hot_configurable
        - description
        - property_type
        - unit
        - string_constraint
        - int_min
        - int_max
        - float_min
        - float_max
    scaleway.rdb.v1.EngineVersion:
      type: object
      properties:
        version:
          type: string
          description: Database engine version.
        name:
          type: string
          description: Database engine name.
        end_of_life:
          type: string
          description: End of life date. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        available_settings:
          type: array
          description: Engine settings available to be set.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.EngineSetting'
        disabled:
          type: boolean
          description: Disabled versions cannot be created.
        beta:
          type: boolean
          description: Beta status of engine version.
        available_init_settings:
          type: array
          description: Engine settings available to be set at database initialization.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.EngineSetting'
      x-properties-order:
        - version
        - name
        - end_of_life
        - available_settings
        - disabled
        - beta
        - available_init_settings
    scaleway.rdb.v1.Instance:
      type: object
      properties:
        created_at:
          type: string
          description: Creation date (must follow the ISO 8601 format). (RFC 3339
            format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        volume:
          type: object
          description: Volumes of the Database Instance.
          properties:
            type:
              $ref: '#/components/schemas/scaleway.rdb.v1.Volume.Type'
            size:
              type: integer
              description: (in bytes)
              format: uint64
            class:
              $ref: '#/components/schemas/scaleway.rdb.v1.StorageClass'
          x-properties-order:
            - type
            - size
            - class
        region:
          type: string
          description: Region the Database Instance is in.
        id:
          type: string
          description: UUID of the Database Instance. (UUID format)
          example: 6170692e-7363-616c-6577-61792e636f6d
        name:
          type: string
          description: Name of the Database Instance.
        organization_id:
          type: string
          description: Organization ID the Database Instance belongs to. (UUID format)
          example: 6170692e-7363-616c-6577-61792e636f6d
        project_id:
          type: string
          description: Project ID the Database Instance belongs to. (UUID format)
          example: 6170692e-7363-616c-6577-61792e636f6d
        status:
          type: string
          description: Status of the Database Instance.
          enum:
            - unknown
            - ready
            - provisioning
            - configuring
            - deleting
            - error
            - autohealing
            - locked
            - initializing
            - disk_full
            - backuping
            - snapshotting
            - restarting
          default: unknown
        engine:
          type: string
          description: Database engine of the database (PostgreSQL, MySQL, ...).
        upgradable_version:
          type: array
          description: Available database engine versions for upgrade.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.UpgradableVersion'
        endpoint:
          type: object
          description: Endpoint of the Database Instance.
          deprecated: true
          properties:
            id:
              type: string
              description: UUID of the endpoint. (UUID format)
              example: 6170692e-7363-616c-6577-61792e636f6d
            ip:
              type: string
              description: IPv4 address of the endpoint. (IP address)
              example: 1.2.3.4
              nullable: true
              x-one-of: address
            port:
              type: integer
              description: TCP port of the endpoint.
              format: uint32
            name:
              type: string
              description: Name of the endpoint.
              nullable: true
            private_network:
              type: object
              description: Private Network details. One maximum per Database Instance
                or Read Replica (a Database Instance and its Read Replica can have
                different Private Networks). Cannot be updated (has to be deleted
                and recreated).
              properties:
                private_network_id:
                  type: string
                  description: UUID of the private network. (UUID format)
                  example: 6170692e-7363-616c-6577-61792e636f6d
                service_ip:
                  type: string
                  description: CIDR notation of the endpoint IPv4 address. (IP network)
                  example: 1.2.3.4/32
                zone:
                  type: string
                  description: Private network zone.
                provisioning_mode:
                  type: string
                  description: How endpoint ips are provisioned.
                  enum:
                    - static
                    - ipam
                  default: static
              nullable: true
              x-properties-order:
                - private_network_id
                - service_ip
                - zone
                - provisioning_mode
              x-one-of: details
            load_balancer:
              type: object
              description: Load balancer details. Public endpoint for Database Instance
                which is systematically present. One per Database Instance.
              nullable: true
              x-one-of: details
            direct_access:
              type: object
              description: Direct access details. Public endpoint reserved for Read
                Replicas. One per Read Replica.
              nullable: true
              x-one-of: details
            hostname:
              type: string
              description: Hostname of the endpoint.
              nullable: true
              x-one-of: address
          x-properties-order:
            - id
            - ip
            - port
            - name
            - private_network
            - load_balancer
            - direct_access
            - hostname
        tags:
          type: array
          description: List of tags applied to the Database Instance.
          items:
            type: string
        settings:
          type: array
          description: Advanced settings of the Database Instance.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.InstanceSetting'
        backup_schedule:
          type: object
          description: Backup schedule of the Database Instance.
          properties:
            frequency:
              type: integer
              description: Frequency of the backup schedule (in hours).
              format: uint32
            retention:
              type: integer
              description: Default retention period of backups (in days).
              format: uint32
            disabled:
              type: boolean
              description: Defines whether the backup schedule feature is disabled.
            next_run_at:
              type: string
              description: Next run of the backup schedule (accurate to 10 minutes).
                (RFC 3339 format)
              format: date-time
              example: '2022-03-22T12:34:56.123456Z'
              nullable: true
          x-properties-order:
            - frequency
            - retention
            - disabled
            - next_run_at
        is_ha_cluster:
          type: boolean
          description: Defines whether or not High-Availability is enabled.
        read_replicas:
          type: array
          description: Read Replicas of the Database Instance.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.ReadReplica'
        node_type:
          type: string
          description: Node type of the Database Instance.
        init_settings:
          type: array
          description: List of engine settings to be set at database initialization.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.InstanceSetting'
        endpoints:
          type: array
          description: List of Database Instance endpoints.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.Endpoint'
        logs_policy:
          type: object
          description: Logs policy of the Database Instance.
          properties:
            max_age_retention:
              type: integer
              description: Max age (in days) of remote logs to keep on the Database
                Instance.
              format: uint32
              nullable: true
            total_disk_retention:
              type: integer
              description: Max disk size of remote logs to keep on the Database Instance.
                (in bytes)
              format: uint64
              nullable: true
          x-properties-order:
            - max_age_retention
            - total_disk_retention
        backup_same_region:
          type: boolean
          description: Store logical backups in the same region as the Database Instance.
        maintenances:
          type: array
          description: List of Database Instance maintenance events.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.Maintenance'
        encryption:
          type: object
          description: Encryption at rest settings for your Database Instance.
          properties:
            enabled:
              type: boolean
          x-properties-order:
            - enabled
      x-properties-order:
        - created_at
        - volume
        - region
        - id
        - name
        - organization_id
        - project_id
        - status
        - engine
        - upgradable_version
        - endpoint
        - tags
        - settings
        - backup_schedule
        - is_ha_cluster
        - read_replicas
        - node_type
        - init_settings
        - endpoints
        - logs_policy
        - backup_same_region
        - maintenances
        - encryption
    scaleway.rdb.v1.InstanceLog:
      type: object
      properties:
        download_url:
          type: string
          description: Presigned Object Storage URL to download your log file.
          nullable: true
        id:
          type: string
          description: UUID of the Database Instance log.
        status:
          type: string
          description: Status of the logs in a Database Instance.
          enum:
            - unknown
            - ready
            - creating
            - error
          default: unknown
        node_name:
          type: string
          description: Name of the underlying node.
        expires_at:
          type: string
          description: Expiration date (must follow the ISO 8601 format). (RFC 3339
            format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        created_at:
          type: string
          description: Creation date (must follow the ISO 8601 format). (RFC 3339
            format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        region:
          type: string
          description: Region the Database Instance is in.
      x-properties-order:
        - download_url
        - id
        - status
        - node_name
        - expires_at
        - created_at
        - region
    scaleway.rdb.v1.InstanceMetrics:
      type: object
      properties:
        timeseries:
          type: array
          description: Time series of metrics of a Database Instance.
          items:
            $ref: '#/components/schemas/scaleway.std.TimeSeries'
      x-properties-order:
        - timeseries
    scaleway.rdb.v1.InstanceSetting:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      x-properties-order:
        - name
        - value
    scaleway.rdb.v1.ListDatabaseBackupsResponse:
      type: object
      properties:
        database_backups:
          type: array
          description: List of database backups.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.DatabaseBackup'
        total_count:
          type: integer
          description: Total count of database backups available.
          format: uint32
      x-properties-order:
        - database_backups
        - total_count
    scaleway.rdb.v1.ListDatabaseEnginesResponse:
      type: object
      properties:
        engines:
          type: array
          description: List of the available database engines.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.DatabaseEngine'
        total_count:
          type: integer
          description: Total count of database engines available.
          format: uint32
      x-properties-order:
        - engines
        - total_count
    scaleway.rdb.v1.ListDatabasesResponse:
      type: object
      properties:
        databases:
          type: array
          description: List of the databases.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.Database'
        total_count:
          type: integer
          description: Total count of databases present on a Database Instance.
          format: uint32
      x-properties-order:
        - databases
        - total_count
    scaleway.rdb.v1.ListInstanceACLRulesResponse:
      type: object
      properties:
        rules:
          type: array
          description: List of ACL rules present on a Database Instance.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.ACLRule'
        total_count:
          type: integer
          description: Total count of ACL rules present on a Database Instance.
          format: uint32
      x-properties-order:
        - rules
        - total_count
    scaleway.rdb.v1.ListInstanceLogsDetailsResponse:
      type: object
      properties:
        details:
          type: array
          description: Remote Database Instance logs details.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.ListInstanceLogsDetailsResponse.InstanceLogDetail'
      x-properties-order:
        - details
    scaleway.rdb.v1.ListInstanceLogsDetailsResponse.InstanceLogDetail:
      type: object
      properties:
        log_name:
          type: string
        size:
          type: integer
          format: uint64
      x-properties-order:
        - log_name
        - size
    scaleway.rdb.v1.ListInstanceLogsResponse:
      type: object
      properties:
        instance_logs:
          type: array
          description: Available logs in a Database Instance.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.InstanceLog'
      x-properties-order:
        - instance_logs
    scaleway.rdb.v1.ListInstancesResponse:
      type: object
      properties:
        instances:
          type: array
          description: List of all Database Instances available in an Organization
            or Project.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.Instance'
        total_count:
          type: integer
          description: Total count of Database Instances available in a Organization
            or Project.
          format: uint32
      x-properties-order:
        - instances
        - total_count
    scaleway.rdb.v1.ListNodeTypesResponse:
      type: object
      properties:
        node_types:
          type: array
          description: Types of the node.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.NodeType'
        total_count:
          type: integer
          description: Total count of node-types available.
          format: uint32
      x-properties-order:
        - node_types
        - total_count
    scaleway.rdb.v1.ListPrivilegesResponse:
      type: object
      properties:
        privileges:
          type: array
          description: Privileges of a user in a database in a Database Instance.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.Privilege'
        total_count:
          type: integer
          description: Total count of privileges present on a database.
          format: uint32
      x-properties-order:
        - privileges
        - total_count
    scaleway.rdb.v1.ListSnapshotsResponse:
      type: object
      properties:
        snapshots:
          type: array
          description: List of snapshots.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.Snapshot'
        total_count:
          type: integer
          description: Total count of snapshots available.
          format: uint32
      x-properties-order:
        - snapshots
        - total_count
    scaleway.rdb.v1.ListUsersResponse:
      type: object
      properties:
        users:
          type: array
          description: List of users in a Database Instance.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.User'
        total_count:
          type: integer
          description: Total count of users present on a Database Instance.
          format: uint32
      x-properties-order:
        - users
        - total_count
    scaleway.rdb.v1.Maintenance:
      type: object
      properties:
        starts_at:
          type: string
          description: Start date of the maintenance window. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        stops_at:
          type: string
          description: End date of the maintenance window. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        closed_at:
          type: string
          description: Closed maintenance date. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        reason:
          type: string
          description: Maintenance information message.
        status:
          type: string
          description: Status of the maintenance.
          enum:
            - unknown
            - pending
            - done
            - canceled
            - ongoing
          default: unknown
        forced_at:
          type: string
          description: Time when Scaleway-side maintenance will be applied. (RFC 3339
            format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
      x-properties-order:
        - starts_at
        - stops_at
        - closed_at
        - reason
        - status
        - forced_at
    scaleway.rdb.v1.NodeType:
      type: object
      properties:
        name:
          type: string
          description: Node Type name identifier.
        stock_status:
          type: string
          description: Current stock status for the Node Type.
          enum:
            - unknown
            - low_stock
            - out_of_stock
            - available
          default: unknown
        description:
          type: string
          description: Current specs of the offer.
        vcpus:
          type: integer
          description: Number of virtual CPUs.
          format: uint32
        memory:
          type: integer
          description: Quantity of RAM. (in bytes)
          format: uint64
        volume_constraint:
          type: object
          description: '[deprecated] Node Type volume constraints.'
          deprecated: true
          properties:
            min_size:
              type: integer
              description: '[deprecated] Minimum size required for the Volume. (in
                bytes)'
              format: uint64
            max_size:
              type: integer
              description: '[deprecated] Maximum size required for the Volume. (in
                bytes)'
              format: uint64
          x-properties-order:
            - min_size
            - max_size
        is_bssd_compatible:
          type: boolean
          description: The Node Type is compliant with Block Storage.
          deprecated: true
        disabled:
          type: boolean
          description: The Node Type is currently disabled.
        beta:
          type: boolean
          description: The Node Type is currently in beta.
        available_volume_types:
          type: array
          description: Available storage options for the Node Type.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.NodeType.VolumeType'
        is_ha_required:
          type: boolean
          description: The Node Type can be used only with high availability option.
        generation:
          type: string
          description: Generation associated with the NodeType offer.
          enum:
            - unknown_generation
            - generation_v1
            - generation_v2
          default: unknown_generation
        instance_range:
          type: string
          description: Instance range associated with the NodeType offer.
        region:
          type: string
          description: Region the Node Type is in.
      x-properties-order:
        - name
        - stock_status
        - description
        - vcpus
        - memory
        - volume_constraint
        - is_bssd_compatible
        - disabled
        - beta
        - available_volume_types
        - is_ha_required
        - generation
        - instance_range
        - region
    scaleway.rdb.v1.NodeType.VolumeType:
      type: object
      properties:
        type:
          type: string
          description: Volume Type.
          enum:
            - lssd
            - bssd
            - sbs_5k
            - sbs_15k
          default: lssd
        description:
          type: string
          description: The description of the Volume.
        min_size:
          type: integer
          description: Minimum size required for the Volume. (in bytes)
          format: uint64
        max_size:
          type: integer
          description: Maximum size required for the Volume. (in bytes)
          format: uint64
        chunk_size:
          type: integer
          description: Minimum increment level for a Block Storage volume size. (in
            bytes)
          format: uint64
        class:
          type: string
          description: The storage class of the volume.
          enum:
            - unknown_storage_class
            - lssd
            - bssd
            - sbs
          default: unknown_storage_class
      x-properties-order:
        - type
        - description
        - min_size
        - max_size
        - chunk_size
        - class
    scaleway.rdb.v1.PrepareInstanceLogsResponse:
      type: object
      properties:
        instance_logs:
          type: array
          description: Instance logs for a Database Instance between a start and an
            end date.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.InstanceLog'
      x-properties-order:
        - instance_logs
    scaleway.rdb.v1.Privilege:
      type: object
      properties:
        permission:
          type: string
          description: Permission (Read, Read/Write, All, Custom).
          enum:
            - readonly
            - readwrite
            - all
            - custom
            - none
          default: readonly
        database_name:
          type: string
          description: Name of the database.
        user_name:
          type: string
          description: Name of the user.
      x-properties-order:
        - permission
        - database_name
        - user_name
    scaleway.rdb.v1.ReadReplica:
      type: object
      properties:
        id:
          type: string
          description: UUID of the Read Replica. (UUID format)
          example: 6170692e-7363-616c-6577-61792e636f6d
        endpoints:
          type: array
          description: Display Read Replica connection information.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.Endpoint'
        status:
          type: string
          description: Read replica status.
          enum:
            - unknown
            - provisioning
            - initializing
            - ready
            - deleting
            - error
            - locked
            - configuring
            - promoting
          default: unknown
        region:
          type: string
          description: Region the Read Replica is in.
        same_zone:
          type: boolean
          description: Whether the replica is in the same availability zone as the
            main instance nodes or not.
        instance_id:
          type: string
          description: UUID of the Database Instance.
      x-properties-order:
        - id
        - endpoints
        - status
        - region
        - same_zone
        - instance_id
    scaleway.rdb.v1.ReadReplicaEndpointSpec:
      type: object
      properties:
        direct_access:
          type: object
          description: Direct access endpoint specifications. Public endpoint reserved
            for Read Replicas. One per Read Replica.
          nullable: true
          x-one-of: spec
        private_network:
          type: object
          description: Private Network endpoint specifications. One at the most per
            Read Replica. Cannot be updated (has to be deleted and recreated).
          properties:
            private_network_id:
              type: string
              description: UUID of the Private Network to be connected to the Read
                Replica. (UUID format)
              example: 6170692e-7363-616c-6577-61792e636f6d
            service_ip:
              type: string
              description: Endpoint IPv4 address with a CIDR notation. Refer to the
                official Scaleway documentation to learn more about IP and subnet
                limitations. (IP network)
              example: 1.2.3.4/32
              nullable: true
              x-one-of: config
            ipam_config:
              type: object
              description: Automated configuration of your Private Network endpoint
                with Scaleway IPAM service. One at the most per Database Instance
                or Read Replica (a Database Instance and its Read Replica can have
                different private networks). Cannot be updated (has to be deleted
                and recreated).
              nullable: true
              x-one-of: config
          nullable: true
          x-properties-order:
            - private_network_id
            - service_ip
            - ipam_config
          x-one-of: spec
      x-properties-order:
        - direct_access
        - private_network
    scaleway.rdb.v1.SetInstanceACLRulesResponse:
      type: object
      properties:
        rules:
          type: array
          description: ACLs rules configured for a Database Instance.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.ACLRule'
      x-properties-order:
        - rules
    scaleway.rdb.v1.SetInstanceSettingsResponse:
      type: object
      properties:
        settings:
          type: array
          description: Settings configured for a Database Instance.
          items:
            $ref: '#/components/schemas/scaleway.rdb.v1.InstanceSetting'
      x-properties-order:
        - settings
    scaleway.rdb.v1.Snapshot:
      type: object
      properties:
        id:
          type: string
          description: UUID of the snapshot.
        instance_id:
          type: string
          description: UUID of the Database Instance.
        name:
          type: string
          description: Name of the snapshot.
        status:
          type: string
          description: Status of the snapshot.
          enum:
            - unknown
            - creating
            - ready
            - restoring
            - deleting
            - error
            - locked
          default: unknown
        size:
          type: integer
          description: Size of the snapshot. (in bytes)
          format: uint64
          nullable: true
        expires_at:
          type: string
          description: Expiration date (must follow the ISO 8601 format). (RFC 3339
            format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        created_at:
          type: string
          description: Creation date (must follow the ISO 8601 format). (RFC 3339
            format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        updated_at:
          type: string
          description: Updated date (must follow the ISO 8601 format). (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        instance_name:
          type: string
          description: Name of the Database Instance of the snapshot.
        node_type:
          type: string
          description: Source node type.
        volume_type:
          type: object
          description: Type of volume where data is stored (lssd, bssd or sbs).
          properties:
            type:
              $ref: '#/components/schemas/scaleway.rdb.v1.Volume.Type'
            class:
              $ref: '#/components/schemas/scaleway.rdb.v1.StorageClass'
          x-properties-order:
            - type
            - class
        region:
          type: string
          description: Region of this snapshot.
      x-properties-order:
        - id
        - instance_id
        - name
        - status
        - size
        - expires_at
        - created_at
        - updated_at
        - instance_name
        - node_type
        - volume_type
        - region
    scaleway.rdb.v1.StorageClass:
      type: string
      enum:
        - unknown_storage_class
        - lssd
        - bssd
        - sbs
      default: unknown_storage_class
    scaleway.rdb.v1.UpgradableVersion:
      type: object
      properties:
        id:
          type: string
          description: (UUID format)
          example: 6170692e-7363-616c-6577-61792e636f6d
        name:
          type: string
        version:
          type: string
        minor_version:
          type: string
      x-properties-order:
        - id
        - name
        - version
        - minor_version
    scaleway.rdb.v1.User:
      type: object
      properties:
        name:
          type: string
          description: Name of the user (Length must be between 1 and 63 characters
            for PostgreSQL and between 1 and 32 characters for MySQL. First character
            must be an alphabet character (a-zA-Z). Your username cannot start with
            '_rdb' or in PostgreSQL, 'pg_'. Only a-zA-Z0-9_$- characters are accepted).
        is_admin:
          type: boolean
          description: Defines whether or not a user got administrative privileges
            on the Database Instance.
      x-properties-order:
        - name
        - is_admin
    scaleway.rdb.v1.Volume.Type:
      type: string
      enum:
        - lssd
        - bssd
        - sbs_5k
        - sbs_15k
      default: lssd
    scaleway.std.File:
      type: object
      properties:
        name:
          type: string
        content_type:
          type: string
        content:
          type: string
      x-properties-order:
        - name
        - content_type
        - content
    scaleway.std.TimeSeries:
      type: object
      properties:
        name:
          type: string
        points:
          type: array
          items:
            $ref: '#/components/schemas/scaleway.std.TimeSeries.Point'
        metadata:
          type: object
          properties:
            <metadataKey>:
              type: string
          additionalProperties: true
      x-properties-order:
        - name
        - points
        - metadata
    scaleway.registry.v1.Image:
      type: object
      properties:
        id:
          type: string
          description: UUID of the image.
        name:
          type: string
          description: Name of the image, it must be unique within the namespace.
        namespace_id:
          type: string
          description: UUID of the namespace the image belongs to.
        status:
          type: string
          description: Status of the image.
          enum:
            - unknown
            - ready
            - deleting
            - error
            - locked
          default: unknown
        status_message:
          type: string
          description: Details of the image status.
          nullable: true
        visibility:
          type: string
          description: Set to `public` to allow the image to be pulled without authentication.
            Else, set to  `private`. Set to `inherit` to keep the same visibility
            configuration as the namespace.
          enum:
            - visibility_unknown
            - inherit
            - public
            - private
          default: visibility_unknown
        size:
          type: integer
          description: 'Image size in bytes, calculated from the size of image layers.

            Image size in bytes, calculated from the size of image layers. One layer
            used in two tags of the same image is counted once but one layer used
            in two images is counted twice. (in bytes)'
          format: uint64
        created_at:
          type: string
          description: Date and time of image creation. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        updated_at:
          type: string
          description: Date and time of last update. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        tags:
          type: array
          description: List of docker tags of the image.
          items:
            type: string
      x-properties-order:
        - id
        - name
        - namespace_id
        - status
        - status_message
        - visibility
        - size
        - created_at
        - updated_at
        - tags
    scaleway.registry.v1.ListImagesResponse:
      type: object
      properties:
        images:
          type: array
          description: Paginated list of images that match the selected filters.
          items:
            $ref: '#/components/schemas/scaleway.registry.v1.Image'
        total_count:
          type: integer
          description: Total number of images that match the selected filters.
          format: uint32
      x-properties-order:
        - images
        - total_count
    scaleway.registry.v1.ListNamespacesResponse:
      type: object
      properties:
        namespaces:
          type: array
          description: Paginated list of namespaces that match the selected filters.
          items:
            $ref: '#/components/schemas/scaleway.registry.v1.Namespace'
        total_count:
          type: integer
          description: Total number of namespaces that match the selected filters.
          format: uint32
      x-properties-order:
        - namespaces
        - total_count
    scaleway.registry.v1.ListTagsResponse:
      type: object
      properties:
        tags:
          type: array
          description: Paginated list of tags that match the selected filters.
          items:
            $ref: '#/components/schemas/scaleway.registry.v1.Tag'
        total_count:
          type: integer
          description: Total number of tags that match the selected filters.
          format: uint32
      x-properties-order:
        - tags
        - total_count
    scaleway.registry.v1.Namespace:
      type: object
      properties:
        id:
          type: string
          description: UUID of the namespace.
        name:
          type: string
          description: Name of the namespace, unique in a region across all organizations.
        description:
          type: string
          description: Description of the namespace.
        organization_id:
          type: string
          description: Owner of the namespace.
        project_id:
          type: string
          description: Project of the namespace.
        status:
          type: string
          description: Namespace status.
          enum:
            - unknown
            - ready
            - deleting
            - error
            - locked
          default: unknown
        status_message:
          type: string
          description: Namespace status details.
        endpoint:
          type: string
          description: Endpoint reachable by docker.
        is_public:
          type: boolean
          description: Defines whether or not namespace is public.
        size:
          type: integer
          description: Total size of the namespace, calculated as the sum of the size
            of all images in the namespace. (in bytes)
          format: uint64
        created_at:
          type: string
          description: Date and time of creation. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        updated_at:
          type: string
          description: Date and time of last update. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        image_count:
          type: integer
          description: Number of images in the namespace.
          format: uint32
        region:
          type: string
          description: Region the namespace belongs to.
      x-properties-order:
        - id
        - name
        - description
        - organization_id
        - project_id
        - status
        - status_message
        - endpoint
        - is_public
        - size
        - created_at
        - updated_at
        - image_count
        - region
    scaleway.registry.v1.Tag:
      type: object
      properties:
        id:
          type: string
          description: UUID of the tag.
        name:
          type: string
          description: Tag name, unique to an image.
        image_id:
          type: string
          description: Image ID the of the image the tag belongs to.
        status:
          type: string
          description: Tag status.
          enum:
            - unknown
            - ready
            - deleting
            - error
            - locked
          default: unknown
        digest:
          type: string
          description: Hash of the tag content. Several tags of a same image may have
            the same digest.
        created_at:
          type: string
          description: Date and time of creation. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        updated_at:
          type: string
          description: Date and time of last update. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
      x-properties-order:
        - id
        - name
        - image_id
        - status
        - digest
        - created_at
        - updated_at
    google.protobuf.UInt32Value:
      type: integer
      format: uint32
      nullable: true
    scaleway.k8s.v1.ACLRule:
      type: object
      properties:
        id:
          type: string
          description: ID of the ACL rule. (UUID format)
          example: 6170692e-7363-616c-6577-61792e636f6d
        ip:
          type: string
          description: IP subnet to allow. (IP network)
          example: 1.2.3.4/32
          nullable: true
          x-one-of: allowed
        scaleway_ranges:
          type: boolean
          description: 'Allow access to cluster from all Scaleway ranges as defined
            in https://www.scaleway.com/en/docs/console/account/reference-content/scaleway-network-information/#ip-ranges-used-by-scaleway.

            Only one rule with this field set to true can be added.'
          nullable: true
          x-one-of: allowed
        description:
          type: string
          description: Description of the ACL.
      x-properties-order:
        - id
        - ip
        - scaleway_ranges
        - description
    scaleway.k8s.v1.ACLRuleRequest:
      type: object
      properties:
        ip:
          type: string
          description: IP subnet to allow. (IP network)
          example: 1.2.3.4/32
          nullable: true
          x-one-of: allowed
        scaleway_ranges:
          type: boolean
          description: 'Allow access to cluster from all Scaleway ranges as defined
            in https://www.scaleway.com/en/docs/console/account/reference-content/scaleway-network-information/#ip-ranges-used-by-scaleway.

            Only one rule with this field set to true can be added.'
          nullable: true
          x-one-of: allowed
        description:
          type: string
          description: Description of the ACL.
      x-properties-order:
        - ip
        - scaleway_ranges
        - description
    scaleway.k8s.v1.AddClusterACLRulesResponse:
      type: object
      properties:
        rules:
          type: array
          description: ACLs that were added.
          items:
            $ref: '#/components/schemas/scaleway.k8s.v1.ACLRule'
      x-properties-order:
        - rules
    scaleway.k8s.v1.CNI:
      type: string
      enum:
        - unknown_cni
        - cilium
        - calico
        - weave
        - flannel
        - kilo
        - none
      default: unknown_cni
    scaleway.k8s.v1.Cluster:
      type: object
      properties:
        id:
          type: string
          description: Cluster ID.
        type:
          type: string
          description: Cluster type.
        name:
          type: string
          description: Cluster name.
        status:
          type: string
          description: Status of the cluster.
          enum:
            - unknown
            - creating
            - ready
            - deleting
            - deleted
            - updating
            - locked
            - pool_required
          default: unknown
        version:
          type: string
          description: Kubernetes version of the cluster.
        region:
          type: string
          description: Region in which the cluster is deployed.
        organization_id:
          type: string
          description: ID of the Organization owning the cluster.
        project_id:
          type: string
          description: ID of the Project owning the cluster.
        tags:
          type: array
          description: Tags associated with the cluster.
          items:
            type: string
        cni:
          type: string
          description: Container Network Interface (CNI) plugin running in the cluster.
          enum:
            - unknown_cni
            - cilium
            - calico
            - weave
            - flannel
            - kilo
            - none
          default: unknown_cni
        description:
          type: string
          description: Cluster description.
        cluster_url:
          type: string
          description: Kubernetes API server URL of the cluster.
        dns_wildcard:
          type: string
          description: Wildcard DNS resolving all the ready cluster nodes.
        created_at:
          type: string
          description: Date on which the cluster was created. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        updated_at:
          type: string
          description: Date on which the cluster was last updated. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        autoscaler_config:
          type: object
          description: Autoscaler config for the cluster.
          properties:
            scale_down_disabled:
              type: boolean
              description: Disable the cluster autoscaler.
            scale_down_delay_after_add:
              type: string
              description: How long after scale up the scale down evaluation resumes.
            estimator:
              type: string
              description: Type of resource estimator to be used in scale up.
              enum:
                - unknown_estimator
                - binpacking
              default: unknown_estimator
            expander:
              type: string
              description: Type of node group expander to be used in scale up.
              enum:
                - unknown_expander
                - random
                - most_pods
                - least_waste
                - priority
                - price
              default: unknown_expander
            ignore_daemonsets_utilization:
              type: boolean
              description: Ignore DaemonSet pods when calculating resource utilization
                for scaling down.
            balance_similar_node_groups:
              type: boolean
              description: Detect similar node groups and balance the number of nodes
                between them.
            expendable_pods_priority_cutoff:
              type: integer
              description: Pods with priority below cutoff will be expendable. They
                can be killed without any consideration during scale down and they
                won't cause scale up. Pods with null priority (PodPriority disabled)
                are non expendable.
              format: int32
            scale_down_unneeded_time:
              type: string
              description: How long a node should be unneeded before it is eligible
                to be scaled down.
            scale_down_utilization_threshold:
              type: number
              description: Node utilization level, defined as a sum of requested resources
                divided by capacity, below which a node can be considered for scale
                down.
              format: float
            max_graceful_termination_sec:
              type: integer
              description: Maximum number of seconds the cluster autoscaler waits
                for pod termination when trying to scale down a node.
              format: uint32
          x-properties-order:
            - scale_down_disabled
            - scale_down_delay_after_add
            - estimator
            - expander
            - ignore_daemonsets_utilization
            - balance_similar_node_groups
            - expendable_pods_priority_cutoff
            - scale_down_unneeded_time
            - scale_down_utilization_threshold
            - max_graceful_termination_sec
        auto_upgrade:
          type: object
          description: Auto upgrade Kubernetes version of the cluster.
          properties:
            enabled:
              type: boolean
              description: Defines whether auto upgrade is enabled for the cluster.
            maintenance_window:
              type: object
              description: Maintenance window of the cluster auto upgrades.
              properties:
                start_hour:
                  type: integer
                  description: Start time of the two-hour maintenance window.
                  format: uint32
                day:
                  type: string
                  description: Day of the week for the maintenance window.
                  enum:
                    - any
                    - monday
                    - tuesday
                    - wednesday
                    - thursday
                    - friday
                    - saturday
                    - sunday
                  default: any
              x-properties-order:
                - start_hour
                - day
          x-properties-order:
            - enabled
            - maintenance_window
        upgrade_available:
          type: boolean
          description: Defines whether a new Kubernetes version is available.
        feature_gates:
          type: array
          description: List of enabled feature gates.
          items:
            type: string
        admission_plugins:
          type: array
          description: List of enabled admission plugins.
          items:
            type: string
        open_id_connect_config:
          type: object
          description: This configuration enables to update the OpenID Connect configuration
            of the Kubernetes API server.
          properties:
            issuer_url:
              type: string
              description: URL of the provider which allows the API server to discover
                public signing keys. Only URLs using the `https://` scheme are accepted.
                This is typically the provider's discovery URL without a path, for
                example "https://accounts.google.com" or "https://login.salesforce.com".
            client_id:
              type: string
              description: A client ID that all tokens must be issued for.
            username_claim:
              type: string
              description: JWT claim to use as the user name. The default is `sub`,
                which is expected to be the end user's unique identifier. Admins can
                choose other claims, such as `email` or `name`, depending on their
                provider. However, claims other than `email` will be prefixed with
                the issuer URL to prevent name collision.
            username_prefix:
              type: string
              description: Prefix prepended to username claims to prevent name collision
                (such as `system:` users). For example, the value `oidc:` will create
                usernames like `oidc:jane.doe`. If this flag is not provided and `username_claim`
                is a value other than `email`, the prefix defaults to `( Issuer URL
                )#` where `( Issuer URL )` is the value of `issuer_url`. The value
                `-` can be used to disable all prefixing.
            groups_claim:
              type: array
              description: JWT claim to use as the user's group.
              items:
                type: string
            groups_prefix:
              type: string
              description: Prefix prepended to group claims to prevent name collision
                (such as `system:` groups). For example, the value `oidc:` will create
                group names like `oidc:engineering` and `oidc:infra`.
            required_claim:
              type: array
              description: Multiple key=value pairs describing a required claim in
                the ID token. If set, the claims are verified to be present in the
                ID token with a matching value.
              items:
                type: string
          x-properties-order:
            - issuer_url
            - client_id
            - username_claim
            - username_prefix
            - groups_claim
            - groups_prefix
            - required_claim
        apiserver_cert_sans:
          type: array
          description: Additional Subject Alternative Names for the Kubernetes API
            server certificate.
          items:
            type: string
        private_network_id:
          type: string
          description: Private network ID for internal cluster communication.
          nullable: true
        commitment_ends_at:
          type: string
          description: Date on which it will be possible to switch to a smaller offer.
            (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        acl_available:
          type: boolean
          description: Defines whether ACL is available on the cluster.
          deprecated: true
        iam_nodes_group_id:
          type: string
          description: IAM group that nodes are members of (this field might be empty
            during early stage of cluster creation).
        new_images_enabled:
          type: boolean
          description: Defines whether all pools are migrated to new images.
          deprecated: true
      x-properties-order:
        - id
        - type
        - name
        - status
        - version
        - region
        - organization_id
        - project_id
        - tags
        - cni
        - description
        - cluster_url
        - dns_wildcard
        - created_at
        - updated_at
        - autoscaler_config
        - auto_upgrade
        - upgrade_available
        - feature_gates
        - admission_plugins
        - open_id_connect_config
        - apiserver_cert_sans
        - private_network_id
        - commitment_ends_at
        - acl_available
        - iam_nodes_group_id
        - new_images_enabled
    scaleway.k8s.v1.ClusterType:
      type: object
      properties:
        name:
          type: string
          description: Cluster type name.
        availability:
          type: string
          description: Cluster type availability.
          enum:
            - available
            - scarce
            - shortage
          default: available
        max_nodes:
          type: integer
          description: Maximum number of nodes supported by the offer.
          format: uint32
        commitment_delay:
          type: string
          description: Time period during which you can no longer switch to a lower
            offer. (in seconds)
          example: 2.5s
          nullable: true
        sla:
          type: number
          description: Value of the Service Level Agreement of the offer.
          format: float
        resiliency:
          type: string
          description: Resiliency offered by the offer.
          enum:
            - unknown_resiliency
            - standard
            - high_availability
          default: unknown_resiliency
        memory:
          type: integer
          description: Max RAM allowed for the control plane. (in bytes)
          format: uint64
        dedicated:
          type: boolean
          description: Returns information if this offer uses dedicated resources.
        audit_logs_supported:
          type: boolean
          description: True if the offer allows activation of the audit log functionality.
            Please note that audit logs are sent to Cockpit.
      x-properties-order:
        - name
        - availability
        - max_nodes
        - commitment_delay
        - sla
        - resiliency
        - memory
        - dedicated
        - audit_logs_supported
    scaleway.k8s.v1.CreateClusterRequest.PoolConfig:
      type: object
      properties:
        name:
          type: string
          description: Name of the pool.
        node_type:
          type: string
          description: Node type is the type of Scaleway Instance wanted for the pool.
            Nodes with insufficient memory are not eligible (DEV1-S, PLAY2-PICO, STARDUST).
            'external' is a special node type used to provision instances from other
            cloud providers in a Kosmos Cluster.
        placement_group_id:
          type: string
          description: Placement group ID in which all the nodes of the pool will
            be created, placement groups are limited to 20 instances.
          nullable: true
        autoscaling:
          type: boolean
          description: Defines whether the autoscaling feature is enabled for the
            pool.
        size:
          type: integer
          description: Size (number of nodes) of the pool.
          format: uint32
        min_size:
          type: integer
          description: Defines the minimum size of the pool. Note that this field
            is only used when autoscaling is enabled on the pool.
          format: uint32
          nullable: true
        max_size:
          type: integer
          description: Defines the maximum size of the pool. Note that this field
            is only used when autoscaling is enabled on the pool.
          format: uint32
          nullable: true
        container_runtime:
          type: string
          description: Customization of the container runtime is available for each
            pool.
          enum:
            - unknown_runtime
            - docker
            - containerd
            - crio
          default: unknown_runtime
        autohealing:
          type: boolean
          description: Defines whether the autohealing feature is enabled for the
            pool.
        tags:
          type: array
          description: Tags associated with the pool, see [managing tags](https://www.scaleway.com/en/docs/containers/kubernetes/api-cli/managing-tags).
          items:
            type: string
        kubelet_args:
          type: object
          description: Kubelet arguments to be used by this pool. Note that this feature
            is experimental.
          properties:
            <kubelet_argKey>:
              type: string
          additionalProperties: true
        upgrade_policy:
          type: object
          description: Pool upgrade policy.
          properties:
            max_unavailable:
              type: integer
              description: The maximum number of nodes that can be not ready at the
                same time.
              format: uint32
              nullable: true
            max_surge:
              type: integer
              description: The maximum number of nodes to be created during the upgrade.
              format: uint32
              nullable: true
          x-properties-order:
            - max_unavailable
            - max_surge
        zone:
          type: string
          description: Zone in which the pool's nodes will be spawned.
        root_volume_type:
          type: string
          description: 'Defines the system volume disk type. Several types of volume
            (`volume_type`) are provided:.

            * `l_ssd` is a local block storage which means your system is stored locally
            on your node''s hypervisor. This type is not available for all node types

            * `sbs-5k` is a remote block storage which means your system is stored
            on a centralized and resilient cluster with 5k IOPS limits

            * `sbs-15k` is a faster remote block storage which means your system is
            stored on a centralized and resilient cluster with 15k IOPS limits

            * `b_ssd` is the legacy remote block storage which means your system is
            stored on a centralized and resilient cluster. Consider using `sbs-5k`
            or `sbs-15k` instead.'
          enum:
            - default_volume_type
            - l_ssd
            - b_ssd
            - sbs_5k
            - sbs_15k
          default: default_volume_type
        root_volume_size:
          type: integer
          description: System volume disk size. (in bytes)
          format: uint64
          nullable: true
        public_ip_disabled:
          type: boolean
          description: Defines if the public IP should be removed from Nodes. To use
            this feature, your Cluster must have an attached Private Network set up
            with a Public Gateway.
      required:
        - name
        - node_type
        - size
      x-properties-order:
        - name
        - node_type
        - placement_group_id
        - autoscaling
        - size
        - min_size
        - max_size
        - container_runtime
        - autohealing
        - tags
        - kubelet_args
        - upgrade_policy
        - zone
        - root_volume_type
        - root_volume_size
        - public_ip_disabled
    scaleway.k8s.v1.ExternalNode:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        cluster_url:
          type: string
        pool_version:
          type: string
        cluster_ca:
          type: string
        kube_token:
          type: string
        kubelet_config:
          type: string
        external_ip:
          type: string
        containerd_version:
          type: string
        runc_version:
          type: string
        cni_plugins_version:
          type: string
        node_labels:
          type: object
          properties:
            <node_labelKey>:
              type: string
          additionalProperties: true
        node_taints:
          type: array
          items:
            $ref: '#/components/schemas/scaleway.k8s.v1.ExternalNode.CoreV1Taint'
        iam_token:
          type: string
      x-properties-order:
        - id
        - name
        - cluster_url
        - pool_version
        - cluster_ca
        - kube_token
        - kubelet_config
        - external_ip
        - containerd_version
        - runc_version
        - cni_plugins_version
        - node_labels
        - node_taints
        - iam_token
    scaleway.k8s.v1.ExternalNode.CoreV1Taint:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        effect:
          type: string
      x-properties-order:
        - key
        - value
        - effect
    scaleway.k8s.v1.ListClusterACLRulesResponse:
      type: object
      properties:
        total_count:
          type: integer
          description: Total number of ACLs that exist for the cluster.
          format: uint64
        rules:
          type: array
          description: Paginated returned ACLs.
          items:
            $ref: '#/components/schemas/scaleway.k8s.v1.ACLRule'
      x-properties-order:
        - total_count
        - rules
    scaleway.k8s.v1.ListClusterAvailableTypesResponse:
      type: object
      properties:
        cluster_types:
          type: array
          description: Available cluster types for the cluster.
          items:
            $ref: '#/components/schemas/scaleway.k8s.v1.ClusterType'
        total_count:
          type: integer
          description: Total number of types.
          format: uint64
      x-properties-order:
        - cluster_types
        - total_count
    scaleway.k8s.v1.ListClusterAvailableVersionsResponse:
      type: object
      properties:
        versions:
          type: array
          description: Available Kubernetes versions for the cluster.
          items:
            $ref: '#/components/schemas/scaleway.k8s.v1.Version'
      x-properties-order:
        - versions
    scaleway.k8s.v1.ListClusterTypesResponse:
      type: object
      properties:
        total_count:
          type: integer
          description: Total number of cluster-types.
          format: uint64
        cluster_types:
          type: array
          description: Paginated returned cluster-types.
          items:
            $ref: '#/components/schemas/scaleway.k8s.v1.ClusterType'
      x-properties-order:
        - total_count
        - cluster_types
    scaleway.k8s.v1.ListClustersResponse:
      type: object
      properties:
        total_count:
          type: integer
          description: Total number of clusters.
          format: uint64
        clusters:
          type: array
          description: Paginated returned clusters.
          items:
            $ref: '#/components/schemas/scaleway.k8s.v1.Cluster'
      x-properties-order:
        - total_count
        - clusters
    scaleway.k8s.v1.ListNodesResponse:
      type: object
      properties:
        total_count:
          type: integer
          description: Total number of nodes.
          format: uint64
        nodes:
          type: array
          description: Paginated returned nodes.
          items:
            $ref: '#/components/schemas/scaleway.k8s.v1.Node'
      x-properties-order:
        - total_count
        - nodes
    scaleway.k8s.v1.ListPoolsResponse:
      type: object
      properties:
        total_count:
          type: integer
          description: Total number of pools that exists for the cluster.
          format: uint64
        pools:
          type: array
          description: Paginated returned pools.
          items:
            $ref: '#/components/schemas/scaleway.k8s.v1.Pool'
      x-properties-order:
        - total_count
        - pools
    scaleway.k8s.v1.ListVersionsResponse:
      type: object
      properties:
        versions:
          type: array
          description: Available Kubernetes versions.
          items:
            $ref: '#/components/schemas/scaleway.k8s.v1.Version'
      x-properties-order:
        - versions
    scaleway.k8s.v1.Node:
      type: object
      properties:
        id:
          type: string
          description: Node ID.
        pool_id:
          type: string
          description: Pool ID of the node.
        cluster_id:
          type: string
          description: Cluster ID of the node.
        provider_id:
          type: string
          description: Underlying instance ID. It is prefixed by instance type and
            location information (see https://pkg.go.dev/k8s.io/api/core/v1#NodeSpec.ProviderID).
        region:
          type: string
          description: Cluster region of the node.
        name:
          type: string
          description: Name of the node.
        public_ip_v4:
          type: string
          description: Public IPv4 address of the node. (IPv4 address)
          deprecated: true
          example: 1.2.3.4
          nullable: true
        public_ip_v6:
          type: string
          description: Public IPv6 address of the node. (IPv6 address)
          deprecated: true
          example: 2001:0db8:85a3:0000:0000:8a2e:0370:7334
          nullable: true
        conditions:
          type: object
          description: Conditions of the node. These conditions contain the Node Problem
            Detector conditions, as well as some in house conditions.
          deprecated: true
          properties:
            <conditionKey>:
              type: string
          additionalProperties: true
        status:
          type: string
          description: Status of the node.
          enum:
            - unknown
            - creating
            - not_ready
            - ready
            - deleting
            - deleted
            - locked
            - rebooting
            - creation_error
            - upgrading
            - starting
            - registering
          default: unknown
        error_message:
          type: string
          description: Details of the error, if any occurred when managing the node.
          nullable: true
        created_at:
          type: string
          description: Date on which the node was created. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        updated_at:
          type: string
          description: Date on which the node was last updated. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
      x-properties-order:
        - id
        - pool_id
        - cluster_id
        - provider_id
        - region
        - name
        - public_ip_v4
        - public_ip_v6
        - conditions
        - status
        - error_message
        - created_at
        - updated_at
    scaleway.k8s.v1.Pool:
      type: object
      properties:
        id:
          type: string
          description: Pool ID.
        cluster_id:
          type: string
          description: Cluster ID of the pool.
        created_at:
          type: string
          description: Date on which the pool was created. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        updated_at:
          type: string
          description: Date on which the pool was last updated. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        name:
          type: string
          description: Pool name.
        status:
          type: string
          description: Pool status.
          enum:
            - unknown
            - ready
            - deleting
            - deleted
            - scaling
            - warning
            - locked
            - upgrading
          default: unknown
        version:
          type: string
          description: Pool version.
        node_type:
          type: string
          description: Node type is the type of Scaleway Instance wanted for the pool.
            Nodes with insufficient memory are not eligible (DEV1-S, PLAY2-PICO, STARDUST).
            'external' is a special node type used to provision instances from other
            cloud providers in a Kosmos Cluster.
        autoscaling:
          type: boolean
          description: Defines whether the autoscaling feature is enabled for the
            pool.
        size:
          type: integer
          description: Size (number of nodes) of the pool.
          format: uint32
        min_size:
          type: integer
          description: Defines the minimum size of the pool. Note that this field
            is only used when autoscaling is enabled on the pool.
          format: uint32
        max_size:
          type: integer
          description: Defines the maximum size of the pool. Note that this field
            is only used when autoscaling is enabled on the pool.
          format: uint32
        container_runtime:
          type: string
          description: Customization of the container runtime is available for each
            pool.
          enum:
            - unknown_runtime
            - docker
            - containerd
            - crio
          default: unknown_runtime
        autohealing:
          type: boolean
          description: Defines whether the autohealing feature is enabled for the
            pool.
        tags:
          type: array
          description: Tags associated with the pool, see [managing tags](https://www.scaleway.com/en/docs/containers/kubernetes/api-cli/managing-tags).
          items:
            type: string
        placement_group_id:
          type: string
          description: Placement group ID in which all the nodes of the pool will
            be created, placement groups are limited to 20 instances.
          nullable: true
        kubelet_args:
          type: object
          description: Kubelet arguments to be used by this pool. Note that this feature
            is experimental.
          properties:
            <kubelet_argKey>:
              type: string
          additionalProperties: true
        upgrade_policy:
          type: object
          description: Pool upgrade policy.
          properties:
            max_unavailable:
              type: integer
              format: uint32
            max_surge:
              type: integer
              format: uint32
          x-properties-order:
            - max_unavailable
            - max_surge
        zone:
          type: string
          description: Zone in which the pool's nodes will be spawned.
        root_volume_type:
          type: string
          description: 'Defines the system volume disk type. Several types of volume
            (`volume_type`) are provided:.

            * `l_ssd` is a local block storage which means your system is stored locally
            on your node''s hypervisor. This type is not available for all node types

            * `sbs-5k` is a remote block storage which means your system is stored
            on a centralized and resilient cluster with 5k IOPS limits

            * `sbs-15k` is a faster remote block storage which means your system is
            stored on a centralized and resilient cluster with 15k IOPS limits

            * `b_ssd` is the legacy remote block storage which means your system is
            stored on a centralized and resilient cluster. Consider using `sbs-5k`
            or `sbs-15k` instead.'
          enum:
            - default_volume_type
            - l_ssd
            - b_ssd
            - sbs_5k
            - sbs_15k
          default: default_volume_type
        root_volume_size:
          type: integer
          description: System volume disk size. (in bytes)
          format: uint64
          nullable: true
        public_ip_disabled:
          type: boolean
          description: Defines if the public IP should be removed from Nodes. To use
            this feature, your Cluster must have an attached Private Network set up
            with a Public Gateway.
        new_images_enabled:
          type: boolean
          description: Defines whether the pool is migrated to new images.
          deprecated: true
        region:
          type: string
          description: Cluster region of the pool.
      required:
        - node_type
        - size
      x-properties-order:
        - id
        - cluster_id
        - created_at
        - updated_at
        - name
        - status
        - version
        - node_type
        - autoscaling
        - size
        - min_size
        - max_size
        - container_runtime
        - autohealing
        - tags
        - placement_group_id
        - kubelet_args
        - upgrade_policy
        - zone
        - root_volume_type
        - root_volume_size
        - public_ip_disabled
        - new_images_enabled
        - region
    scaleway.k8s.v1.Runtime:
      type: string
      enum:
        - unknown_runtime
        - docker
        - containerd
        - crio
      default: unknown_runtime
    scaleway.k8s.v1.SetClusterACLRulesResponse:
      type: object
      properties:
        rules:
          type: array
          description: ACLs that were set.
          items:
            $ref: '#/components/schemas/scaleway.k8s.v1.ACLRule'
      x-properties-order:
        - rules
    scaleway.k8s.v1.Version:
      type: object
      properties:
        name:
          type: string
          description: Name of the Kubernetes version.
        label:
          type: string
          description: Label of the Kubernetes version.
        region:
          type: string
          description: Region in which this version is available.
        available_cnis:
          type: array
          description: Supported Container Network Interface (CNI) plugins for this
            version.
          items:
            $ref: '#/components/schemas/scaleway.k8s.v1.CNI'
        available_container_runtimes:
          type: array
          description: Supported container runtimes for this version.
          items:
            $ref: '#/components/schemas/scaleway.k8s.v1.Runtime'
        available_feature_gates:
          type: array
          description: Supported feature gates for this version.
          items:
            type: string
        available_admission_plugins:
          type: array
          description: Supported admission plugins for this version.
          items:
            type: string
        available_kubelet_args:
          type: object
          description: Supported kubelet arguments for this version.
          properties:
            <available_kubelet_argKey>:
              type: string
          additionalProperties: true
      x-properties-order:
        - name
        - label
        - region
        - available_cnis
        - available_container_runtimes
        - available_feature_gates
        - available_admission_plugins
        - available_kubelet_args
    scaleway.vpc.v1.ListPrivateNetworksResponse:
      type: object
      properties:
        private_networks:
          type: array
          items:
            $ref: '#/components/schemas/scaleway.vpc.v1.PrivateNetwork'
        total_count:
          type: integer
          format: uint32
      x-properties-order:
        - private_networks
        - total_count
    scaleway.vpc.v1.PrivateNetwork:
      type: object
      properties:
        id:
          type: string
          description: Private Network ID.
        name:
          type: string
          description: Private Network name.
        organization_id:
          type: string
          description: Scaleway Organization the Private Network belongs to.
        project_id:
          type: string
          description: Scaleway Project the Private Network belongs to.
        zone:
          type: string
          description: Availability Zone in which the Private Network is available.
        tags:
          type: array
          description: Tags of the Private Network.
          items:
            type: string
        created_at:
          type: string
          description: Date the Private Network was created. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        updated_at:
          type: string
          description: Date the Private Network was last modified. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        subnets:
          type: array
          description: Private Network subnets CIDR. (IP network)
          example:
            - 1.2.3.4/32
          items:
            type: string
      x-properties-order:
        - id
        - name
        - organization_id
        - project_id
        - zone
        - tags
        - created_at
        - updated_at
        - subnets
    scaleway.flexible_ip.v1alpha1.AttachFlexibleIPsResponse:
      type: object
      properties:
        total_count:
          type: integer
          description: Total count of flexible IPs that are being updated.
          format: uint32
        flexible_ips:
          type: array
          description: List of flexible IPs in an updating state.
          items:
            $ref: '#/components/schemas/scaleway.flexible_ip.v1alpha1.FlexibleIP'
      x-properties-order:
        - total_count
        - flexible_ips
    scaleway.flexible_ip.v1alpha1.DetachFlexibleIPsResponse:
      type: object
      properties:
        total_count:
          type: integer
          description: Total count of flexible IPs that are being detached.
          format: uint32
        flexible_ips:
          type: array
          description: List of flexible IPs in a detaching state.
          items:
            $ref: '#/components/schemas/scaleway.flexible_ip.v1alpha1.FlexibleIP'
      x-properties-order:
        - total_count
        - flexible_ips
    scaleway.flexible_ip.v1alpha1.FlexibleIP:
      type: object
      properties:
        id:
          type: string
          description: ID of the flexible IP.
        organization_id:
          type: string
          description: ID of the Organization the flexible IP is attached to.
        project_id:
          type: string
          description: ID of the Project the flexible IP is attached to.
        description:
          type: string
          description: Flexible IP description.
        tags:
          type: array
          description: Flexible IP tags.
          items:
            type: string
        updated_at:
          type: string
          description: Date on which the flexible IP was last updated. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        created_at:
          type: string
          description: Date on which the flexible IP was created. (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        status:
          type: string
          description: 'Flexible IP status.

            - ready : flexible IP is created and ready to be attached to a server
            or to be associated with a virtual MAC.

            - updating: flexible IP is being attached to a server or a virtual MAC
            operation is ongoing

            - attached: flexible IP is attached to a server

            - error: a flexible IP operation resulted in an error

            - detaching: flexible IP is being detached from a server

            - locked: the resource of the flexible IP is locked.'
          enum:
            - unknown
            - ready
            - updating
            - attached
            - error
            - detaching
            - locked
          default: unknown
        ip_address:
          type: string
          description: IP of the flexible IP. (IP network)
          example: 1.2.3.4/32
        mac_address:
          type: object
          description: MAC address of the flexible IP.
          properties:
            id:
              type: string
              description: ID of the flexible IP.
            mac_address:
              type: string
              description: MAC address of the Virtual MAC.
            mac_type:
              type: string
              description: Type of virtual MAC.
              enum:
                - unknown_type
                - vmware
                - xen
                - kvm
              default: unknown_type
            status:
              type: string
              description: Status of virtual MAC.
              enum:
                - unknown
                - ready
                - updating
                - used
                - error
                - deleting
              default: unknown
            updated_at:
              type: string
              description: Date on which the virtual MAC was last updated. (RFC 3339
                format)
              format: date-time
              example: '2022-03-22T12:34:56.123456Z'
              nullable: true
            created_at:
              type: string
              description: Date on which the virtual MAC was created. (RFC 3339 format)
              format: date-time
              example: '2022-03-22T12:34:56.123456Z'
              nullable: true
            zone:
              type: string
              description: MAC address IP Availability Zone.
          x-properties-order:
            - id
            - mac_address
            - mac_type
            - status
            - updated_at
            - created_at
            - zone
        server_id:
          type: string
          description: ID of the server linked to the flexible IP.
          nullable: true
        reverse:
          type: string
          description: Reverse DNS value.
        zone:
          type: string
          description: Availability Zone of the flexible IP.
      x-properties-order:
        - id
        - organization_id
        - project_id
        - description
        - tags
        - updated_at
        - created_at
        - status
        - ip_address
        - mac_address
        - server_id
        - reverse
        - zone
    scaleway.flexible_ip.v1alpha1.FlexibleIP.Status:
      type: string
      enum:
        - unknown
        - ready
        - updating
        - attached
        - error
        - detaching
        - locked
      default: unknown
    scaleway.flexible_ip.v1alpha1.ListFlexibleIPsResponse:
      type: object
      properties:
        total_count:
          type: integer
          description: Total count of matching flexible IPs.
          format: uint32
        flexible_ips:
          type: array
          description: List of all flexible IPs.
          items:
            $ref: '#/components/schemas/scaleway.flexible_ip.v1alpha1.FlexibleIP'
      x-properties-order:
        - total_count
        - flexible_ips
    scaleway.domain.v2beta1.ClearDNSZoneRecordsResponse:
      type: object
    scaleway.domain.v2beta1.DNSZone:
      type: object
      properties:
        domain:
          type: string
        subdomain:
          type: string
        ns:
          type: array
          items:
            type: string
        ns_default:
          type: array
          items:
            type: string
        ns_master:
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/scaleway.domain.v2beta1.DNSZone.Status'
        message:
          $ref: '#/components/schemas/google.protobuf.StringValue'
        updated_at:
          type: string
          description: (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        project_id:
          type: string
        linked_products:
          type: array
          items:
            $ref: '#/components/schemas/scaleway.domain.v2beta1.LinkedProduct'
      x-properties-order:
        - domain
        - subdomain
        - ns
        - ns_default
        - ns_master
        - status
        - message
        - updated_at
        - project_id
        - linked_products
    scaleway.domain.v2beta1.DNSZone.Status:
      type: string
      enum:
        - unknown
        - active
        - pending
        - error
        - locked
      default: unknown
    scaleway.domain.v2beta1.DNSZoneVersion:
      type: object
      properties:
        id:
          type: string
          description: (UUID format)
          example: 6170692e-7363-616c-6577-61792e636f6d
        created_at:
          type: string
          description: (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
      x-properties-order:
        - id
        - created_at
    scaleway.domain.v2beta1.DeleteDNSZoneResponse:
      type: object
    scaleway.domain.v2beta1.DeleteSSLCertificateResponse:
      type: object
    scaleway.domain.v2beta1.GetDNSZoneTsigKeyResponse:
      type: object
      properties:
        name:
          type: string
        key:
          type: string
        algorithm:
          type: string
      x-properties-order:
        - name
        - key
        - algorithm
    scaleway.domain.v2beta1.GetDNSZoneVersionDiffResponse:
      type: object
      properties:
        changes:
          type: array
          items:
            $ref: '#/components/schemas/scaleway.domain.v2beta1.RecordChange'
      x-properties-order:
        - changes
    scaleway.domain.v2beta1.ImportProviderDNSZoneResponse:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/scaleway.domain.v2beta1.Record'
      x-properties-order:
        - records
    scaleway.domain.v2beta1.ImportRawDNSZoneRequest.TsigKey:
      type: object
      properties:
        name:
          type: string
        key:
          type: string
        algorithm:
          type: string
      x-properties-order:
        - name
        - key
        - algorithm
    scaleway.domain.v2beta1.ImportRawDNSZoneResponse:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/scaleway.domain.v2beta1.Record'
      x-properties-order:
        - records
    scaleway.domain.v2beta1.LinkedProduct:
      type: string
      enum:
        - unknown_product
        - vpc
      default: unknown_product
    scaleway.domain.v2beta1.ListDNSZoneNameserversResponse:
      type: object
      properties:
        ns:
          type: array
          description: DNS zone name servers returned.
          items:
            $ref: '#/components/schemas/scaleway.domain.v2beta1.Nameserver'
      x-properties-order:
        - ns
    scaleway.domain.v2beta1.ListDNSZoneRecordsResponse:
      type: object
      properties:
        total_count:
          type: integer
          description: Total number of DNS zone records.
          format: uint32
        records:
          type: array
          description: Paginated returned DNS zone records.
          items:
            $ref: '#/components/schemas/scaleway.domain.v2beta1.Record'
      x-properties-order:
        - total_count
        - records
    scaleway.domain.v2beta1.ListDNSZoneVersionRecordsResponse:
      type: object
      properties:
        total_count:
          type: integer
          description: Total number of DNS zones versions records.
          format: uint32
        records:
          type: array
          items:
            $ref: '#/components/schemas/scaleway.domain.v2beta1.Record'
      x-properties-order:
        - total_count
        - records
    scaleway.domain.v2beta1.ListDNSZoneVersionsResponse:
      type: object
      properties:
        total_count:
          type: integer
          description: Total number of DNS zones versions.
          format: uint32
        versions:
          type: array
          items:
            $ref: '#/components/schemas/scaleway.domain.v2beta1.DNSZoneVersion'
      x-properties-order:
        - total_count
        - versions
    scaleway.domain.v2beta1.ListDNSZonesResponse:
      type: object
      properties:
        total_count:
          type: integer
          description: Total number of DNS zones matching the requested criteria.
          format: uint32
        dns_zones:
          type: array
          description: Paginated returned DNS zones.
          items:
            $ref: '#/components/schemas/scaleway.domain.v2beta1.DNSZone'
      x-properties-order:
        - total_count
        - dns_zones
    scaleway.domain.v2beta1.ListSSLCertificatesResponse:
      type: object
      properties:
        total_count:
          type: integer
          format: uint32
        certificates:
          type: array
          items:
            $ref: '#/components/schemas/scaleway.domain.v2beta1.SSLCertificate'
      x-properties-order:
        - total_count
        - certificates
    scaleway.domain.v2beta1.Nameserver:
      type: object
      properties:
        name:
          type: string
        ip:
          type: array
          items:
            type: string
      x-properties-order:
        - name
        - ip
    scaleway.domain.v2beta1.RawFormat:
      type: string
      enum:
        - unknown_raw_format
        - bind
      default: unknown_raw_format
    scaleway.domain.v2beta1.Record:
      type: object
      properties:
        data:
          type: string
        name:
          type: string
        priority:
          type: integer
          format: uint32
        ttl:
          type: integer
          format: uint32
        type:
          $ref: '#/components/schemas/scaleway.domain.v2beta1.Record.Type'
        comment:
          $ref: '#/components/schemas/google.protobuf.StringValue'
        geo_ip_config:
          type: object
          properties:
            matches:
              type: array
              items:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.Record.GeoIPConfig.Match'
            default:
              type: string
          nullable: true
          x-properties-order:
            - matches
            - default
          x-one-of: dynamic_data
        http_service_config:
          type: object
          properties:
            ips:
              type: array
              description: (IP address)
              example:
                - 1.2.3.4
              items:
                type: string
            must_contain:
              $ref: '#/components/schemas/google.protobuf.StringValue'
            url:
              type: string
            user_agent:
              $ref: '#/components/schemas/google.protobuf.StringValue'
            strategy:
              $ref: '#/components/schemas/scaleway.domain.v2beta1.Record.HTTPServiceConfig.Strategy'
          nullable: true
          x-properties-order:
            - ips
            - must_contain
            - url
            - user_agent
            - strategy
          x-one-of: dynamic_data
        weighted_config:
          type: object
          properties:
            weighted_ips:
              type: array
              items:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.Record.WeightedConfig.WeightedIP'
          nullable: true
          x-properties-order:
            - weighted_ips
          x-one-of: dynamic_data
        view_config:
          type: object
          properties:
            views:
              type: array
              items:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.Record.ViewConfig.View'
          nullable: true
          x-properties-order:
            - views
          x-one-of: dynamic_data
        id:
          type: string
      x-properties-order:
        - data
        - name
        - priority
        - ttl
        - type
        - comment
        - geo_ip_config
        - http_service_config
        - weighted_config
        - view_config
        - id
    scaleway.domain.v2beta1.Record.GeoIPConfig.Match:
      type: object
      properties:
        countries:
          type: array
          items:
            type: string
        continents:
          type: array
          items:
            type: string
        data:
          type: string
      x-properties-order:
        - countries
        - continents
        - data
    scaleway.domain.v2beta1.Record.HTTPServiceConfig.Strategy:
      type: string
      enum:
        - random
        - hashed
        - all
      default: random
    scaleway.domain.v2beta1.Record.Type:
      type: string
      enum:
        - unknown
        - A
        - AAAA
        - CNAME
        - TXT
        - SRV
        - TLSA
        - MX
        - NS
        - PTR
        - CAA
        - ALIAS
        - LOC
        - SSHFP
        - HINFO
        - RP
        - URI
        - DS
        - NAPTR
        - DNAME
        - SVCB
        - HTTPS
      default: unknown
    scaleway.domain.v2beta1.Record.ViewConfig.View:
      type: object
      properties:
        subnet:
          type: string
        data:
          type: string
      x-properties-order:
        - subnet
        - data
    scaleway.domain.v2beta1.Record.WeightedConfig.WeightedIP:
      type: object
      properties:
        ip:
          type: string
          description: (IP address)
          example: 1.2.3.4
        weight:
          type: integer
          format: uint32
      x-properties-order:
        - ip
        - weight
    scaleway.domain.v2beta1.RecordChange:
      type: object
      properties:
        add:
          type: object
          properties:
            records:
              type: array
              items:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.Record'
          nullable: true
          x-properties-order:
            - records
          x-one-of: change
        set:
          type: object
          properties:
            id:
              type: string
              description: (UUID format)
              example: 6170692e-7363-616c-6577-61792e636f6d
              nullable: true
              x-one-of: identifier
            id_fields:
              type: object
              properties:
                name:
                  type: string
                type:
                  $ref: '#/components/schemas/scaleway.domain.v2beta1.Record.Type'
                data:
                  $ref: '#/components/schemas/google.protobuf.StringValue'
                ttl:
                  $ref: '#/components/schemas/google.protobuf.UInt32Value'
              nullable: true
              x-properties-order:
                - name
                - type
                - data
                - ttl
              x-one-of: identifier
            records:
              type: array
              items:
                $ref: '#/components/schemas/scaleway.domain.v2beta1.Record'
          nullable: true
          x-properties-order:
            - id
            - id_fields
            - records
          x-one-of: change
        delete:
          type: object
          properties:
            id:
              type: string
              description: (UUID format)
              example: 6170692e-7363-616c-6577-61792e636f6d
              nullable: true
              x-one-of: identifier
            id_fields:
              type: object
              properties:
                name:
                  type: string
                type:
                  $ref: '#/components/schemas/scaleway.domain.v2beta1.Record.Type'
                data:
                  $ref: '#/components/schemas/google.protobuf.StringValue'
                ttl:
                  $ref: '#/components/schemas/google.protobuf.UInt32Value'
              nullable: true
              x-properties-order:
                - name
                - type
                - data
                - ttl
              x-one-of: identifier
          nullable: true
          x-properties-order:
            - id
            - id_fields
          x-one-of: change
        clear:
          type: object
          nullable: true
          x-one-of: change
      x-properties-order:
        - add
        - set
        - delete
        - clear
    scaleway.domain.v2beta1.RefreshDNSZoneResponse:
      type: object
      properties:
        dns_zones:
          type: array
          description: DNS zones returned.
          items:
            $ref: '#/components/schemas/scaleway.domain.v2beta1.DNSZone'
      x-properties-order:
        - dns_zones
    scaleway.domain.v2beta1.RestoreDNSZoneVersionResponse:
      type: object
    scaleway.domain.v2beta1.SSLCertificate:
      type: object
      properties:
        dns_zone:
          type: string
        alternative_dns_zones:
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/scaleway.domain.v2beta1.SSLCertificate.Status'
        private_key:
          type: string
        certificate_chain:
          type: string
        created_at:
          type: string
          description: (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
        expired_at:
          type: string
          description: (RFC 3339 format)
          format: date-time
          example: '2022-03-22T12:34:56.123456Z'
          nullable: true
      x-properties-order:
        - dns_zone
        - alternative_dns_zones
        - status
        - private_key
        - certificate_chain
        - created_at
        - expired_at
    scaleway.domain.v2beta1.SSLCertificate.Status:
      type: string
      enum:
        - unknown
        - new
        - pending
        - success
        - error
      default: unknown
    scaleway.domain.v2beta1.UpdateDNSZoneNameserversResponse:
      type: object
      properties:
        ns:
          type: array
          description: DNS zone name servers returned.
          items:
            $ref: '#/components/schemas/scaleway.domain.v2beta1.Nameserver'
      x-properties-order:
        - ns
    scaleway.domain.v2beta1.UpdateDNSZoneRecordsResponse:
      type: object
      properties:
        records:
          type: array
          description: DNS zone records returned.
          items:
            $ref: '#/components/schemas/scaleway.domain.v2beta1.Record'
      x-properties-order:
        - records
  securitySchemes:
    scaleway:
      in: header
      name: X-Auth-Token
      type: apiKey
