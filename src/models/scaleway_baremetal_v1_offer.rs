/*
 * Instance API
 *
 * # Introduction  ## Endpoints  Scaleway instance API can be reach on  - `https://api.scaleway.com/instance/v1/zones/fr-par-1` - `https://api.scaleway.com/instance/v1/zones/fr-par-2` - `https://api.scaleway.com/instance/v1/zones/nl-ams-1` - `https://api.scaleway.com/instance/v1/zones/pl-waw-1`  Older endpoints are still reachable but should not be used for new projects  - `https://cp-par1.scaleway.com` - `https://cp-ams1.scaleway.com`  <Example>  The following code is an example request to retrieve detailed information about a volume:  ``` % curl -H 'X-Auth-Token: xxxxxxxx-xxxx-xxxxx-xxxx-xxxxxxxxxxxxx' -H 'Content-Type: application/json' https://api.scaleway.com/instance/v1/zones/fr-par-1/volumes/f929fe39-63f8-4be8-a80e-1e9c8ae22a76 -i  HTTP/1.1 200 OK Server: nginx Date: Thu, 22 May 2014 07:55:00 GMT Content-Type: application/json Content-Length: 1345 Connection: keep-alive Strict-Transport-Security: max-age=86400  {   \"volumes\": [     {       \"export_uri\": null,       \"id\": \"f929fe39-63f8-4be8-a80e-1e9c8ae22a76\",       \"name\": \"volume-0-1\",       \"organization\": \"000a115d-2852-4b0a-9ce8-47f1134ba95a\",       \"server\": null,       \"size\": 10000000000,       \"volume_type\": \"l_ssd\"     },     {       \"export_uri\": null,       \"id\": \"0facb6b5-b117-441a-81c1-f28b1d723779\",       \"name\": \"volume-0-2\",       \"organization\": \"000a115d-2852-4b0a-9ce8-47f1134ba95a\",       \"server\": null,       \"size\": 20000000000,       \"volume_type\": \"l_ssd\"     }   ] } ```  </Example>  ## Pagination  Most of listing requests receive a paginated response.  **Paginated request**  Requests against paginated endpoints accept two `query` arguments:  - `page`, a positive integer to choose the page to return. - `per_page`, an positive integer lower or equal to 100 to select the number of   items to return. The default value is `50`.  Paginated endpoints usually also accept filters to search and sort results. These filters are documented along each endpoint documentation.  **Paginated response**  ```bash % curl -H 'X-Auth-Token: <token>' 'https://api.scaleway.com/instance/v1/zones/fr-par-1/images/?page=2&per_page=10' -i HTTP/1.0 200 OK [...] X-Total-Count: 209 [...] ```  The `X-Total-Count` header contains the total number of items for the resource. 
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ScalewayBaremetalV1Offer {
    /// ID of the offer
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Name of the offer
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Stock level
    #[serde(rename = "stock", skip_serializing_if = "Option::is_none")]
    pub stock: Option<Stock>,
    /// Bandwidth available in bits/s with the offer
    #[serde(rename = "bandwidth", skip_serializing_if = "Option::is_none")]
    pub bandwidth: Option<f32>,
    /// Commercial range of the offer
    #[serde(rename = "commercial_range", skip_serializing_if = "Option::is_none")]
    pub commercial_range: Option<String>,
    #[serde(rename = "price_per_hour", skip_serializing_if = "Option::is_none")]
    pub price_per_hour: Option<Box<crate::models::ScalewayBaremetalV1OfferPricePerHour>>,
    #[serde(rename = "price_per_month", skip_serializing_if = "Option::is_none")]
    pub price_per_month: Option<Box<crate::models::ScalewayBaremetalV1OfferPricePerMonth>>,
    /// Disks specifications of the offer
    #[serde(rename = "disks", skip_serializing_if = "Option::is_none")]
    pub disks: Option<Vec<crate::models::ScalewayBaremetalV1Disk>>,
    /// True if the offer is currently available
    #[serde(rename = "enable", skip_serializing_if = "Option::is_none")]
    pub enable: Option<bool>,
    /// CPU specifications of the offer
    #[serde(rename = "cpus", skip_serializing_if = "Option::is_none")]
    pub cpus: Option<Vec<crate::models::ScalewayBaremetalV1Cpu>>,
    /// Memory specifications of the offer
    #[serde(rename = "memories", skip_serializing_if = "Option::is_none")]
    pub memories: Option<Vec<crate::models::ScalewayBaremetalV1Memory>>,
    /// Name of the quota associated to the offer
    #[serde(rename = "quota_name", skip_serializing_if = "Option::is_none")]
    pub quota_name: Option<String>,
    /// Persistent memory specifications of the offer
    #[serde(rename = "persistent_memories", skip_serializing_if = "Option::is_none")]
    pub persistent_memories: Option<Vec<crate::models::ScalewayBaremetalV1PersistentMemory>>,
    /// Raid controller specifications of the offer
    #[serde(rename = "raid_controllers", skip_serializing_if = "Option::is_none")]
    pub raid_controllers: Option<Vec<crate::models::ScalewayBaremetalV1RaidController>>,
}

impl ScalewayBaremetalV1Offer {
    pub fn new() -> ScalewayBaremetalV1Offer {
        ScalewayBaremetalV1Offer {
            id: None,
            name: None,
            stock: None,
            bandwidth: None,
            commercial_range: None,
            price_per_hour: None,
            price_per_month: None,
            disks: None,
            enable: None,
            cpus: None,
            memories: None,
            quota_name: None,
            persistent_memories: None,
            raid_controllers: None,
        }
    }
}

/// Stock level
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Stock {
    #[serde(rename = "empty")]
    Empty,
    #[serde(rename = "low")]
    Low,
    #[serde(rename = "available")]
    Available,
}

