/*
 * Account API
 *
 * # Introduction  The Account API allows you to manage projects. Project is Scalewayâ€™s resource management feature. Designed to help you organize your infrastructure and cloud services, the feature allows resources to be isolated and grouped into specific projects.
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ScalewayPeriodBaremetalPeriodV1PeriodIp {
    /// ID of the IP
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Address of the IP (IP address)
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    /// Reverse IP value
    #[serde(rename = "reverse", skip_serializing_if = "Option::is_none")]
    pub reverse: Option<String>,
    /// Version of IP (v4 or v6)
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<Version>,
    /// Status of the reverse
    #[serde(rename = "reverse_status", skip_serializing_if = "Option::is_none")]
    pub reverse_status: Option<ReverseStatus>,
    /// A message related to the reverse status, in case of an error for example
    #[serde(
        rename = "reverse_status_message",
        skip_serializing_if = "Option::is_none"
    )]
    pub reverse_status_message: Option<String>,
}

impl ScalewayPeriodBaremetalPeriodV1PeriodIp {
    pub fn new() -> ScalewayPeriodBaremetalPeriodV1PeriodIp {
        ScalewayPeriodBaremetalPeriodV1PeriodIp {
            id: None,
            address: None,
            reverse: None,
            version: None,
            reverse_status: None,
            reverse_status_message: None,
        }
    }
}

/// Version of IP (v4 or v6)
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Version {
    #[serde(rename = "IPv4")]
    Ipv4,
    #[serde(rename = "IPv6")]
    Ipv6,
}

impl Default for Version {
    fn default() -> Version {
        Self::Ipv4
    }
}
/// Status of the reverse
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReverseStatus {
    #[serde(rename = "unknown")]
    Unknown,
    #[serde(rename = "pending")]
    Pending,
    #[serde(rename = "active")]
    Active,
    #[serde(rename = "error")]
    Error,
}

impl Default for ReverseStatus {
    fn default() -> ReverseStatus {
        Self::Unknown
    }
}
