/*
 * Account API
 *
 * # Introduction  The Account API allows you to manage projects. Project is Scalewayâ€™s resource management feature. Designed to help you organize your infrastructure and cloud services, the feature allows resources to be isolated and grouped into specific projects.
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ScalewayPeriodBaremetalPeriodV1PeriodServerPeriodOption {
    /// ID of the option
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Name of the option
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Status of the option
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
    /// Is false if the option could not be added or removed
    #[serde(rename = "manageable", skip_serializing_if = "Option::is_none")]
    pub manageable: Option<bool>,
    /// Auto expiration date for compatible options (RFC 3339 format)
    #[serde(
        rename = "expires_at",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub expires_at: Option<Option<String>>,
}

impl ScalewayPeriodBaremetalPeriodV1PeriodServerPeriodOption {
    pub fn new() -> ScalewayPeriodBaremetalPeriodV1PeriodServerPeriodOption {
        ScalewayPeriodBaremetalPeriodV1PeriodServerPeriodOption {
            id: None,
            name: None,
            status: None,
            manageable: None,
            expires_at: None,
        }
    }
}

/// Status of the option
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "option_status_unknown")]
    Unknown,
    #[serde(rename = "option_status_enable")]
    Enable,
    #[serde(rename = "option_status_enabling")]
    Enabling,
    #[serde(rename = "option_status_disabling")]
    Disabling,
    #[serde(rename = "option_status_error")]
    Error,
}

impl Default for Status {
    fn default() -> Status {
        Self::Unknown
    }
}
