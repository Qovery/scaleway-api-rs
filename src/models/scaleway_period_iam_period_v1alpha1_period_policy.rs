/*
 * Account API
 *
 * # Introduction  The Account API allows you to manage projects. Project is Scalewayâ€™s resource management feature. Designed to help you organize your infrastructure and cloud services, the feature allows resources to be isolated and grouped into specific projects.
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ScalewayPeriodIamPeriodV1alpha1PeriodPolicy {
    /// Id of policy
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Name of policy
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Description of policy
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Organization ID of policy
    #[serde(rename = "organization_id", skip_serializing_if = "Option::is_none")]
    pub organization_id: Option<String>,
    /// Creation date and time of policy (RFC 3339 format)
    #[serde(
        rename = "created_at",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub created_at: Option<Option<String>>,
    /// Last update date and time of policy (RFC 3339 format)
    #[serde(
        rename = "updated_at",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub updated_at: Option<Option<String>>,
    /// Editable status of policy
    #[serde(rename = "editable", skip_serializing_if = "Option::is_none")]
    pub editable: Option<bool>,
    /// Number of rules of policy
    #[serde(rename = "nb_rules", skip_serializing_if = "Option::is_none")]
    pub nb_rules: Option<i32>,
    /// Number of scopes of policy
    #[serde(rename = "nb_scopes", skip_serializing_if = "Option::is_none")]
    pub nb_scopes: Option<i32>,
    /// Number of permission sets of policy
    #[serde(rename = "nb_permission_sets", skip_serializing_if = "Option::is_none")]
    pub nb_permission_sets: Option<i32>,
    /// ID of user, owner of the policy
    #[serde(rename = "user_id", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<String>,
    /// ID of group, owner of the policy
    #[serde(rename = "group_id", skip_serializing_if = "Option::is_none")]
    pub group_id: Option<String>,
    /// ID of application, owner of the policy
    #[serde(rename = "application_id", skip_serializing_if = "Option::is_none")]
    pub application_id: Option<String>,
    /// True when the policy do not belong to any principal
    #[serde(rename = "no_principal", skip_serializing_if = "Option::is_none")]
    pub no_principal: Option<bool>,
}

impl ScalewayPeriodIamPeriodV1alpha1PeriodPolicy {
    pub fn new() -> ScalewayPeriodIamPeriodV1alpha1PeriodPolicy {
        ScalewayPeriodIamPeriodV1alpha1PeriodPolicy {
            id: None,
            name: None,
            description: None,
            organization_id: None,
            created_at: None,
            updated_at: None,
            editable: None,
            nb_rules: None,
            nb_scopes: None,
            nb_permission_sets: None,
            user_id: None,
            group_id: None,
            application_id: None,
            no_principal: None,
        }
    }
}
