/*
 * Account API
 *
 * # Introduction  The Account API allows you to manage projects. Project is Scalewayâ€™s resource management feature. Designed to help you organize your infrastructure and cloud services, the feature allows resources to be isolated and grouped into specific projects.
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ScalewayPeriodInstancePeriodV1PeriodDashboard {
    #[serde(rename = "volumes_count", skip_serializing_if = "Option::is_none")]
    pub volumes_count: Option<i32>,
    #[serde(
        rename = "running_servers_count",
        skip_serializing_if = "Option::is_none"
    )]
    pub running_servers_count: Option<i32>,
    #[serde(rename = "servers_by_types", skip_serializing_if = "Option::is_none")]
    pub servers_by_types: Option<crate::models::ScalewayInstanceV1DashboardServersByTypes>,
    #[serde(rename = "images_count", skip_serializing_if = "Option::is_none")]
    pub images_count: Option<i32>,
    #[serde(rename = "snapshots_count", skip_serializing_if = "Option::is_none")]
    pub snapshots_count: Option<i32>,
    #[serde(rename = "servers_count", skip_serializing_if = "Option::is_none")]
    pub servers_count: Option<i32>,
    #[serde(rename = "ips_count", skip_serializing_if = "Option::is_none")]
    pub ips_count: Option<i32>,
    #[serde(
        rename = "security_groups_count",
        skip_serializing_if = "Option::is_none"
    )]
    pub security_groups_count: Option<i32>,
    #[serde(rename = "ips_unused", skip_serializing_if = "Option::is_none")]
    pub ips_unused: Option<i32>,
    #[serde(
        rename = "volumes_l_ssd_count",
        skip_serializing_if = "Option::is_none"
    )]
    pub volumes_l_ssd_count: Option<i32>,
    #[serde(
        rename = "volumes_b_ssd_count",
        skip_serializing_if = "Option::is_none"
    )]
    pub volumes_b_ssd_count: Option<i32>,
    /// (in bytes)
    #[serde(
        rename = "volumes_l_ssd_total_size",
        skip_serializing_if = "Option::is_none"
    )]
    pub volumes_l_ssd_total_size: Option<i32>,
    /// (in bytes)
    #[serde(
        rename = "volumes_b_ssd_total_size",
        skip_serializing_if = "Option::is_none"
    )]
    pub volumes_b_ssd_total_size: Option<i32>,
    #[serde(rename = "private_nics_count", skip_serializing_if = "Option::is_none")]
    pub private_nics_count: Option<i32>,
    #[serde(
        rename = "placement_groups_count",
        skip_serializing_if = "Option::is_none"
    )]
    pub placement_groups_count: Option<i32>,
}

impl ScalewayPeriodInstancePeriodV1PeriodDashboard {
    pub fn new() -> ScalewayPeriodInstancePeriodV1PeriodDashboard {
        ScalewayPeriodInstancePeriodV1PeriodDashboard {
            volumes_count: None,
            running_servers_count: None,
            servers_by_types: None,
            images_count: None,
            snapshots_count: None,
            servers_count: None,
            ips_count: None,
            security_groups_count: None,
            ips_unused: None,
            volumes_l_ssd_count: None,
            volumes_b_ssd_count: None,
            volumes_l_ssd_total_size: None,
            volumes_b_ssd_total_size: None,
            private_nics_count: None,
            placement_groups_count: None,
        }
    }
}
