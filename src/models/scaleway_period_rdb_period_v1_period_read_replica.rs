/*
 * Account API
 *
 * # Introduction  The Account API allows you to manage projects. Project is Scalewayâ€™s resource management feature. Designed to help you organize your infrastructure and cloud services, the feature allows resources to be isolated and grouped into specific projects.
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ScalewayPeriodRdbPeriodV1PeriodReadReplica {
    /// UUID of the read replica (UUID format)
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Display read replica connection information
    #[serde(rename = "endpoints", skip_serializing_if = "Option::is_none")]
    pub endpoints: Option<Vec<crate::models::ScalewayPeriodRdbPeriodV1PeriodEndpoint>>,
    /// Read replica status
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
    /// Region the read replica is in
    #[serde(rename = "region", skip_serializing_if = "Option::is_none")]
    pub region: Option<String>,
}

impl ScalewayPeriodRdbPeriodV1PeriodReadReplica {
    pub fn new() -> ScalewayPeriodRdbPeriodV1PeriodReadReplica {
        ScalewayPeriodRdbPeriodV1PeriodReadReplica {
            id: None,
            endpoints: None,
            status: None,
            region: None,
        }
    }
}

/// Read replica status
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "unknown")]
    Unknown,
    #[serde(rename = "provisioning")]
    Provisioning,
    #[serde(rename = "initializing")]
    Initializing,
    #[serde(rename = "ready")]
    Ready,
    #[serde(rename = "deleting")]
    Deleting,
    #[serde(rename = "error")]
    Error,
    #[serde(rename = "locked")]
    Locked,
    #[serde(rename = "configuring")]
    Configuring,
}

impl Default for Status {
    fn default() -> Status {
        Self::Unknown
    }
}
