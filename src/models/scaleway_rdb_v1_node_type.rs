/*
 * Instance API
 *
 * # Introduction  ## Endpoints  Scaleway instance API can be reach on  - `https://api.scaleway.com/instance/v1/zones/fr-par-1` - `https://api.scaleway.com/instance/v1/zones/fr-par-2` - `https://api.scaleway.com/instance/v1/zones/nl-ams-1` - `https://api.scaleway.com/instance/v1/zones/pl-waw-1`  Older endpoints are still reachable but should not be used for new projects  - `https://cp-par1.scaleway.com` - `https://cp-ams1.scaleway.com`  <Example>  The following code is an example request to retrieve detailed information about a volume:  ``` % curl -H 'X-Auth-Token: xxxxxxxx-xxxx-xxxxx-xxxx-xxxxxxxxxxxxx' -H 'Content-Type: application/json' https://api.scaleway.com/instance/v1/zones/fr-par-1/volumes/f929fe39-63f8-4be8-a80e-1e9c8ae22a76 -i  HTTP/1.1 200 OK Server: nginx Date: Thu, 22 May 2014 07:55:00 GMT Content-Type: application/json Content-Length: 1345 Connection: keep-alive Strict-Transport-Security: max-age=86400  {   \"volumes\": [     {       \"export_uri\": null,       \"id\": \"f929fe39-63f8-4be8-a80e-1e9c8ae22a76\",       \"name\": \"volume-0-1\",       \"organization\": \"000a115d-2852-4b0a-9ce8-47f1134ba95a\",       \"server\": null,       \"size\": 10000000000,       \"volume_type\": \"l_ssd\"     },     {       \"export_uri\": null,       \"id\": \"0facb6b5-b117-441a-81c1-f28b1d723779\",       \"name\": \"volume-0-2\",       \"organization\": \"000a115d-2852-4b0a-9ce8-47f1134ba95a\",       \"server\": null,       \"size\": 20000000000,       \"volume_type\": \"l_ssd\"     }   ] } ```  </Example>  ## Pagination  Most of listing requests receive a paginated response.  **Paginated request**  Requests against paginated endpoints accept two `query` arguments:  - `page`, a positive integer to choose the page to return. - `per_page`, an positive integer lower or equal to 100 to select the number of   items to return. The default value is `50`.  Paginated endpoints usually also accept filters to search and sort results. These filters are documented along each endpoint documentation.  **Paginated response**  ```bash % curl -H 'X-Auth-Token: <token>' 'https://api.scaleway.com/instance/v1/zones/fr-par-1/images/?page=2&per_page=10' -i HTTP/1.0 200 OK [...] X-Total-Count: 209 [...] ```  The `X-Total-Count` header contains the total number of items for the resource. 
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ScalewayRdbV1NodeType {
    /// Node Type name identifier
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Current stock status for the Node Type
    #[serde(rename = "stock_status", skip_serializing_if = "Option::is_none")]
    pub stock_status: Option<StockStatus>,
    /// Current specs of the offer
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Number of virtual CPUs
    #[serde(rename = "vcpus", skip_serializing_if = "Option::is_none")]
    pub vcpus: Option<f32>,
    /// Quantity of RAM (in bytes)
    #[serde(rename = "memory", skip_serializing_if = "Option::is_none")]
    pub memory: Option<f32>,
    #[serde(rename = "volume_constraint", skip_serializing_if = "Option::is_none")]
    pub volume_constraint: Option<Box<crate::models::ScalewayRdbV1NodeTypeVolumeConstraint>>,
    /// The Node Type is compliant with Block Storage
    #[serde(rename = "is_bssd_compatible", skip_serializing_if = "Option::is_none")]
    pub is_bssd_compatible: Option<bool>,
    /// The Node Type is currently disabled
    #[serde(rename = "disabled", skip_serializing_if = "Option::is_none")]
    pub disabled: Option<bool>,
    /// The Node Type is currently in beta
    #[serde(rename = "beta", skip_serializing_if = "Option::is_none")]
    pub beta: Option<bool>,
    /// Available storage options for the Node Type
    #[serde(rename = "available_volume_types", skip_serializing_if = "Option::is_none")]
    pub available_volume_types: Option<Vec<crate::models::ScalewayRdbV1NodeTypeVolumeType>>,
    /// Region the Node Type is in
    #[serde(rename = "region", skip_serializing_if = "Option::is_none")]
    pub region: Option<String>,
}

impl ScalewayRdbV1NodeType {
    pub fn new() -> ScalewayRdbV1NodeType {
        ScalewayRdbV1NodeType {
            name: None,
            stock_status: None,
            description: None,
            vcpus: None,
            memory: None,
            volume_constraint: None,
            is_bssd_compatible: None,
            disabled: None,
            beta: None,
            available_volume_types: None,
            region: None,
        }
    }
}

/// Current stock status for the Node Type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum StockStatus {
    #[serde(rename = "unknown")]
    Unknown,
    #[serde(rename = "low_stock")]
    LowStock,
    #[serde(rename = "out_of_stock")]
    OutOfStock,
    #[serde(rename = "available")]
    Available,
}

