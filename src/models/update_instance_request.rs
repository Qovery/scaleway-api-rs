/*
 * Account API
 *
 * # Introduction  The Account API allows you to manage projects. Project is Scalewayâ€™s resource management feature. Designed to help you organize your infrastructure and cloud services, the feature allows resources to be isolated and grouped into specific projects.
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UpdateInstanceRequest {
    /// In hours
    #[serde(
        rename = "backup_schedule_frequency",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub backup_schedule_frequency: Option<Option<i32>>,
    /// In days
    #[serde(
        rename = "backup_schedule_retention",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub backup_schedule_retention: Option<Option<i32>>,
    /// Whether or not the backup schedule is disabled
    #[serde(
        rename = "is_backup_schedule_disabled",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub is_backup_schedule_disabled: Option<Option<bool>>,
    /// Name of the instance
    #[serde(
        rename = "name",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub name: Option<Option<String>>,
    /// Tags of a given instance
    #[serde(
        rename = "tags",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub tags: Option<Option<Vec<String>>>,
    #[serde(rename = "logs_policy", skip_serializing_if = "Option::is_none")]
    pub logs_policy: Option<Box<crate::models::UpdateInstanceRequestLogsPolicy>>,
    /// Store logical backups in the same region as the database instance
    #[serde(
        rename = "backup_same_region",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub backup_same_region: Option<Option<bool>>,
}

impl UpdateInstanceRequest {
    pub fn new() -> UpdateInstanceRequest {
        UpdateInstanceRequest {
            backup_schedule_frequency: None,
            backup_schedule_retention: None,
            is_backup_schedule_disabled: None,
            name: None,
            tags: None,
            logs_policy: None,
            backup_same_region: None,
        }
    }
}
