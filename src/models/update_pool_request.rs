/*
 * Account API
 *
 * # Introduction  The Account API allows you to manage projects. Project is Scalewayâ€™s resource management feature. Designed to help you organize your infrastructure and cloud services, the feature allows resources to be isolated and grouped into specific projects.
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UpdatePoolRequest {
    /// The new value for the enablement of autoscaling for the pool
    #[serde(
        rename = "autoscaling",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub autoscaling: Option<Option<bool>>,
    /// The new size for the pool
    #[serde(
        rename = "size",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub size: Option<Option<i32>>,
    /// The new minimun size for the pool
    #[serde(
        rename = "min_size",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub min_size: Option<Option<i32>>,
    /// The new maximum size for the pool
    #[serde(
        rename = "max_size",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub max_size: Option<Option<i32>>,
    /// The new value for the enablement of autohealing for the pool
    #[serde(
        rename = "autohealing",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub autohealing: Option<Option<bool>>,
    /// The new tags associated with the pool
    #[serde(
        rename = "tags",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub tags: Option<Option<Vec<String>>>,
    #[serde(
        rename = "kubelet_args",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub kubelet_args: Option<Option<Box<crate::models::UpdatePoolRequestKubeletArgs>>>,
    #[serde(rename = "upgrade_policy", skip_serializing_if = "Option::is_none")]
    pub upgrade_policy: Option<Box<crate::models::CreatePoolRequestUpgradePolicy>>,
}

impl UpdatePoolRequest {
    pub fn new() -> UpdatePoolRequest {
        UpdatePoolRequest {
            autoscaling: None,
            size: None,
            min_size: None,
            max_size: None,
            autohealing: None,
            tags: None,
            kubelet_args: None,
            upgrade_policy: None,
        }
    }
}
